// Code generated by pg-bindings generator. DO NOT EDIT.

package schema

import (
	"reflect"

	"github.com/stackrox/rox/generated/storage"
	"github.com/stackrox/rox/pkg/postgres"
	"github.com/stackrox/rox/pkg/postgres/walker"
	"github.com/stackrox/rox/pkg/sac/resources"
)

var (
	// CreateTableComplianceOperatorControlRuleV2EdgesStmt holds the create statement for table `compliance_operator_control_rule_v2_edges`.
	CreateTableComplianceOperatorControlRuleV2EdgesStmt = &postgres.CreateStmts{
		GormModel: (*ComplianceOperatorControlRuleV2Edges)(nil),
		Children:  []*postgres.CreateStmts{},
	}

	// ComplianceOperatorControlRuleV2EdgesSchema is the go schema for table `compliance_operator_control_rule_v2_edges`.
	ComplianceOperatorControlRuleV2EdgesSchema = func() *walker.Schema {
		schema := GetSchemaForTable("compliance_operator_control_rule_v2_edges")
		if schema != nil {
			return schema
		}
		schema = walker.Walk(reflect.TypeOf((*storage.ComplianceOperatorControlRuleV2Edge)(nil)), "compliance_operator_control_rule_v2_edges")
		schema.ScopingResource = resources.Compliance
		RegisterTable(schema, CreateTableComplianceOperatorControlRuleV2EdgesStmt)
		return schema
	}()
)

const (
	// ComplianceOperatorControlRuleV2EdgesTableName specifies the name of the table in postgres.
	ComplianceOperatorControlRuleV2EdgesTableName = "compliance_operator_control_rule_v2_edges"
)

// ComplianceOperatorControlRuleV2Edges holds the Gorm model for Postgres table `compliance_operator_control_rule_v2_edges`.
type ComplianceOperatorControlRuleV2Edges struct {
	ID         string `gorm:"column:id;type:varchar;primaryKey"`
	Serialized []byte `gorm:"column:serialized;type:bytea"`
}
