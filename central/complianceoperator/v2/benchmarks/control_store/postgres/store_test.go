// Code generated by pg-bindings generator. DO NOT EDIT.

//go:build sql_integration

package postgres

import (
	"context"
	"testing"

	"github.com/stackrox/rox/generated/storage"
	"github.com/stackrox/rox/pkg/postgres/pgtest"
	"github.com/stackrox/rox/pkg/sac"
	"github.com/stackrox/rox/pkg/testutils"
	"github.com/stretchr/testify/suite"
)

type ComplianceOperatorControlV2StoreSuite struct {
	suite.Suite
	store  Store
	testDB *pgtest.TestPostgres
}

func TestComplianceOperatorControlV2Store(t *testing.T) {
	suite.Run(t, new(ComplianceOperatorControlV2StoreSuite))
}

func (s *ComplianceOperatorControlV2StoreSuite) SetupSuite() {

	s.testDB = pgtest.ForT(s.T())
	s.store = New(s.testDB.DB)
}

func (s *ComplianceOperatorControlV2StoreSuite) SetupTest() {
	ctx := sac.WithAllAccess(context.Background())
	tag, err := s.testDB.Exec(ctx, "TRUNCATE compliance_operator_control_v2 CASCADE")
	s.T().Log("compliance_operator_control_v2", tag)
	s.store = New(s.testDB.DB)
	s.NoError(err)
}

func (s *ComplianceOperatorControlV2StoreSuite) TearDownSuite() {
	s.testDB.Teardown(s.T())
}

func (s *ComplianceOperatorControlV2StoreSuite) TestStore() {
	ctx := sac.WithAllAccess(context.Background())

	store := s.store

	complianceOperatorControlV2 := &storage.ComplianceOperatorControlV2{}
	s.NoError(testutils.FullInit(complianceOperatorControlV2, testutils.SimpleInitializer(), testutils.JSONFieldsFilter))

	foundComplianceOperatorControlV2, exists, err := store.Get(ctx, complianceOperatorControlV2.GetId())
	s.NoError(err)
	s.False(exists)
	s.Nil(foundComplianceOperatorControlV2)

}
