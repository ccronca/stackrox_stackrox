// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: internalapi/sensor/collector_iservice.proto

package sensor

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	central "github.com/stackrox/rox/generated/internalapi/central"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MsgToCollector struct {
	// Types that are valid to be assigned to Msg:
	//	*MsgToCollector_RuntimeFiltersUpdate
	Msg                  isMsgToCollector_Msg `protobuf_oneof:"msg"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *MsgToCollector) Reset()         { *m = MsgToCollector{} }
func (m *MsgToCollector) String() string { return proto.CompactTextString(m) }
func (*MsgToCollector) ProtoMessage()    {}
func (*MsgToCollector) Descriptor() ([]byte, []int) {
	return fileDescriptor_6ac8c5c7ee64002d, []int{0}
}
func (m *MsgToCollector) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgToCollector) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgToCollector.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgToCollector) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgToCollector.Merge(m, src)
}
func (m *MsgToCollector) XXX_Size() int {
	return m.Size()
}
func (m *MsgToCollector) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgToCollector.DiscardUnknown(m)
}

var xxx_messageInfo_MsgToCollector proto.InternalMessageInfo

type isMsgToCollector_Msg interface {
	isMsgToCollector_Msg()
	MarshalTo([]byte) (int, error)
	Size() int
	Clone() isMsgToCollector_Msg
}

type MsgToCollector_RuntimeFiltersUpdate struct {
	RuntimeFiltersUpdate *central.RuntimeFiltersUpdate `protobuf:"bytes,1,opt,name=runtime_filters_update,json=runtimeFiltersUpdate,proto3,oneof" json:"runtime_filters_update,omitempty"`
}

func (*MsgToCollector_RuntimeFiltersUpdate) isMsgToCollector_Msg() {}
func (m *MsgToCollector_RuntimeFiltersUpdate) Clone() isMsgToCollector_Msg {
	if m == nil {
		return nil
	}
	cloned := new(MsgToCollector_RuntimeFiltersUpdate)
	*cloned = *m

	cloned.RuntimeFiltersUpdate = m.RuntimeFiltersUpdate.Clone()
	return cloned
}

func (m *MsgToCollector) GetMsg() isMsgToCollector_Msg {
	if m != nil {
		return m.Msg
	}
	return nil
}

func (m *MsgToCollector) GetRuntimeFiltersUpdate() *central.RuntimeFiltersUpdate {
	if x, ok := m.GetMsg().(*MsgToCollector_RuntimeFiltersUpdate); ok {
		return x.RuntimeFiltersUpdate
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*MsgToCollector) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*MsgToCollector_RuntimeFiltersUpdate)(nil),
	}
}

func (m *MsgToCollector) MessageClone() proto.Message {
	return m.Clone()
}
func (m *MsgToCollector) Clone() *MsgToCollector {
	if m == nil {
		return nil
	}
	cloned := new(MsgToCollector)
	*cloned = *m

	if m.Msg != nil {
		cloned.Msg = m.Msg.Clone()
	}
	return cloned
}

type RuntimeFiltersRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RuntimeFiltersRequest) Reset()         { *m = RuntimeFiltersRequest{} }
func (m *RuntimeFiltersRequest) String() string { return proto.CompactTextString(m) }
func (*RuntimeFiltersRequest) ProtoMessage()    {}
func (*RuntimeFiltersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6ac8c5c7ee64002d, []int{1}
}
func (m *RuntimeFiltersRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RuntimeFiltersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RuntimeFiltersRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RuntimeFiltersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RuntimeFiltersRequest.Merge(m, src)
}
func (m *RuntimeFiltersRequest) XXX_Size() int {
	return m.Size()
}
func (m *RuntimeFiltersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RuntimeFiltersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RuntimeFiltersRequest proto.InternalMessageInfo

func (m *RuntimeFiltersRequest) MessageClone() proto.Message {
	return m.Clone()
}
func (m *RuntimeFiltersRequest) Clone() *RuntimeFiltersRequest {
	if m == nil {
		return nil
	}
	cloned := new(RuntimeFiltersRequest)
	*cloned = *m

	return cloned
}

type MsgFromCollector struct {
	// Types that are valid to be assigned to Msg:
	//	*MsgFromCollector_RuntimeFiltersRequest
	Msg                  isMsgFromCollector_Msg `protobuf_oneof:"msg"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *MsgFromCollector) Reset()         { *m = MsgFromCollector{} }
func (m *MsgFromCollector) String() string { return proto.CompactTextString(m) }
func (*MsgFromCollector) ProtoMessage()    {}
func (*MsgFromCollector) Descriptor() ([]byte, []int) {
	return fileDescriptor_6ac8c5c7ee64002d, []int{2}
}
func (m *MsgFromCollector) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgFromCollector) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgFromCollector.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgFromCollector) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgFromCollector.Merge(m, src)
}
func (m *MsgFromCollector) XXX_Size() int {
	return m.Size()
}
func (m *MsgFromCollector) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgFromCollector.DiscardUnknown(m)
}

var xxx_messageInfo_MsgFromCollector proto.InternalMessageInfo

type isMsgFromCollector_Msg interface {
	isMsgFromCollector_Msg()
	MarshalTo([]byte) (int, error)
	Size() int
	Clone() isMsgFromCollector_Msg
}

type MsgFromCollector_RuntimeFiltersRequest struct {
	RuntimeFiltersRequest *RuntimeFiltersRequest `protobuf:"bytes,1,opt,name=runtime_filters_request,json=runtimeFiltersRequest,proto3,oneof" json:"runtime_filters_request,omitempty"`
}

func (*MsgFromCollector_RuntimeFiltersRequest) isMsgFromCollector_Msg() {}
func (m *MsgFromCollector_RuntimeFiltersRequest) Clone() isMsgFromCollector_Msg {
	if m == nil {
		return nil
	}
	cloned := new(MsgFromCollector_RuntimeFiltersRequest)
	*cloned = *m

	cloned.RuntimeFiltersRequest = m.RuntimeFiltersRequest.Clone()
	return cloned
}

func (m *MsgFromCollector) GetMsg() isMsgFromCollector_Msg {
	if m != nil {
		return m.Msg
	}
	return nil
}

func (m *MsgFromCollector) GetRuntimeFiltersRequest() *RuntimeFiltersRequest {
	if x, ok := m.GetMsg().(*MsgFromCollector_RuntimeFiltersRequest); ok {
		return x.RuntimeFiltersRequest
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*MsgFromCollector) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*MsgFromCollector_RuntimeFiltersRequest)(nil),
	}
}

func (m *MsgFromCollector) MessageClone() proto.Message {
	return m.Clone()
}
func (m *MsgFromCollector) Clone() *MsgFromCollector {
	if m == nil {
		return nil
	}
	cloned := new(MsgFromCollector)
	*cloned = *m

	if m.Msg != nil {
		cloned.Msg = m.Msg.Clone()
	}
	return cloned
}

func init() {
	proto.RegisterType((*MsgToCollector)(nil), "sensor.MsgToCollector")
	proto.RegisterType((*RuntimeFiltersRequest)(nil), "sensor.RuntimeFiltersRequest")
	proto.RegisterType((*MsgFromCollector)(nil), "sensor.MsgFromCollector")
}

func init() {
	proto.RegisterFile("internalapi/sensor/collector_iservice.proto", fileDescriptor_6ac8c5c7ee64002d)
}

var fileDescriptor_6ac8c5c7ee64002d = []byte{
	// 278 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x91, 0x4f, 0x4a, 0xc3, 0x40,
	0x14, 0xc6, 0x3b, 0x88, 0x5d, 0x4c, 0x41, 0x4a, 0xb0, 0x36, 0x14, 0x0c, 0x92, 0x55, 0x45, 0x48,
	0xa4, 0xde, 0xa0, 0xc5, 0xd2, 0x4d, 0x37, 0xd1, 0x22, 0xba, 0x09, 0xe3, 0xf8, 0x0c, 0x03, 0xf3,
	0x27, 0xbe, 0x99, 0x78, 0x16, 0x8f, 0xe4, 0xd2, 0x23, 0x48, 0xbc, 0x88, 0xd0, 0x49, 0xab, 0x86,
	0xb8, 0xcd, 0xfb, 0x7d, 0xdf, 0xfb, 0xe5, 0x0d, 0xbd, 0x10, 0xda, 0x01, 0x6a, 0x26, 0x59, 0x29,
	0x52, 0x0b, 0xda, 0x1a, 0x4c, 0xb9, 0x91, 0x12, 0xb8, 0x33, 0x98, 0x0b, 0x0b, 0xf8, 0x2a, 0x38,
	0x24, 0x25, 0x1a, 0x67, 0x82, 0xbe, 0x07, 0x26, 0xe7, 0xbf, 0x43, 0x1c, 0xb4, 0x43, 0x26, 0x53,
	0xac, 0xb4, 0x13, 0x0a, 0xf2, 0x67, 0x21, 0x1d, 0xa0, 0xf5, 0x91, 0x58, 0xd3, 0xa3, 0xb5, 0x2d,
	0x6e, 0xcd, 0x62, 0xd7, 0x19, 0x6c, 0xe8, 0x49, 0x0b, 0xcd, 0xab, 0xf2, 0x89, 0x39, 0x08, 0xc9,
	0x19, 0x99, 0x0e, 0x66, 0xa7, 0x49, 0xd3, 0x98, 0x64, 0x1e, 0x5b, 0x7a, 0x6a, 0xb3, 0x85, 0x56,
	0xbd, 0xec, 0x18, 0x3b, 0xbe, 0xcf, 0x0f, 0xe9, 0x81, 0xb2, 0x45, 0x3c, 0xa6, 0xa3, 0xbf, 0xb1,
	0x0c, 0x5e, 0x2a, 0xb0, 0x2e, 0x46, 0x3a, 0x5c, 0xdb, 0x62, 0x89, 0x46, 0xfd, 0xa8, 0xdc, 0xd1,
	0x71, 0x5b, 0x05, 0x3d, 0xbe, 0x77, 0xf1, 0x7f, 0x9c, 0x74, 0x76, 0xae, 0x7a, 0xd9, 0x08, 0xbb,
	0x06, 0x8d, 0xcc, 0xec, 0x9e, 0x0e, 0xf7, 0xcb, 0x6e, 0xfc, 0x25, 0x83, 0x6b, 0x3a, 0x58, 0x18,
	0xa5, 0x2a, 0x2d, 0x38, 0x73, 0x10, 0x84, 0xbb, 0x0d, 0x6d, 0xb9, 0xc9, 0xbf, 0x93, 0x29, 0xb9,
	0x24, 0xf3, 0xf0, 0xbd, 0x8e, 0xc8, 0x47, 0x1d, 0x91, 0xcf, 0x3a, 0x22, 0x6f, 0x5f, 0x51, 0xef,
	0xa1, 0x79, 0x9c, 0xc7, 0xfe, 0xf6, 0xf0, 0x57, 0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0xbe, 0x91,
	0x9d, 0xbf, 0xda, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CollectorServiceClient is the client API for CollectorService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConnInterface.NewStream.
type CollectorServiceClient interface {
	Communicate(ctx context.Context, opts ...grpc.CallOption) (CollectorService_CommunicateClient, error)
}

type collectorServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewCollectorServiceClient(cc grpc.ClientConnInterface) CollectorServiceClient {
	return &collectorServiceClient{cc}
}

func (c *collectorServiceClient) Communicate(ctx context.Context, opts ...grpc.CallOption) (CollectorService_CommunicateClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CollectorService_serviceDesc.Streams[0], "/sensor.CollectorService/Communicate", opts...)
	if err != nil {
		return nil, err
	}
	x := &collectorServiceCommunicateClient{stream}
	return x, nil
}

type CollectorService_CommunicateClient interface {
	Send(*MsgFromCollector) error
	Recv() (*MsgFromCollector, error)
	grpc.ClientStream
}

type collectorServiceCommunicateClient struct {
	grpc.ClientStream
}

func (x *collectorServiceCommunicateClient) Send(m *MsgFromCollector) error {
	return x.ClientStream.SendMsg(m)
}

func (x *collectorServiceCommunicateClient) Recv() (*MsgFromCollector, error) {
	m := new(MsgFromCollector)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// CollectorServiceServer is the server API for CollectorService service.
type CollectorServiceServer interface {
	Communicate(CollectorService_CommunicateServer) error
}

// UnimplementedCollectorServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCollectorServiceServer struct {
}

func (*UnimplementedCollectorServiceServer) Communicate(srv CollectorService_CommunicateServer) error {
	return status.Errorf(codes.Unimplemented, "method Communicate not implemented")
}

func RegisterCollectorServiceServer(s *grpc.Server, srv CollectorServiceServer) {
	s.RegisterService(&_CollectorService_serviceDesc, srv)
}

func _CollectorService_Communicate_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(CollectorServiceServer).Communicate(&collectorServiceCommunicateServer{stream})
}

type CollectorService_CommunicateServer interface {
	Send(*MsgFromCollector) error
	Recv() (*MsgFromCollector, error)
	grpc.ServerStream
}

type collectorServiceCommunicateServer struct {
	grpc.ServerStream
}

func (x *collectorServiceCommunicateServer) Send(m *MsgFromCollector) error {
	return x.ServerStream.SendMsg(m)
}

func (x *collectorServiceCommunicateServer) Recv() (*MsgFromCollector, error) {
	m := new(MsgFromCollector)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _CollectorService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sensor.CollectorService",
	HandlerType: (*CollectorServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Communicate",
			Handler:       _CollectorService_Communicate_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "internalapi/sensor/collector_iservice.proto",
}

func (m *MsgToCollector) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgToCollector) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgToCollector) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Msg != nil {
		{
			size := m.Msg.Size()
			i -= size
			if _, err := m.Msg.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	return len(dAtA) - i, nil
}

func (m *MsgToCollector_RuntimeFiltersUpdate) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgToCollector_RuntimeFiltersUpdate) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.RuntimeFiltersUpdate != nil {
		{
			size, err := m.RuntimeFiltersUpdate.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintCollectorIservice(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}
func (m *RuntimeFiltersRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RuntimeFiltersRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RuntimeFiltersRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *MsgFromCollector) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgFromCollector) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgFromCollector) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Msg != nil {
		{
			size := m.Msg.Size()
			i -= size
			if _, err := m.Msg.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	return len(dAtA) - i, nil
}

func (m *MsgFromCollector_RuntimeFiltersRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgFromCollector_RuntimeFiltersRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.RuntimeFiltersRequest != nil {
		{
			size, err := m.RuntimeFiltersRequest.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintCollectorIservice(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}
func encodeVarintCollectorIservice(dAtA []byte, offset int, v uint64) int {
	offset -= sovCollectorIservice(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgToCollector) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Msg != nil {
		n += m.Msg.Size()
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MsgToCollector_RuntimeFiltersUpdate) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RuntimeFiltersUpdate != nil {
		l = m.RuntimeFiltersUpdate.Size()
		n += 1 + l + sovCollectorIservice(uint64(l))
	}
	return n
}
func (m *RuntimeFiltersRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MsgFromCollector) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Msg != nil {
		n += m.Msg.Size()
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MsgFromCollector_RuntimeFiltersRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RuntimeFiltersRequest != nil {
		l = m.RuntimeFiltersRequest.Size()
		n += 1 + l + sovCollectorIservice(uint64(l))
	}
	return n
}

func sovCollectorIservice(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozCollectorIservice(x uint64) (n int) {
	return sovCollectorIservice(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgToCollector) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCollectorIservice
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgToCollector: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgToCollector: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RuntimeFiltersUpdate", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCollectorIservice
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCollectorIservice
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthCollectorIservice
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &central.RuntimeFiltersUpdate{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Msg = &MsgToCollector_RuntimeFiltersUpdate{v}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCollectorIservice(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthCollectorIservice
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RuntimeFiltersRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCollectorIservice
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RuntimeFiltersRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RuntimeFiltersRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipCollectorIservice(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthCollectorIservice
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgFromCollector) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCollectorIservice
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgFromCollector: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgFromCollector: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RuntimeFiltersRequest", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCollectorIservice
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCollectorIservice
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthCollectorIservice
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &RuntimeFiltersRequest{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Msg = &MsgFromCollector_RuntimeFiltersRequest{v}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCollectorIservice(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthCollectorIservice
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipCollectorIservice(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowCollectorIservice
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowCollectorIservice
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowCollectorIservice
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthCollectorIservice
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupCollectorIservice
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthCollectorIservice
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthCollectorIservice        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowCollectorIservice          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupCollectorIservice = fmt.Errorf("proto: unexpected end of group")
)
