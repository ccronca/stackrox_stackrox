// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: internalapi/central/collector_runtime_config.proto

package central

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	storage "github.com/stackrox/rox/generated/storage"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CollectorRuntimeConfigACKFromSensor_Action int32

const (
	CollectorRuntimeConfigACKFromSensor_ACK  CollectorRuntimeConfigACKFromSensor_Action = 0
	CollectorRuntimeConfigACKFromSensor_NACK CollectorRuntimeConfigACKFromSensor_Action = 1
)

var CollectorRuntimeConfigACKFromSensor_Action_name = map[int32]string{
	0: "ACK",
	1: "NACK",
}

var CollectorRuntimeConfigACKFromSensor_Action_value = map[string]int32{
	"ACK":  0,
	"NACK": 1,
}

func (x CollectorRuntimeConfigACKFromSensor_Action) String() string {
	return proto.EnumName(CollectorRuntimeConfigACKFromSensor_Action_name, int32(x))
}

func (CollectorRuntimeConfigACKFromSensor_Action) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_31fa1cd776b84736, []int{0, 0}
}

type CollectorRuntimeConfigACKFromSensor struct {
	Error                string                                     `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Action               CollectorRuntimeConfigACKFromSensor_Action `protobuf:"varint,2,opt,name=action,proto3,enum=central.CollectorRuntimeConfigACKFromSensor_Action" json:"action,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                   `json:"-"`
	XXX_unrecognized     []byte                                     `json:"-"`
	XXX_sizecache        int32                                      `json:"-"`
}

func (m *CollectorRuntimeConfigACKFromSensor) Reset()         { *m = CollectorRuntimeConfigACKFromSensor{} }
func (m *CollectorRuntimeConfigACKFromSensor) String() string { return proto.CompactTextString(m) }
func (*CollectorRuntimeConfigACKFromSensor) ProtoMessage()    {}
func (*CollectorRuntimeConfigACKFromSensor) Descriptor() ([]byte, []int) {
	return fileDescriptor_31fa1cd776b84736, []int{0}
}
func (m *CollectorRuntimeConfigACKFromSensor) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CollectorRuntimeConfigACKFromSensor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CollectorRuntimeConfigACKFromSensor.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CollectorRuntimeConfigACKFromSensor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CollectorRuntimeConfigACKFromSensor.Merge(m, src)
}
func (m *CollectorRuntimeConfigACKFromSensor) XXX_Size() int {
	return m.Size()
}
func (m *CollectorRuntimeConfigACKFromSensor) XXX_DiscardUnknown() {
	xxx_messageInfo_CollectorRuntimeConfigACKFromSensor.DiscardUnknown(m)
}

var xxx_messageInfo_CollectorRuntimeConfigACKFromSensor proto.InternalMessageInfo

func (m *CollectorRuntimeConfigACKFromSensor) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *CollectorRuntimeConfigACKFromSensor) GetAction() CollectorRuntimeConfigACKFromSensor_Action {
	if m != nil {
		return m.Action
	}
	return CollectorRuntimeConfigACKFromSensor_ACK
}

func (m *CollectorRuntimeConfigACKFromSensor) MessageClone() proto.Message {
	return m.Clone()
}
func (m *CollectorRuntimeConfigACKFromSensor) Clone() *CollectorRuntimeConfigACKFromSensor {
	if m == nil {
		return nil
	}
	cloned := new(CollectorRuntimeConfigACKFromSensor)
	*cloned = *m

	return cloned
}

type CollectorRuntimeConfigWithCluster struct {
	ClusterName          string                          `protobuf:"bytes,1,opt,name=cluster_name,json=clusterName,proto3" json:"cluster_name,omitempty"`
	Config               *storage.CollectorRuntimeConfig `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *CollectorRuntimeConfigWithCluster) Reset()         { *m = CollectorRuntimeConfigWithCluster{} }
func (m *CollectorRuntimeConfigWithCluster) String() string { return proto.CompactTextString(m) }
func (*CollectorRuntimeConfigWithCluster) ProtoMessage()    {}
func (*CollectorRuntimeConfigWithCluster) Descriptor() ([]byte, []int) {
	return fileDescriptor_31fa1cd776b84736, []int{1}
}
func (m *CollectorRuntimeConfigWithCluster) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CollectorRuntimeConfigWithCluster) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CollectorRuntimeConfigWithCluster.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CollectorRuntimeConfigWithCluster) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CollectorRuntimeConfigWithCluster.Merge(m, src)
}
func (m *CollectorRuntimeConfigWithCluster) XXX_Size() int {
	return m.Size()
}
func (m *CollectorRuntimeConfigWithCluster) XXX_DiscardUnknown() {
	xxx_messageInfo_CollectorRuntimeConfigWithCluster.DiscardUnknown(m)
}

var xxx_messageInfo_CollectorRuntimeConfigWithCluster proto.InternalMessageInfo

func (m *CollectorRuntimeConfigWithCluster) GetClusterName() string {
	if m != nil {
		return m.ClusterName
	}
	return ""
}

func (m *CollectorRuntimeConfigWithCluster) GetConfig() *storage.CollectorRuntimeConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

func (m *CollectorRuntimeConfigWithCluster) MessageClone() proto.Message {
	return m.Clone()
}
func (m *CollectorRuntimeConfigWithCluster) Clone() *CollectorRuntimeConfigWithCluster {
	if m == nil {
		return nil
	}
	cloned := new(CollectorRuntimeConfigWithCluster)
	*cloned = *m

	cloned.Config = m.Config.Clone()
	return cloned
}

func init() {
	proto.RegisterEnum("central.CollectorRuntimeConfigACKFromSensor_Action", CollectorRuntimeConfigACKFromSensor_Action_name, CollectorRuntimeConfigACKFromSensor_Action_value)
	proto.RegisterType((*CollectorRuntimeConfigACKFromSensor)(nil), "central.CollectorRuntimeConfigACKFromSensor")
	proto.RegisterType((*CollectorRuntimeConfigWithCluster)(nil), "central.CollectorRuntimeConfigWithCluster")
}

func init() {
	proto.RegisterFile("internalapi/central/collector_runtime_config.proto", fileDescriptor_31fa1cd776b84736)
}

var fileDescriptor_31fa1cd776b84736 = []byte{
	// 283 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x32, 0xca, 0xcc, 0x2b, 0x49,
	0x2d, 0xca, 0x4b, 0xcc, 0x49, 0x2c, 0xc8, 0xd4, 0x4f, 0x4e, 0xcd, 0x2b, 0x29, 0x4a, 0xcc, 0xd1,
	0x4f, 0xce, 0xcf, 0xc9, 0x49, 0x4d, 0x2e, 0xc9, 0x2f, 0x8a, 0x2f, 0x2a, 0xcd, 0x2b, 0xc9, 0xcc,
	0x4d, 0x8d, 0x4f, 0xce, 0xcf, 0x4b, 0xcb, 0x4c, 0xd7, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62,
	0x87, 0xaa, 0x93, 0x52, 0x2b, 0x2e, 0xc9, 0x2f, 0x4a, 0x4c, 0x4f, 0x25, 0xa0, 0x41, 0x69, 0x29,
	0x23, 0x97, 0xb2, 0x33, 0x4c, 0x49, 0x10, 0x44, 0x85, 0x33, 0x58, 0x81, 0xa3, 0xb3, 0xb7, 0x5b,
	0x51, 0x7e, 0x6e, 0x70, 0x6a, 0x5e, 0x71, 0x7e, 0x91, 0x90, 0x08, 0x17, 0x6b, 0x6a, 0x51, 0x51,
	0x7e, 0x91, 0x04, 0xa3, 0x02, 0xa3, 0x06, 0x67, 0x10, 0x84, 0x23, 0xe4, 0xcd, 0xc5, 0x96, 0x98,
	0x5c, 0x92, 0x99, 0x9f, 0x27, 0xc1, 0xa4, 0xc0, 0xa8, 0xc1, 0x67, 0x64, 0xac, 0x07, 0xb5, 0x5f,
	0x8f, 0x08, 0x33, 0xf5, 0x1c, 0xc1, 0x5a, 0x83, 0xa0, 0x46, 0x28, 0x49, 0x73, 0xb1, 0x41, 0x44,
	0x84, 0xd8, 0xb9, 0x98, 0x1d, 0x9d, 0xbd, 0x05, 0x18, 0x84, 0x38, 0xb8, 0x58, 0xfc, 0x40, 0x2c,
	0x46, 0xa5, 0x7a, 0x2e, 0x45, 0xec, 0x46, 0x86, 0x67, 0x96, 0x64, 0x38, 0xe7, 0x94, 0x16, 0x97,
	0xa4, 0x16, 0x09, 0x29, 0x72, 0xf1, 0x24, 0x43, 0x98, 0xf1, 0x79, 0x89, 0xb9, 0xa9, 0x50, 0xb7,
	0x72, 0x43, 0xc5, 0xfc, 0x12, 0x73, 0x53, 0x85, 0xcc, 0xb9, 0xd8, 0x20, 0xfe, 0x07, 0xbb, 0x98,
	0xdb, 0x48, 0x5e, 0x0f, 0x1a, 0x50, 0x38, 0x5c, 0x1c, 0x04, 0x55, 0xee, 0xa4, 0x7f, 0xe2, 0x91,
	0x1c, 0xe3, 0x85, 0x47, 0x72, 0x8c, 0x0f, 0x1e, 0xc9, 0x31, 0xce, 0x78, 0x2c, 0xc7, 0x10, 0x25,
	0xab, 0xa7, 0x8f, 0x25, 0x86, 0xac, 0xa1, 0x74, 0x12, 0x1b, 0x38, 0x80, 0x8d, 0x01, 0x01, 0x00,
	0x00, 0xff, 0xff, 0xa3, 0xde, 0x61, 0x6b, 0xc7, 0x01, 0x00, 0x00,
}

func (m *CollectorRuntimeConfigACKFromSensor) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CollectorRuntimeConfigACKFromSensor) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CollectorRuntimeConfigACKFromSensor) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Action != 0 {
		i = encodeVarintCollectorRuntimeConfig(dAtA, i, uint64(m.Action))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Error) > 0 {
		i -= len(m.Error)
		copy(dAtA[i:], m.Error)
		i = encodeVarintCollectorRuntimeConfig(dAtA, i, uint64(len(m.Error)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *CollectorRuntimeConfigWithCluster) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CollectorRuntimeConfigWithCluster) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CollectorRuntimeConfigWithCluster) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Config != nil {
		{
			size, err := m.Config.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintCollectorRuntimeConfig(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.ClusterName) > 0 {
		i -= len(m.ClusterName)
		copy(dAtA[i:], m.ClusterName)
		i = encodeVarintCollectorRuntimeConfig(dAtA, i, uint64(len(m.ClusterName)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintCollectorRuntimeConfig(dAtA []byte, offset int, v uint64) int {
	offset -= sovCollectorRuntimeConfig(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *CollectorRuntimeConfigACKFromSensor) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Error)
	if l > 0 {
		n += 1 + l + sovCollectorRuntimeConfig(uint64(l))
	}
	if m.Action != 0 {
		n += 1 + sovCollectorRuntimeConfig(uint64(m.Action))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CollectorRuntimeConfigWithCluster) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ClusterName)
	if l > 0 {
		n += 1 + l + sovCollectorRuntimeConfig(uint64(l))
	}
	if m.Config != nil {
		l = m.Config.Size()
		n += 1 + l + sovCollectorRuntimeConfig(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovCollectorRuntimeConfig(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozCollectorRuntimeConfig(x uint64) (n int) {
	return sovCollectorRuntimeConfig(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *CollectorRuntimeConfigACKFromSensor) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCollectorRuntimeConfig
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CollectorRuntimeConfigACKFromSensor: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CollectorRuntimeConfigACKFromSensor: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Error", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCollectorRuntimeConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCollectorRuntimeConfig
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCollectorRuntimeConfig
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Error = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Action", wireType)
			}
			m.Action = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCollectorRuntimeConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Action |= CollectorRuntimeConfigACKFromSensor_Action(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipCollectorRuntimeConfig(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthCollectorRuntimeConfig
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CollectorRuntimeConfigWithCluster) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCollectorRuntimeConfig
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CollectorRuntimeConfigWithCluster: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CollectorRuntimeConfigWithCluster: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClusterName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCollectorRuntimeConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCollectorRuntimeConfig
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCollectorRuntimeConfig
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClusterName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Config", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCollectorRuntimeConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCollectorRuntimeConfig
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthCollectorRuntimeConfig
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Config == nil {
				m.Config = &storage.CollectorRuntimeConfig{}
			}
			if err := m.Config.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCollectorRuntimeConfig(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthCollectorRuntimeConfig
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipCollectorRuntimeConfig(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowCollectorRuntimeConfig
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowCollectorRuntimeConfig
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowCollectorRuntimeConfig
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthCollectorRuntimeConfig
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupCollectorRuntimeConfig
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthCollectorRuntimeConfig
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthCollectorRuntimeConfig        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowCollectorRuntimeConfig          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupCollectorRuntimeConfig = fmt.Errorf("proto: unexpected end of group")
)
