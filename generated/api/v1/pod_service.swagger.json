{
  "swagger": "2.0",
  "info": {
    "title": "api/v1/pod_service.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "PodService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/export/pods": {
      "get": {
        "operationId": "PodService_ExportPods",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/v1ExportPodResponse"
                },
                "error": {
                  "$ref": "#/definitions/googlerpcStatus"
                }
              },
              "title": "Stream result of v1ExportPodResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "timeout",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "query",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "PodService"
        ]
      }
    },
    "/v1/pods": {
      "get": {
        "summary": "GetPods returns the pods.",
        "operationId": "PodService_GetPods",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1PodsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagination.limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pagination.offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pagination.sortOption.field",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagination.sortOption.reversed",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.sortOption.aggregateBy.aggrFunc",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "UNSET",
              "COUNT",
              "MIN",
              "MAX"
            ],
            "default": "UNSET"
          },
          {
            "name": "pagination.sortOption.aggregateBy.distinct",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "PodService"
        ]
      }
    }
  },
  "definitions": {
    "PodContainerInstanceList": {
      "type": "object",
      "properties": {
        "instances": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/storageContainerInstance"
          }
        }
      }
    },
    "googlerpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "storageContainerInstance": {
      "type": "object",
      "properties": {
        "instanceId": {
          "$ref": "#/definitions/storageContainerInstanceID",
          "description": "The instance ID of this container."
        },
        "containingPodId": {
          "type": "string",
          "description": "The pod containing this container instance (kubernetes only)."
        },
        "containerName": {
          "type": "string",
          "description": "Container name."
        },
        "containerIps": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The IP addresses of this container."
        },
        "started": {
          "type": "string",
          "format": "date-time",
          "title": "The start time of the container"
        },
        "imageDigest": {
          "type": "string",
          "title": "Image ID"
        },
        "finished": {
          "type": "string",
          "format": "date-time",
          "description": "The finish time of the container, if it finished."
        },
        "exitCode": {
          "type": "integer",
          "format": "int32",
          "description": "The exit code of the container. Only valid when finished is populated."
        },
        "terminationReason": {
          "type": "string",
          "description": "The reason for the container's termination, if it finished."
        }
      },
      "description": "ContainerInstanceID allows to uniquely identify a container within a cluster."
    },
    "storageContainerInstanceID": {
      "type": "object",
      "properties": {
        "containerRuntime": {
          "$ref": "#/definitions/storageContainerRuntime",
          "description": "The runtime running this container."
        },
        "id": {
          "type": "string",
          "description": "The ID of the container, specific to the given runtime."
        },
        "node": {
          "type": "string",
          "description": "The node on which this container runs."
        }
      }
    },
    "storageContainerRuntime": {
      "type": "string",
      "enum": [
        "UNKNOWN_CONTAINER_RUNTIME",
        "DOCKER_CONTAINER_RUNTIME",
        "CRIO_CONTAINER_RUNTIME"
      ],
      "default": "UNKNOWN_CONTAINER_RUNTIME"
    },
    "storagePod": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "Pod UID"
        },
        "name": {
          "type": "string"
        },
        "deploymentId": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "clusterId": {
          "type": "string"
        },
        "liveInstances": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/storageContainerInstance"
          }
        },
        "terminatedInstances": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/PodContainerInstanceList"
          },
          "description": "Must be a list of lists, so we can perform search queries (does not work for maps that aren't <string, string>)\nThere is one bucket (list) per container name."
        },
        "started": {
          "type": "string",
          "format": "date-time",
          "description": "Time Kubernetes reports the pod was created."
        }
      },
      "description": "Pod represents information for a currently running pod or deleted pod in an active deployment."
    },
    "v1AggregateBy": {
      "type": "object",
      "properties": {
        "aggrFunc": {
          "$ref": "#/definitions/v1Aggregation"
        },
        "distinct": {
          "type": "boolean"
        }
      }
    },
    "v1Aggregation": {
      "type": "string",
      "enum": [
        "UNSET",
        "COUNT",
        "MIN",
        "MAX"
      ],
      "default": "UNSET"
    },
    "v1ExportPodResponse": {
      "type": "object",
      "properties": {
        "pod": {
          "$ref": "#/definitions/storagePod"
        }
      }
    },
    "v1Pagination": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "format": "int32"
        },
        "offset": {
          "type": "integer",
          "format": "int32"
        },
        "sortOption": {
          "$ref": "#/definitions/v1SortOption"
        },
        "sortOptions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SortOption"
          },
          "description": "This field is under development. It is not supported on any REST APIs."
        }
      }
    },
    "v1PodsResponse": {
      "type": "object",
      "properties": {
        "pods": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/storagePod"
          }
        }
      }
    },
    "v1SortOption": {
      "type": "object",
      "properties": {
        "field": {
          "type": "string"
        },
        "reversed": {
          "type": "boolean"
        },
        "aggregateBy": {
          "$ref": "#/definitions/v1AggregateBy",
          "description": "This field is under development. It is not supported on any REST APIs."
        }
      }
    }
  }
}
