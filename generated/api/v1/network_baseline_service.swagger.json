{
  "swagger": "2.0",
  "info": {
    "title": "api/v1/network_baseline_service.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "NetworkBaselineService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/networkbaseline/{deploymentId}/peers": {
      "patch": {
        "operationId": "NetworkBaselineService_ModifyBaselineStatusForPeers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Empty"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "deploymentId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NetworkBaselineServiceModifyBaselineStatusForPeersBody"
            }
          }
        ],
        "tags": [
          "NetworkBaselineService"
        ]
      }
    },
    "/v1/networkbaseline/{deploymentId}/status": {
      "post": {
        "operationId": "NetworkBaselineService_GetNetworkBaselineStatusForFlows",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1NetworkBaselineStatusResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "deploymentId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NetworkBaselineServiceGetNetworkBaselineStatusForFlowsBody"
            }
          }
        ],
        "tags": [
          "NetworkBaselineService"
        ]
      }
    },
    "/v1/networkbaseline/{id}": {
      "get": {
        "operationId": "NetworkBaselineService_GetNetworkBaseline",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/storageNetworkBaseline"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "NetworkBaselineService"
        ]
      }
    },
    "/v1/networkbaseline/{id}/lock": {
      "patch": {
        "operationId": "NetworkBaselineService_LockNetworkBaseline",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Empty"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NetworkBaselineServiceLockNetworkBaselineBody"
            }
          }
        ],
        "tags": [
          "NetworkBaselineService"
        ]
      }
    },
    "/v1/networkbaseline/{id}/unlock": {
      "patch": {
        "operationId": "NetworkBaselineService_UnlockNetworkBaseline",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Empty"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NetworkBaselineServiceUnlockNetworkBaselineBody"
            }
          }
        ],
        "tags": [
          "NetworkBaselineService"
        ]
      }
    }
  },
  "definitions": {
    "DeploymentListenPort": {
      "type": "object",
      "properties": {
        "port": {
          "type": "integer",
          "format": "int64"
        },
        "l4protocol": {
          "$ref": "#/definitions/storageL4Protocol"
        }
      }
    },
    "NetworkBaselineServiceGetNetworkBaselineStatusForFlowsBody": {
      "type": "object",
      "properties": {
        "peers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1NetworkBaselineStatusPeer"
          }
        }
      }
    },
    "NetworkBaselineServiceLockNetworkBaselineBody": {
      "type": "object"
    },
    "NetworkBaselineServiceModifyBaselineStatusForPeersBody": {
      "type": "object",
      "properties": {
        "peers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1NetworkBaselinePeerStatus"
          }
        }
      }
    },
    "NetworkBaselineServiceUnlockNetworkBaselineBody": {
      "type": "object"
    },
    "NetworkEntityInfoDeployment": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "cluster": {
          "type": "string"
        },
        "listenPorts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/DeploymentListenPort"
          }
        }
      }
    },
    "NetworkEntityInfoExternalSource": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "cidr": {
          "type": "string"
        },
        "default": {
          "type": "boolean",
          "description": "`default` indicates whether the external source is user-generated or system-generated."
        }
      },
      "description": "Update normalizeDupNameExtSrcs(...) in `central/networkgraph/aggregator/aggregator.go` whenever this message is updated."
    },
    "NetworkEntityScope": {
      "type": "object",
      "properties": {
        "clusterId": {
          "type": "string"
        }
      }
    },
    "googlerpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "storageL4Protocol": {
      "type": "string",
      "enum": [
        "L4_PROTOCOL_UNKNOWN",
        "L4_PROTOCOL_TCP",
        "L4_PROTOCOL_UDP",
        "L4_PROTOCOL_ICMP",
        "L4_PROTOCOL_RAW",
        "L4_PROTOCOL_SCTP",
        "L4_PROTOCOL_ANY"
      ],
      "default": "L4_PROTOCOL_UNKNOWN"
    },
    "storageNetworkBaseline": {
      "type": "object",
      "properties": {
        "deploymentId": {
          "type": "string",
          "description": "This is the ID of the baseline."
        },
        "clusterId": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "peers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/storageNetworkBaselinePeer"
          }
        },
        "forbiddenPeers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/storageNetworkBaselinePeer"
          },
          "description": "A list of peers that will never be added to the baseline.\nFor now, this contains peers that the user has manually removed.\nThis is used to ensure we don't add it back in the event\nwe see the flow again."
        },
        "observationPeriodEnd": {
          "type": "string",
          "format": "date-time"
        },
        "locked": {
          "type": "boolean",
          "title": "Indicates if this baseline has been locked by user.\nHere locking means:\n  1: Do not let system automatically add any allowed peer to baseline\n  2: Start reporting violations on flows that are not in the baseline"
        },
        "deploymentName": {
          "type": "string"
        }
      },
      "title": "NetworkBaseline represents a network baseline of a deployment. It contains all\nthe baseline peers and their respective connections.\nnext available tag: 8"
    },
    "storageNetworkBaselineConnectionProperties": {
      "type": "object",
      "properties": {
        "ingress": {
          "type": "boolean",
          "title": "Whether this connection is an ingress/egress, from the PoV\nof the deployment whose baseline this is in"
        },
        "port": {
          "type": "integer",
          "format": "int64",
          "title": "May be 0 if not applicable (e.g., icmp), and denotes the destination port"
        },
        "protocol": {
          "$ref": "#/definitions/storageL4Protocol"
        }
      },
      "title": "NetworkBaselineConnectionProperties represents information about a baseline connection\nnext available tag: 4"
    },
    "storageNetworkBaselinePeer": {
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/storageNetworkEntity"
        },
        "properties": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/storageNetworkBaselineConnectionProperties"
          },
          "title": "Will always have at least one element"
        }
      },
      "title": "NetworkBaselinePeer represents a baseline peer.\nnext available tag: 3"
    },
    "storageNetworkEntity": {
      "type": "object",
      "properties": {
        "info": {
          "$ref": "#/definitions/storageNetworkEntityInfo"
        },
        "scope": {
          "$ref": "#/definitions/NetworkEntityScope",
          "description": "`scope` represents known cluster network peers to which the flows must be scoped. In future, to restrict flows\nto more granular entities, such as deployment, scope could include deployment ID.\nNote: The highest scope level is cluster."
        }
      }
    },
    "storageNetworkEntityInfo": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/storageNetworkEntityInfoType"
        },
        "id": {
          "type": "string"
        },
        "deployment": {
          "$ref": "#/definitions/NetworkEntityInfoDeployment"
        },
        "externalSource": {
          "$ref": "#/definitions/NetworkEntityInfoExternalSource"
        }
      }
    },
    "storageNetworkEntityInfoType": {
      "type": "string",
      "enum": [
        "UNKNOWN_TYPE",
        "DEPLOYMENT",
        "INTERNET",
        "LISTEN_ENDPOINT",
        "EXTERNAL_SOURCE",
        "INTERNAL_ENTITIES"
      ],
      "default": "UNKNOWN_TYPE",
      "title": "- INTERNAL_ENTITIES: INTERNAL_ENTITIES is for grouping all internal entities under a single network graph node"
    },
    "v1Empty": {
      "type": "object"
    },
    "v1NetworkBaselinePeerEntity": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/storageNetworkEntityInfoType"
        }
      }
    },
    "v1NetworkBaselinePeerStatus": {
      "type": "object",
      "properties": {
        "peer": {
          "$ref": "#/definitions/v1NetworkBaselineStatusPeer"
        },
        "status": {
          "$ref": "#/definitions/v1NetworkBaselinePeerStatusStatus"
        }
      }
    },
    "v1NetworkBaselinePeerStatusStatus": {
      "type": "string",
      "enum": [
        "BASELINE",
        "ANOMALOUS"
      ],
      "default": "BASELINE",
      "title": "Status of this peer connection. As of now we only have two statuses:\n  - BASELINE: the connection is in the current deployment baseline\n  - ANOMALOUS: the connection is not recognized by the current deployment baseline"
    },
    "v1NetworkBaselineStatusPeer": {
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/v1NetworkBaselinePeerEntity",
          "description": "The peer entity of the connection. This can be constructed from the\nentity object of the networkgraph API. Only the ID and type are required."
        },
        "port": {
          "type": "integer",
          "format": "int64",
          "description": "The port and protocol of the destination of the given connection."
        },
        "protocol": {
          "$ref": "#/definitions/storageL4Protocol"
        },
        "ingress": {
          "type": "boolean",
          "description": "A boolean representing whether the query is for an ingress or egress\nconnection. This is defined with respect to the current deployment.\nThus:\n  - If the connection in question is in the outEdges of the current deployment,\n    this should be false.\n  - If it is in the outEdges of the peer deployment, this\n    should be true."
        }
      }
    },
    "v1NetworkBaselineStatusResponse": {
      "type": "object",
      "properties": {
        "statuses": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1NetworkBaselinePeerStatus"
          }
        }
      }
    }
  }
}
