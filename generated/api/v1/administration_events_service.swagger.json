{
  "swagger": "2.0",
  "info": {
    "title": "api/v1/administration_events_service.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "AdministrationEventService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/administration/events": {
      "get": {
        "summary": "ListAdministrationEvents returns the list of events after filtered by requested fields.",
        "operationId": "AdministrationEventService_ListAdministrationEvents",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListAdministrationEventsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "pagination.limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pagination.offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pagination.sortOption.field",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagination.sortOption.reversed",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.sortOption.aggregateBy.aggrFunc",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "UNSET",
              "COUNT",
              "MIN",
              "MAX"
            ],
            "default": "UNSET"
          },
          {
            "name": "pagination.sortOption.aggregateBy.distinct",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "filter.from",
            "description": "Matches events with last_occurred_at after a specific timestamp, i.e. the lower boundary.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filter.until",
            "description": "Matches events with last_occurred_at before a specific timestamp, i.e. the upper boundary.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filter.domain",
            "description": "Matches events from a specific domain.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "filter.resourceType",
            "description": "Matches events associated with a specific resource type.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "filter.type",
            "description": "Matches events based on their type.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "ADMINISTRATION_EVENT_TYPE_UNKNOWN",
                "ADMINISTRATION_EVENT_TYPE_GENERIC",
                "ADMINISTRATION_EVENT_TYPE_LOG_MESSAGE"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "filter.level",
            "description": "Matches events based on their level.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "ADMINISTRATION_EVENT_LEVEL_UNKNOWN",
                "ADMINISTRATION_EVENT_LEVEL_INFO",
                "ADMINISTRATION_EVENT_LEVEL_SUCCESS",
                "ADMINISTRATION_EVENT_LEVEL_WARNING",
                "ADMINISTRATION_EVENT_LEVEL_ERROR"
              ]
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "AdministrationEventService"
        ]
      }
    },
    "/v1/administration/events/{id}": {
      "get": {
        "summary": "GetAdministrationEvent retrieves an event by ID.",
        "operationId": "AdministrationEventService_GetAdministrationEvent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetAdministrationEventResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AdministrationEventService"
        ]
      }
    },
    "/v1/count/administration/events": {
      "get": {
        "summary": "CountAdministrationEvents returns the number of events after filtering by requested fields.",
        "operationId": "AdministrationEventService_CountAdministrationEvents",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CountAdministrationEventsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "filter.from",
            "description": "Matches events with last_occurred_at after a specific timestamp, i.e. the lower boundary.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filter.until",
            "description": "Matches events with last_occurred_at before a specific timestamp, i.e. the upper boundary.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filter.domain",
            "description": "Matches events from a specific domain.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "filter.resourceType",
            "description": "Matches events associated with a specific resource type.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "filter.type",
            "description": "Matches events based on their type.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "ADMINISTRATION_EVENT_TYPE_UNKNOWN",
                "ADMINISTRATION_EVENT_TYPE_GENERIC",
                "ADMINISTRATION_EVENT_TYPE_LOG_MESSAGE"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "filter.level",
            "description": "Matches events based on their level.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "ADMINISTRATION_EVENT_LEVEL_UNKNOWN",
                "ADMINISTRATION_EVENT_LEVEL_INFO",
                "ADMINISTRATION_EVENT_LEVEL_SUCCESS",
                "ADMINISTRATION_EVENT_LEVEL_WARNING",
                "ADMINISTRATION_EVENT_LEVEL_ERROR"
              ]
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "AdministrationEventService"
        ]
      }
    }
  },
  "definitions": {
    "AdministrationEventResource": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Resource type associated with the event. An event may refer to an underlying resource\nsuch as a particular image. In that case, the resource type will be filled here."
        },
        "id": {
          "type": "string",
          "description": "Resource ID associated with the event. If an event refers to an underlying resource,\nthe resource ID identifies the underlying resource. The resource ID is not guaranteed\nto be set, depending on the context of the administration event."
        },
        "name": {
          "type": "string",
          "description": "Resource name associated with the event. If an event refers to an underlying resource,\nthe resource name identifies the underlying resource. The resource name is not guaranteed\nto be set, depending on the context of the administration event."
        }
      },
      "description": "Resource holds all information about the resource associated with the event."
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1AdministrationEvent": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "UUID of the event."
        },
        "type": {
          "$ref": "#/definitions/v1AdministrationEventType",
          "description": "Type of the event."
        },
        "level": {
          "$ref": "#/definitions/v1AdministrationEventLevel",
          "description": "Level associated with the event. The level is categorized into danger, warn, info,\nsuccess."
        },
        "message": {
          "type": "string",
          "description": "Message associated with the event. The message may include detailed information\nfor this particular event."
        },
        "hint": {
          "type": "string",
          "description": "Hint associated with the event. The hint may include different information based\non the type of event. It can include instructions to resolve an event, or\ninformational hints."
        },
        "domain": {
          "type": "string",
          "description": "Domain associated with the event. An event's domain outlines the feature domain where\nthe event was created from. As an example, this might be \"Image Scanning\".\nIn case of events that cannot be tied to a specific domain, this will be \"General\"."
        },
        "resource": {
          "$ref": "#/definitions/AdministrationEventResource"
        },
        "numOccurrences": {
          "type": "string",
          "format": "int64",
          "description": "Occurrences associated with the event. When events may occur multiple times, the\noccurrences track the amount."
        },
        "lastOccurredAt": {
          "type": "string",
          "format": "date-time",
          "description": "Specifies the time when the event has last occurred."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Specifies the time when the event has been created."
        }
      },
      "description": "AdministrationEvents are administrative events emitted by Central. They are used to create\ntransparency for users for asynchronous, background tasks. Events are part of Central's\nsystem health view."
    },
    "v1AdministrationEventLevel": {
      "type": "string",
      "enum": [
        "ADMINISTRATION_EVENT_LEVEL_UNKNOWN",
        "ADMINISTRATION_EVENT_LEVEL_INFO",
        "ADMINISTRATION_EVENT_LEVEL_SUCCESS",
        "ADMINISTRATION_EVENT_LEVEL_WARNING",
        "ADMINISTRATION_EVENT_LEVEL_ERROR"
      ],
      "default": "ADMINISTRATION_EVENT_LEVEL_UNKNOWN",
      "description": "AdministrationEventLevel exposes the different levels of events."
    },
    "v1AdministrationEventType": {
      "type": "string",
      "enum": [
        "ADMINISTRATION_EVENT_TYPE_UNKNOWN",
        "ADMINISTRATION_EVENT_TYPE_GENERIC",
        "ADMINISTRATION_EVENT_TYPE_LOG_MESSAGE"
      ],
      "default": "ADMINISTRATION_EVENT_TYPE_UNKNOWN",
      "description": "AdministrationEventType exposes the different types of events."
    },
    "v1AdministrationEventsFilter": {
      "type": "object",
      "properties": {
        "from": {
          "type": "string",
          "format": "date-time",
          "description": "Matches events with last_occurred_at after a specific timestamp, i.e. the lower boundary."
        },
        "until": {
          "type": "string",
          "format": "date-time",
          "description": "Matches events with last_occurred_at before a specific timestamp, i.e. the upper boundary."
        },
        "domain": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Matches events from a specific domain."
        },
        "resourceType": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Matches events associated with a specific resource type."
        },
        "type": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1AdministrationEventType"
          },
          "description": "Matches events based on their type."
        },
        "level": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1AdministrationEventLevel"
          },
          "description": "Matches events based on their level."
        }
      }
    },
    "v1AggregateBy": {
      "type": "object",
      "properties": {
        "aggrFunc": {
          "$ref": "#/definitions/v1Aggregation"
        },
        "distinct": {
          "type": "boolean"
        }
      }
    },
    "v1Aggregation": {
      "type": "string",
      "enum": [
        "UNSET",
        "COUNT",
        "MIN",
        "MAX"
      ],
      "default": "UNSET"
    },
    "v1CountAdministrationEventsResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "The total number of events after filtering and deduplication."
        }
      }
    },
    "v1GetAdministrationEventResponse": {
      "type": "object",
      "properties": {
        "event": {
          "$ref": "#/definitions/v1AdministrationEvent"
        }
      }
    },
    "v1ListAdministrationEventsResponse": {
      "type": "object",
      "properties": {
        "events": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AdministrationEvent"
          }
        }
      }
    },
    "v1Pagination": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "format": "int32"
        },
        "offset": {
          "type": "integer",
          "format": "int32"
        },
        "sortOption": {
          "$ref": "#/definitions/v1SortOption"
        },
        "sortOptions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SortOption"
          },
          "description": "This field is under development. It is not supported on any REST APIs."
        }
      }
    },
    "v1SortOption": {
      "type": "object",
      "properties": {
        "field": {
          "type": "string"
        },
        "reversed": {
          "type": "boolean"
        },
        "aggregateBy": {
          "$ref": "#/definitions/v1AggregateBy",
          "description": "This field is under development. It is not supported on any REST APIs."
        }
      }
    }
  }
}
