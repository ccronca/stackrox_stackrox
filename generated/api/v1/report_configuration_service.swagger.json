{
  "swagger": "2.0",
  "info": {
    "title": "api/v1/report_configuration_service.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "ReportConfigurationService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/report-configurations-count": {
      "get": {
        "summary": "CountReportConfigurations returns the number of report configurations.",
        "operationId": "ReportConfigurationService_CountReportConfigurations",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CountReportConfigurationsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagination.limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pagination.offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pagination.sortOption.field",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagination.sortOption.reversed",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.sortOption.aggregateBy.aggrFunc",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "UNSET",
              "COUNT",
              "MIN",
              "MAX"
            ],
            "default": "UNSET"
          },
          {
            "name": "pagination.sortOption.aggregateBy.distinct",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "ReportConfigurationService"
        ]
      }
    },
    "/v1/report/configurations": {
      "get": {
        "operationId": "ReportConfigurationService_GetReportConfigurations",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetReportConfigurationsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagination.limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pagination.offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pagination.sortOption.field",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagination.sortOption.reversed",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.sortOption.aggregateBy.aggrFunc",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "UNSET",
              "COUNT",
              "MIN",
              "MAX"
            ],
            "default": "UNSET"
          },
          {
            "name": "pagination.sortOption.aggregateBy.distinct",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "ReportConfigurationService"
        ]
      },
      "post": {
        "summary": "PostReportConfiguration creates a report configuration",
        "operationId": "ReportConfigurationService_PostReportConfiguration",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1PostReportConfigurationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1PostReportConfigurationRequest"
            }
          }
        ],
        "tags": [
          "ReportConfigurationService"
        ]
      }
    },
    "/v1/report/configurations/{id}": {
      "get": {
        "operationId": "ReportConfigurationService_GetReportConfiguration",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetReportConfigurationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ReportConfigurationService"
        ]
      },
      "delete": {
        "summary": "DeleteReportConfiguration removes a report configuration given its id",
        "operationId": "ReportConfigurationService_DeleteReportConfiguration",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Empty"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ReportConfigurationService"
        ]
      },
      "put": {
        "summary": "UpdateReportConfiguration updates a report configuration",
        "operationId": "ReportConfigurationService_UpdateReportConfiguration",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Empty"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReportConfigurationServiceUpdateReportConfigurationBody"
            }
          }
        ],
        "tags": [
          "ReportConfigurationService"
        ]
      }
    }
  },
  "definitions": {
    "ReportConfigurationReportType": {
      "type": "string",
      "enum": [
        "VULNERABILITY"
      ],
      "default": "VULNERABILITY"
    },
    "ReportConfigurationServiceUpdateReportConfigurationBody": {
      "type": "object",
      "properties": {
        "reportConfig": {
          "$ref": "#/definitions/storageReportConfiguration"
        }
      }
    },
    "ReportLastRunStatusRunStatus": {
      "type": "string",
      "enum": [
        "SUCCESS",
        "FAILURE"
      ],
      "default": "SUCCESS"
    },
    "ScheduleDaysOfMonth": {
      "type": "object",
      "properties": {
        "days": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "title": "1 for 1st, 2 for 2nd .... 31 for 31st"
    },
    "ScheduleDaysOfWeek": {
      "type": "object",
      "properties": {
        "days": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "title": "Sunday = 0, Monday = 1, .... Saturday =  6"
    },
    "ScheduleIntervalType": {
      "type": "string",
      "enum": [
        "UNSET",
        "DAILY",
        "WEEKLY",
        "MONTHLY"
      ],
      "default": "UNSET"
    },
    "ScheduleWeeklyInterval": {
      "type": "object",
      "properties": {
        "day": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "SimpleAccessScopeRules": {
      "type": "object",
      "properties": {
        "includedClusters": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "includedNamespaces": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/SimpleAccessScopeRulesNamespace"
          }
        },
        "clusterLabelSelectors": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/storageSetBasedLabelSelector"
          }
        },
        "namespaceLabelSelectors": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/storageSetBasedLabelSelector"
          }
        }
      },
      "description": "Each element of any repeated field is an individual rule. Rules are\njoined by logical OR: if there exists a rule allowing resource `x`,\n`x` is in the access scope."
    },
    "SimpleAccessScopeRulesNamespace": {
      "type": "object",
      "properties": {
        "clusterName": {
          "type": "string",
          "description": "Both fields must be set."
        },
        "namespaceName": {
          "type": "string"
        }
      }
    },
    "VulnerabilityReportFiltersFixability": {
      "type": "string",
      "enum": [
        "BOTH",
        "FIXABLE",
        "NOT_FIXABLE"
      ],
      "default": "BOTH"
    },
    "VulnerabilityReportFiltersImageType": {
      "type": "string",
      "enum": [
        "DEPLOYED",
        "WATCHED"
      ],
      "default": "DEPLOYED"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "storageEmailNotifierConfiguration": {
      "type": "object",
      "properties": {
        "notifierId": {
          "type": "string"
        },
        "mailingLists": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "customSubject": {
          "type": "string"
        },
        "customBody": {
          "type": "string"
        }
      }
    },
    "storageNotifierConfiguration": {
      "type": "object",
      "properties": {
        "emailConfig": {
          "$ref": "#/definitions/storageEmailNotifierConfiguration"
        },
        "id": {
          "type": "string",
          "title": "@gotags: sql:\"fk(Notifier:id),restrict-delete\""
        }
      }
    },
    "storageReportConfiguration": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "@gotags: sql:\"pk\""
        },
        "name": {
          "type": "string",
          "title": "@gotags: search:\"Report Name\""
        },
        "description": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/ReportConfigurationReportType",
          "title": "@gotags: search:\"Report Type\""
        },
        "vulnReportFilters": {
          "$ref": "#/definitions/storageVulnerabilityReportFilters"
        },
        "scopeId": {
          "type": "string",
          "title": "@gotags: search:\"Embedded Collection ID\""
        },
        "emailConfig": {
          "$ref": "#/definitions/storageEmailNotifierConfiguration"
        },
        "schedule": {
          "$ref": "#/definitions/storageSchedule"
        },
        "lastRunStatus": {
          "$ref": "#/definitions/storageReportLastRunStatus"
        },
        "lastSuccessfulRunTime": {
          "type": "string",
          "format": "date-time"
        },
        "resourceScope": {
          "$ref": "#/definitions/storageResourceScope"
        },
        "notifiers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/storageNotifierConfiguration"
          }
        },
        "creator": {
          "$ref": "#/definitions/storageSlimUser",
          "title": "@gotags: sql:\"ignore_labels(User ID)\""
        },
        "version": {
          "type": "integer",
          "format": "int32",
          "title": "version=0 is unmigrated v1 config, version=1 is migrated v1 config and version=2 is v2 config"
        }
      }
    },
    "storageReportLastRunStatus": {
      "type": "object",
      "properties": {
        "reportStatus": {
          "$ref": "#/definitions/ReportLastRunStatusRunStatus"
        },
        "lastRunTime": {
          "type": "string",
          "format": "date-time"
        },
        "errorMsg": {
          "type": "string"
        }
      }
    },
    "storageResourceScope": {
      "type": "object",
      "properties": {
        "collectionId": {
          "type": "string",
          "title": "@gotags: search:\"Collection ID\""
        }
      }
    },
    "storageSchedule": {
      "type": "object",
      "properties": {
        "intervalType": {
          "$ref": "#/definitions/ScheduleIntervalType"
        },
        "hour": {
          "type": "integer",
          "format": "int32"
        },
        "minute": {
          "type": "integer",
          "format": "int32"
        },
        "weekly": {
          "$ref": "#/definitions/ScheduleWeeklyInterval"
        },
        "daysOfWeek": {
          "$ref": "#/definitions/ScheduleDaysOfWeek"
        },
        "daysOfMonth": {
          "$ref": "#/definitions/ScheduleDaysOfMonth"
        }
      }
    },
    "storageSetBasedLabelSelector": {
      "type": "object",
      "properties": {
        "requirements": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/storageSetBasedLabelSelectorRequirement"
          }
        }
      },
      "description": "SetBasedLabelSelector only allows set-based label requirements.\n\nNext available tag: 3"
    },
    "storageSetBasedLabelSelectorOperator": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "IN",
        "NOT_IN",
        "EXISTS",
        "NOT_EXISTS"
      ],
      "default": "UNKNOWN"
    },
    "storageSetBasedLabelSelectorRequirement": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "op": {
          "$ref": "#/definitions/storageSetBasedLabelSelectorOperator"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "Next available tag: 4"
    },
    "storageSlimUser": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "@gotags: search:\"User ID\""
        },
        "name": {
          "type": "string",
          "title": "@gotags: search:\"User Name\""
        }
      }
    },
    "storageVulnerabilityReportFilters": {
      "type": "object",
      "properties": {
        "fixability": {
          "$ref": "#/definitions/VulnerabilityReportFiltersFixability"
        },
        "sinceLastReport": {
          "type": "boolean"
        },
        "severities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/storageVulnerabilitySeverity"
          }
        },
        "imageTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VulnerabilityReportFiltersImageType"
          }
        },
        "allVuln": {
          "type": "boolean"
        },
        "sinceLastSentScheduledReport": {
          "type": "boolean"
        },
        "sinceStartDate": {
          "type": "string",
          "format": "date-time"
        },
        "accessScopeRules": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/SimpleAccessScopeRules"
          }
        }
      }
    },
    "storageVulnerabilitySeverity": {
      "type": "string",
      "enum": [
        "UNKNOWN_VULNERABILITY_SEVERITY",
        "LOW_VULNERABILITY_SEVERITY",
        "MODERATE_VULNERABILITY_SEVERITY",
        "IMPORTANT_VULNERABILITY_SEVERITY",
        "CRITICAL_VULNERABILITY_SEVERITY"
      ],
      "default": "UNKNOWN_VULNERABILITY_SEVERITY"
    },
    "v1AggregateBy": {
      "type": "object",
      "properties": {
        "aggrFunc": {
          "$ref": "#/definitions/v1Aggregation"
        },
        "distinct": {
          "type": "boolean"
        }
      }
    },
    "v1Aggregation": {
      "type": "string",
      "enum": [
        "UNSET",
        "COUNT",
        "MIN",
        "MAX"
      ],
      "default": "UNSET"
    },
    "v1CountReportConfigurationsResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "v1Empty": {
      "type": "object"
    },
    "v1GetReportConfigurationResponse": {
      "type": "object",
      "properties": {
        "reportConfig": {
          "$ref": "#/definitions/storageReportConfiguration"
        }
      }
    },
    "v1GetReportConfigurationsResponse": {
      "type": "object",
      "properties": {
        "reportConfigs": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/storageReportConfiguration"
          }
        }
      }
    },
    "v1Pagination": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "format": "int32"
        },
        "offset": {
          "type": "integer",
          "format": "int32"
        },
        "sortOption": {
          "$ref": "#/definitions/v1SortOption"
        },
        "sortOptions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SortOption"
          },
          "description": "This field is under development. It is not supported on any REST APIs."
        }
      }
    },
    "v1PostReportConfigurationRequest": {
      "type": "object",
      "properties": {
        "reportConfig": {
          "$ref": "#/definitions/storageReportConfiguration"
        }
      }
    },
    "v1PostReportConfigurationResponse": {
      "type": "object",
      "properties": {
        "reportConfig": {
          "$ref": "#/definitions/storageReportConfiguration"
        }
      }
    },
    "v1SortOption": {
      "type": "object",
      "properties": {
        "field": {
          "type": "string"
        },
        "reversed": {
          "type": "boolean"
        },
        "aggregateBy": {
          "$ref": "#/definitions/v1AggregateBy",
          "description": "This field is under development. It is not supported on any REST APIs."
        }
      }
    }
  }
}
