{
  "swagger": "2.0",
  "info": {
    "title": "api/v1/service_account_service.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "ServiceAccountService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/serviceaccounts": {
      "get": {
        "operationId": "ServiceAccountService_ListServiceAccounts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListServiceAccountResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagination.limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pagination.offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pagination.sortOption.field",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagination.sortOption.reversed",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.sortOption.aggregateBy.aggrFunc",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "UNSET",
              "COUNT",
              "MIN",
              "MAX"
            ],
            "default": "UNSET"
          },
          {
            "name": "pagination.sortOption.aggregateBy.distinct",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "ServiceAccountService"
        ]
      }
    },
    "/v1/serviceaccounts/{id}": {
      "get": {
        "operationId": "ServiceAccountService_GetServiceAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetServiceAccountResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ServiceAccountService"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "storageK8sRole": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "@gotags: search:\"Role ID,hidden\" sql:\"pk,type(uuid)\""
        },
        "name": {
          "type": "string",
          "title": "@gotags: search:\"Role\""
        },
        "namespace": {
          "type": "string",
          "title": "@gotags: search:\"Namespace,store\""
        },
        "clusterId": {
          "type": "string",
          "title": "@gotags: search:\"Cluster ID,store,hidden\" sql:\"type(uuid)\""
        },
        "clusterName": {
          "type": "string",
          "title": "@gotags: search:\"Cluster\""
        },
        "clusterRole": {
          "type": "boolean",
          "title": "@gotags: search:\"Cluster Role\""
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "@gotags: search:\"Role Label\""
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "@gotags: search:\"Role Annotation\""
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "rules": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/storagePolicyRule"
          },
          "title": "@gotags: sensorhash:\"set\""
        }
      },
      "title": "Properties of an individual k8s Role or ClusterRole.\n////////////////////////////////////////"
    },
    "storagePolicyRule": {
      "type": "object",
      "properties": {
        "verbs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "apiGroups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "resources": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "nonResourceUrls": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "resourceNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "Properties of an individual rules that grant permissions to resources.\n////////////////////////////////////////"
    },
    "storageServiceAccount": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "@gotags: sql:\"pk,type(uuid)\""
        },
        "name": {
          "type": "string",
          "title": "@gotags: search:\"Service Account,store\""
        },
        "namespace": {
          "type": "string",
          "title": "@gotags: search:\"Namespace,store\""
        },
        "clusterName": {
          "type": "string",
          "title": "@gotags: search:\"Cluster,store\""
        },
        "clusterId": {
          "type": "string",
          "title": "@gotags: search:\"Cluster ID,store,hidden\" sql:\"type(uuid)\""
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "@gotags: search:\"Service Account Label\""
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "@gotags: search:\"Service Account Annotation\""
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "automountToken": {
          "type": "boolean"
        },
        "secrets": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "imagePullSecrets": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "Any properties of an individual service account.\n(regardless of time, scope, or context)\n////////////////////////////////////////"
    },
    "v1AggregateBy": {
      "type": "object",
      "properties": {
        "aggrFunc": {
          "$ref": "#/definitions/v1Aggregation"
        },
        "distinct": {
          "type": "boolean"
        }
      }
    },
    "v1Aggregation": {
      "type": "string",
      "enum": [
        "UNSET",
        "COUNT",
        "MIN",
        "MAX"
      ],
      "default": "UNSET"
    },
    "v1GetServiceAccountResponse": {
      "type": "object",
      "properties": {
        "saAndRole": {
          "$ref": "#/definitions/v1ServiceAccountAndRoles"
        }
      },
      "title": "One service account\nNext Tag: 2"
    },
    "v1ListServiceAccountResponse": {
      "type": "object",
      "properties": {
        "saAndRoles": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ServiceAccountAndRoles"
          }
        }
      },
      "title": "A list of service accounts (free of scoped information)\nNext Tag: 2"
    },
    "v1Pagination": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "format": "int32"
        },
        "offset": {
          "type": "integer",
          "format": "int32"
        },
        "sortOption": {
          "$ref": "#/definitions/v1SortOption"
        },
        "sortOptions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SortOption"
          },
          "description": "This field is under development. It is not supported on any REST APIs."
        }
      }
    },
    "v1SADeploymentRelationship": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "Id of the deployment using the service account"
        },
        "name": {
          "type": "string",
          "description": "Name of the deployment."
        }
      },
      "title": "Service accounts can be used by a deployment.\nNext Tag: 3"
    },
    "v1ScopedRoles": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/storageK8sRole"
          }
        }
      }
    },
    "v1ServiceAccountAndRoles": {
      "type": "object",
      "properties": {
        "serviceAccount": {
          "$ref": "#/definitions/storageServiceAccount"
        },
        "clusterRoles": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/storageK8sRole"
          }
        },
        "scopedRoles": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ScopedRoles"
          }
        },
        "deploymentRelationships": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SADeploymentRelationship"
          }
        }
      },
      "title": "A service account and the roles that reference it\nNext Tag: 5"
    },
    "v1SortOption": {
      "type": "object",
      "properties": {
        "field": {
          "type": "string"
        },
        "reversed": {
          "type": "boolean"
        },
        "aggregateBy": {
          "$ref": "#/definitions/v1AggregateBy",
          "description": "This field is under development. It is not supported on any REST APIs."
        }
      }
    }
  }
}
