{
  "swagger": "2.0",
  "info": {
    "title": "api/v1/image_integration_service.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "ImageIntegrationService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/imageintegrations": {
      "get": {
        "summary": "GetImageIntegrations returns all image integrations that match the request filters.",
        "operationId": "ImageIntegrationService_GetImageIntegrations",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetImageIntegrationsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ImageIntegrationService"
        ]
      },
      "post": {
        "summary": "PostImageIntegration creates a image integration.",
        "operationId": "ImageIntegrationService_PostImageIntegration",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/storageImageIntegration"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storageImageIntegration"
            }
          }
        ],
        "tags": [
          "ImageIntegrationService"
        ]
      }
    },
    "/v1/imageintegrations/test": {
      "post": {
        "summary": "TestImageIntegration checks if the given image integration is correctly configured, without using stored credential reconciliation.",
        "operationId": "ImageIntegrationService_TestImageIntegration",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Empty"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storageImageIntegration"
            }
          }
        ],
        "tags": [
          "ImageIntegrationService"
        ]
      }
    },
    "/v1/imageintegrations/test/updated": {
      "post": {
        "summary": "TestUpdatedImageIntegration checks if the given image integration is correctly configured, with optional stored credential reconciliation.",
        "operationId": "ImageIntegrationService_TestUpdatedImageIntegration",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Empty"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateImageIntegrationRequest"
            }
          }
        ],
        "tags": [
          "ImageIntegrationService"
        ]
      }
    },
    "/v1/imageintegrations/{config.id}": {
      "patch": {
        "summary": "UpdateImageIntegration modifies a given image integration, with optional stored credential reconciliation.",
        "operationId": "ImageIntegrationService_UpdateImageIntegration",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Empty"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "config.id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ImageIntegrationServiceUpdateImageIntegrationBody"
            }
          }
        ],
        "tags": [
          "ImageIntegrationService"
        ]
      }
    },
    "/v1/imageintegrations/{id}": {
      "get": {
        "summary": "GetImageIntegration returns the image integration given its ID.",
        "operationId": "ImageIntegrationService_GetImageIntegration",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/storageImageIntegration"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ImageIntegrationService"
        ]
      },
      "delete": {
        "summary": "DeleteImageIntegration removes a image integration given its ID.",
        "operationId": "ImageIntegrationService_DeleteImageIntegration",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Empty"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ImageIntegrationService"
        ]
      },
      "put": {
        "summary": "PutImageIntegration modifies a given image integration, without using stored credential reconciliation.",
        "operationId": "ImageIntegrationService_PutImageIntegration",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Empty"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ImageIntegrationServicePutImageIntegrationBody"
            }
          }
        ],
        "tags": [
          "ImageIntegrationService"
        ]
      }
    }
  },
  "definitions": {
    "ECRConfigAuthorizationData": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "expiresAt": {
          "type": "string",
          "format": "date-time"
        }
      },
      "description": "An authorization data represents the IAM authentication credentials and\ncan be used to access any Amazon ECR registry that the IAM principal has\naccess to."
    },
    "ImageIntegrationServicePutImageIntegrationBody": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "categories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/storageImageIntegrationCategory"
          }
        },
        "clairify": {
          "$ref": "#/definitions/storageClairifyConfig"
        },
        "scannerV4": {
          "$ref": "#/definitions/storageScannerV4Config"
        },
        "docker": {
          "$ref": "#/definitions/storageDockerConfig"
        },
        "quay": {
          "$ref": "#/definitions/storageQuayConfig"
        },
        "ecr": {
          "$ref": "#/definitions/storageECRConfig"
        },
        "google": {
          "$ref": "#/definitions/storageGoogleConfig"
        },
        "clair": {
          "$ref": "#/definitions/storageClairConfig"
        },
        "clairV4": {
          "$ref": "#/definitions/storageClairV4Config"
        },
        "ibm": {
          "$ref": "#/definitions/storageIBMRegistryConfig"
        },
        "azure": {
          "$ref": "#/definitions/storageAzureConfig"
        },
        "autogenerated": {
          "type": "boolean"
        },
        "clusterId": {
          "type": "string"
        },
        "skipTestIntegration": {
          "type": "boolean"
        },
        "source": {
          "$ref": "#/definitions/ImageIntegrationSource"
        }
      },
      "title": "Next Tag: 25"
    },
    "ImageIntegrationServiceUpdateImageIntegrationBody": {
      "type": "object",
      "properties": {
        "config": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "categories": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/storageImageIntegrationCategory"
              }
            },
            "clairify": {
              "$ref": "#/definitions/storageClairifyConfig"
            },
            "scannerV4": {
              "$ref": "#/definitions/storageScannerV4Config"
            },
            "docker": {
              "$ref": "#/definitions/storageDockerConfig"
            },
            "quay": {
              "$ref": "#/definitions/storageQuayConfig"
            },
            "ecr": {
              "$ref": "#/definitions/storageECRConfig"
            },
            "google": {
              "$ref": "#/definitions/storageGoogleConfig"
            },
            "clair": {
              "$ref": "#/definitions/storageClairConfig"
            },
            "clairV4": {
              "$ref": "#/definitions/storageClairV4Config"
            },
            "ibm": {
              "$ref": "#/definitions/storageIBMRegistryConfig"
            },
            "azure": {
              "$ref": "#/definitions/storageAzureConfig"
            },
            "autogenerated": {
              "type": "boolean"
            },
            "clusterId": {
              "type": "string"
            },
            "skipTestIntegration": {
              "type": "boolean"
            },
            "source": {
              "$ref": "#/definitions/ImageIntegrationSource"
            }
          },
          "title": "Next Tag: 25"
        },
        "updatePassword": {
          "type": "boolean",
          "description": "When false, use the stored credentials of an existing image integration given its ID."
        }
      }
    },
    "ImageIntegrationSource": {
      "type": "object",
      "properties": {
        "clusterId": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "imagePullSecretName": {
          "type": "string"
        }
      }
    },
    "QuayConfigRobotAccount": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string",
          "description": "The server will mask the value of this password in responses and logs."
        }
      },
      "title": "Robot account is Quay's named tokens that can be granted permissions on multiple repositories under an organization.\nIt's Quay's recommended authentication model when possible (i.e. registry integration)"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "storageAzureConfig": {
      "type": "object",
      "properties": {
        "endpoint": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string",
          "description": "The password for the integration. The server will mask the value of this credential in responses and logs."
        },
        "wifEnabled": {
          "type": "boolean"
        }
      }
    },
    "storageClairConfig": {
      "type": "object",
      "properties": {
        "endpoint": {
          "type": "string"
        },
        "insecure": {
          "type": "boolean"
        }
      }
    },
    "storageClairV4Config": {
      "type": "object",
      "properties": {
        "endpoint": {
          "type": "string"
        },
        "insecure": {
          "type": "boolean"
        }
      }
    },
    "storageClairifyConfig": {
      "type": "object",
      "properties": {
        "endpoint": {
          "type": "string"
        },
        "grpcEndpoint": {
          "type": "string"
        },
        "numConcurrentScans": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "storageDockerConfig": {
      "type": "object",
      "properties": {
        "endpoint": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string",
          "description": "The password for the integration. The server will mask the value of this credential in responses and logs."
        },
        "insecure": {
          "type": "boolean"
        }
      }
    },
    "storageECRConfig": {
      "type": "object",
      "properties": {
        "registryId": {
          "type": "string"
        },
        "accessKeyId": {
          "type": "string",
          "description": "The access key ID for the integration. The server will mask the value of this credential in responses and logs."
        },
        "secretAccessKey": {
          "type": "string",
          "description": "The secret access key for the integration. The server will mask the value of this credential in responses and logs."
        },
        "region": {
          "type": "string"
        },
        "useIam": {
          "type": "boolean"
        },
        "endpoint": {
          "type": "string"
        },
        "useAssumeRole": {
          "type": "boolean"
        },
        "assumeRoleId": {
          "type": "string"
        },
        "assumeRoleExternalId": {
          "type": "string"
        },
        "authorizationData": {
          "$ref": "#/definitions/ECRConfigAuthorizationData"
        }
      }
    },
    "storageGoogleConfig": {
      "type": "object",
      "properties": {
        "endpoint": {
          "type": "string"
        },
        "serviceAccount": {
          "type": "string",
          "description": "The service account for the integration. The server will mask the value of this credential in responses and logs."
        },
        "project": {
          "type": "string"
        },
        "wifEnabled": {
          "type": "boolean"
        }
      }
    },
    "storageIBMRegistryConfig": {
      "type": "object",
      "properties": {
        "endpoint": {
          "type": "string"
        },
        "apiKey": {
          "type": "string",
          "description": "The API key for the integration. The server will mask the value of this credential in responses and logs."
        }
      }
    },
    "storageImageIntegration": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "categories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/storageImageIntegrationCategory"
          }
        },
        "clairify": {
          "$ref": "#/definitions/storageClairifyConfig"
        },
        "scannerV4": {
          "$ref": "#/definitions/storageScannerV4Config"
        },
        "docker": {
          "$ref": "#/definitions/storageDockerConfig"
        },
        "quay": {
          "$ref": "#/definitions/storageQuayConfig"
        },
        "ecr": {
          "$ref": "#/definitions/storageECRConfig"
        },
        "google": {
          "$ref": "#/definitions/storageGoogleConfig"
        },
        "clair": {
          "$ref": "#/definitions/storageClairConfig"
        },
        "clairV4": {
          "$ref": "#/definitions/storageClairV4Config"
        },
        "ibm": {
          "$ref": "#/definitions/storageIBMRegistryConfig"
        },
        "azure": {
          "$ref": "#/definitions/storageAzureConfig"
        },
        "autogenerated": {
          "type": "boolean"
        },
        "clusterId": {
          "type": "string"
        },
        "skipTestIntegration": {
          "type": "boolean"
        },
        "source": {
          "$ref": "#/definitions/ImageIntegrationSource"
        }
      },
      "title": "Next Tag: 25"
    },
    "storageImageIntegrationCategory": {
      "type": "string",
      "enum": [
        "REGISTRY",
        "SCANNER",
        "NODE_SCANNER"
      ],
      "default": "REGISTRY",
      "description": " - NODE_SCANNER: Image and Node integrations are currently done on the same form in the UI\nso the image integration is also currently used for node integrations.\nThis decision was made because we currently only support one node scanner (our scanner)."
    },
    "storageQuayConfig": {
      "type": "object",
      "properties": {
        "endpoint": {
          "type": "string"
        },
        "oauthToken": {
          "type": "string",
          "description": "The OAuth token for the integration. Required if this is a scanner integration. The server will mask the value of this credential in responses and logs."
        },
        "insecure": {
          "type": "boolean"
        },
        "registryRobotCredentials": {
          "$ref": "#/definitions/QuayConfigRobotAccount",
          "description": "For registry integrations, Quay recommends using robot accounts. oauthToken will continue to be used for scanner integration."
        }
      }
    },
    "storageScannerV4Config": {
      "type": "object",
      "properties": {
        "numConcurrentScans": {
          "type": "integer",
          "format": "int32"
        },
        "indexerEndpoint": {
          "type": "string"
        },
        "matcherEndpoint": {
          "type": "string"
        }
      }
    },
    "v1Empty": {
      "type": "object"
    },
    "v1GetImageIntegrationsResponse": {
      "type": "object",
      "properties": {
        "integrations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/storageImageIntegration"
          }
        }
      }
    },
    "v1UpdateImageIntegrationRequest": {
      "type": "object",
      "properties": {
        "config": {
          "$ref": "#/definitions/storageImageIntegration"
        },
        "updatePassword": {
          "type": "boolean",
          "description": "When false, use the stored credentials of an existing image integration given its ID."
        }
      }
    }
  }
}
