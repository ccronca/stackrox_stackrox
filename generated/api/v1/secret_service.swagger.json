{
  "swagger": "2.0",
  "info": {
    "title": "api/v1/secret_service.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "SecretService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/secrets": {
      "get": {
        "summary": "ListSecrets returns the list of secrets.",
        "operationId": "SecretService_ListSecrets",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListSecretsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagination.limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pagination.offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pagination.sortOption.field",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagination.sortOption.reversed",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.sortOption.aggregateBy.aggrFunc",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "UNSET",
              "COUNT",
              "MIN",
              "MAX"
            ],
            "default": "UNSET"
          },
          {
            "name": "pagination.sortOption.aggregateBy.distinct",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "SecretService"
        ]
      }
    },
    "/v1/secrets/{id}": {
      "get": {
        "summary": "GetSecret returns a secret given its ID.",
        "operationId": "SecretService_GetSecret",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/storageSecret"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "SecretService"
        ]
      }
    },
    "/v1/secretscount": {
      "get": {
        "summary": "CountSecrets returns the number of secrets.",
        "operationId": "SecretService_CountSecrets",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CountSecretsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagination.limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pagination.offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pagination.sortOption.field",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagination.sortOption.reversed",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.sortOption.aggregateBy.aggrFunc",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "UNSET",
              "COUNT",
              "MIN",
              "MAX"
            ],
            "default": "UNSET"
          },
          {
            "name": "pagination.sortOption.aggregateBy.distinct",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "SecretService"
        ]
      }
    }
  },
  "definitions": {
    "ImagePullSecretRegistry": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "storageCert": {
      "type": "object",
      "properties": {
        "subject": {
          "$ref": "#/definitions/storageCertName"
        },
        "issuer": {
          "$ref": "#/definitions/storageCertName"
        },
        "sans": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "startDate": {
          "type": "string",
          "format": "date-time"
        },
        "endDate": {
          "type": "string",
          "format": "date-time"
        },
        "algorithm": {
          "type": "string"
        }
      }
    },
    "storageCertName": {
      "type": "object",
      "properties": {
        "commonName": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "organization": {
          "type": "string"
        },
        "organizationUnit": {
          "type": "string"
        },
        "locality": {
          "type": "string"
        },
        "province": {
          "type": "string"
        },
        "streetAddress": {
          "type": "string"
        },
        "postalCode": {
          "type": "string"
        },
        "names": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "storageImagePullSecret": {
      "type": "object",
      "properties": {
        "registries": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ImagePullSecretRegistry"
          }
        }
      }
    },
    "storageListSecret": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "clusterId": {
          "type": "string"
        },
        "clusterName": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "types": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/storageSecretType"
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "storageSecret": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "clusterId": {
          "type": "string"
        },
        "clusterName": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "files": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/storageSecretDataFile"
          },
          "description": "Metadata about the secrets.\nThe secret need not be a file, but rather may be an arbitrary value."
        },
        "relationship": {
          "$ref": "#/definitions/storageSecretRelationship"
        }
      },
      "title": "Flat secret object.\nAny properties of an individual secret.\n(regardless of time, scope, or context)\n////////////////////////////////////////"
    },
    "storageSecretContainerRelationship": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Id of the container the secret is mounted in."
        },
        "path": {
          "type": "string",
          "description": "Path is a container specific mounting directory."
        }
      },
      "title": "Secrets can be mounted in a path in a container.\nNext Tag: 3"
    },
    "storageSecretDataFile": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/storageSecretType"
        },
        "cert": {
          "$ref": "#/definitions/storageCert"
        },
        "imagePullSecret": {
          "$ref": "#/definitions/storageImagePullSecret"
        }
      },
      "description": "Metadata about secret. Additional information is presented for a certificate file and\nimagePullSecret, but the \"file\" may also represent some arbitrary value."
    },
    "storageSecretDeploymentRelationship": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Id of the deployment using the secret within a container."
        },
        "name": {
          "type": "string",
          "description": "Name of the deployment."
        }
      },
      "title": "Secrets can be used by a deployment.\nNext Tag: 3"
    },
    "storageSecretRelationship": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "Secret id"
        },
        "containerRelationships": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/storageSecretContainerRelationship"
          },
          "title": "Container id to relationship.s"
        },
        "deploymentRelationships": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/storageSecretDeploymentRelationship"
          },
          "description": "Deployment id to relationship."
        }
      },
      "title": "The combined relationships that belong to the secret.\nNext Tag: 6"
    },
    "storageSecretType": {
      "type": "string",
      "enum": [
        "UNDETERMINED",
        "PUBLIC_CERTIFICATE",
        "CERTIFICATE_REQUEST",
        "PRIVACY_ENHANCED_MESSAGE",
        "OPENSSH_PRIVATE_KEY",
        "PGP_PRIVATE_KEY",
        "EC_PRIVATE_KEY",
        "RSA_PRIVATE_KEY",
        "DSA_PRIVATE_KEY",
        "CERT_PRIVATE_KEY",
        "ENCRYPTED_PRIVATE_KEY",
        "IMAGE_PULL_SECRET"
      ],
      "default": "UNDETERMINED"
    },
    "v1AggregateBy": {
      "type": "object",
      "properties": {
        "aggrFunc": {
          "$ref": "#/definitions/v1Aggregation"
        },
        "distinct": {
          "type": "boolean"
        }
      }
    },
    "v1Aggregation": {
      "type": "string",
      "enum": [
        "UNSET",
        "COUNT",
        "MIN",
        "MAX"
      ],
      "default": "UNSET"
    },
    "v1CountSecretsResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "v1ListSecretsResponse": {
      "type": "object",
      "properties": {
        "secrets": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/storageListSecret"
          }
        }
      },
      "title": "A list of secrets with their relationships.\nNext Tag: 2"
    },
    "v1Pagination": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "format": "int32"
        },
        "offset": {
          "type": "integer",
          "format": "int32"
        },
        "sortOption": {
          "$ref": "#/definitions/v1SortOption"
        },
        "sortOptions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SortOption"
          },
          "description": "This field is under development. It is not supported on any REST APIs."
        }
      }
    },
    "v1SortOption": {
      "type": "object",
      "properties": {
        "field": {
          "type": "string"
        },
        "reversed": {
          "type": "boolean"
        },
        "aggregateBy": {
          "$ref": "#/definitions/v1AggregateBy",
          "description": "This field is under development. It is not supported on any REST APIs."
        }
      }
    }
  }
}
