{
  "swagger": "2.0",
  "info": {
    "title": "api/v1/node_service.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "NodeService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/export/nodes": {
      "get": {
        "operationId": "NodeService_ExportNodes",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/v1ExportNodeResponse"
                },
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                }
              },
              "title": "Stream result of v1ExportNodeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "timeout",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "query",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "NodeService"
        ]
      }
    },
    "/v1/nodes/{clusterId}": {
      "get": {
        "operationId": "NodeService_ListNodes",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListNodesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "NodeService"
        ]
      }
    },
    "/v1/nodes/{clusterId}/{nodeId}": {
      "get": {
        "operationId": "NodeService_GetNode",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/storageNode"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "nodeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "NodeService"
        ]
      }
    }
  },
  "definitions": {
    "CVSSV2AccessComplexity": {
      "type": "string",
      "enum": [
        "ACCESS_HIGH",
        "ACCESS_MEDIUM",
        "ACCESS_LOW"
      ],
      "default": "ACCESS_HIGH"
    },
    "CVSSV2Authentication": {
      "type": "string",
      "enum": [
        "AUTH_MULTIPLE",
        "AUTH_SINGLE",
        "AUTH_NONE"
      ],
      "default": "AUTH_MULTIPLE"
    },
    "CVSSV3Complexity": {
      "type": "string",
      "enum": [
        "COMPLEXITY_LOW",
        "COMPLEXITY_HIGH"
      ],
      "default": "COMPLEXITY_LOW"
    },
    "CVSSV3Privileges": {
      "type": "string",
      "enum": [
        "PRIVILEGE_NONE",
        "PRIVILEGE_LOW",
        "PRIVILEGE_HIGH"
      ],
      "default": "PRIVILEGE_NONE"
    },
    "CVSSV3Scope": {
      "type": "string",
      "enum": [
        "UNCHANGED",
        "CHANGED"
      ],
      "default": "UNCHANGED"
    },
    "CVSSV3UserInteraction": {
      "type": "string",
      "enum": [
        "UI_NONE",
        "UI_REQUIRED"
      ],
      "default": "UI_NONE"
    },
    "EmbeddedVulnerabilityVulnerabilityType": {
      "type": "string",
      "enum": [
        "UNKNOWN_VULNERABILITY",
        "IMAGE_VULNERABILITY",
        "K8S_VULNERABILITY",
        "ISTIO_VULNERABILITY",
        "NODE_VULNERABILITY",
        "OPENSHIFT_VULNERABILITY"
      ],
      "default": "UNKNOWN_VULNERABILITY"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "storageCVEInfo": {
      "type": "object",
      "properties": {
        "cve": {
          "type": "string",
          "title": "@gotags: search:\"CVE,store\" sql:\"index=hash\""
        },
        "summary": {
          "type": "string"
        },
        "link": {
          "type": "string"
        },
        "publishedOn": {
          "type": "string",
          "format": "date-time",
          "description": "This indicates the timestamp when the cve was first published in the cve feeds.\n\n@gotags: search:\"CVE Published On\""
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Time when the CVE was first seen in the system.\n\n@gotags: search:\"CVE Created Time\""
        },
        "lastModified": {
          "type": "string",
          "format": "date-time"
        },
        "scoreVersion": {
          "$ref": "#/definitions/storageCVEInfoScoreVersion"
        },
        "cvssV2": {
          "$ref": "#/definitions/storageCVSSV2"
        },
        "cvssV3": {
          "$ref": "#/definitions/storageCVSSV3"
        },
        "references": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/storageCVEInfoReference"
          }
        }
      }
    },
    "storageCVEInfoReference": {
      "type": "object",
      "properties": {
        "URI": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "storageCVEInfoScoreVersion": {
      "type": "string",
      "enum": [
        "V2",
        "V3",
        "UNKNOWN"
      ],
      "default": "V2",
      "title": "- V2: No unset for automatic backwards compatibility"
    },
    "storageCVSSV2": {
      "type": "object",
      "properties": {
        "vector": {
          "type": "string"
        },
        "attackVector": {
          "$ref": "#/definitions/storageCVSSV2AttackVector"
        },
        "accessComplexity": {
          "$ref": "#/definitions/CVSSV2AccessComplexity"
        },
        "authentication": {
          "$ref": "#/definitions/CVSSV2Authentication"
        },
        "confidentiality": {
          "$ref": "#/definitions/storageCVSSV2Impact"
        },
        "integrity": {
          "$ref": "#/definitions/storageCVSSV2Impact"
        },
        "availability": {
          "$ref": "#/definitions/storageCVSSV2Impact"
        },
        "exploitabilityScore": {
          "type": "number",
          "format": "float"
        },
        "impactScore": {
          "type": "number",
          "format": "float"
        },
        "score": {
          "type": "number",
          "format": "float"
        },
        "severity": {
          "$ref": "#/definitions/storageCVSSV2Severity"
        }
      }
    },
    "storageCVSSV2AttackVector": {
      "type": "string",
      "enum": [
        "ATTACK_LOCAL",
        "ATTACK_ADJACENT",
        "ATTACK_NETWORK"
      ],
      "default": "ATTACK_LOCAL"
    },
    "storageCVSSV2Impact": {
      "type": "string",
      "enum": [
        "IMPACT_NONE",
        "IMPACT_PARTIAL",
        "IMPACT_COMPLETE"
      ],
      "default": "IMPACT_NONE"
    },
    "storageCVSSV2Severity": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "LOW",
        "MEDIUM",
        "HIGH"
      ],
      "default": "UNKNOWN"
    },
    "storageCVSSV3": {
      "type": "object",
      "properties": {
        "vector": {
          "type": "string"
        },
        "exploitabilityScore": {
          "type": "number",
          "format": "float"
        },
        "impactScore": {
          "type": "number",
          "format": "float"
        },
        "attackVector": {
          "$ref": "#/definitions/storageCVSSV3AttackVector"
        },
        "attackComplexity": {
          "$ref": "#/definitions/CVSSV3Complexity"
        },
        "privilegesRequired": {
          "$ref": "#/definitions/CVSSV3Privileges"
        },
        "userInteraction": {
          "$ref": "#/definitions/CVSSV3UserInteraction"
        },
        "scope": {
          "$ref": "#/definitions/CVSSV3Scope"
        },
        "confidentiality": {
          "$ref": "#/definitions/storageCVSSV3Impact"
        },
        "integrity": {
          "$ref": "#/definitions/storageCVSSV3Impact"
        },
        "availability": {
          "$ref": "#/definitions/storageCVSSV3Impact"
        },
        "score": {
          "type": "number",
          "format": "float"
        },
        "severity": {
          "$ref": "#/definitions/storageCVSSV3Severity"
        }
      }
    },
    "storageCVSSV3AttackVector": {
      "type": "string",
      "enum": [
        "ATTACK_LOCAL",
        "ATTACK_ADJACENT",
        "ATTACK_NETWORK",
        "ATTACK_PHYSICAL"
      ],
      "default": "ATTACK_LOCAL"
    },
    "storageCVSSV3Impact": {
      "type": "string",
      "enum": [
        "IMPACT_NONE",
        "IMPACT_LOW",
        "IMPACT_HIGH"
      ],
      "default": "IMPACT_NONE"
    },
    "storageCVSSV3Severity": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "NONE",
        "LOW",
        "MEDIUM",
        "HIGH",
        "CRITICAL"
      ],
      "default": "UNKNOWN"
    },
    "storageContainerRuntime": {
      "type": "string",
      "enum": [
        "UNKNOWN_CONTAINER_RUNTIME",
        "DOCKER_CONTAINER_RUNTIME",
        "CRIO_CONTAINER_RUNTIME"
      ],
      "default": "UNKNOWN_CONTAINER_RUNTIME"
    },
    "storageContainerRuntimeInfo": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/storageContainerRuntime"
        },
        "version": {
          "type": "string",
          "title": "@gotags: search:\"Container Runtime,store\""
        }
      }
    },
    "storageEmbeddedNodeScanComponent": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "@gotags: search:\"Component,store\""
        },
        "version": {
          "type": "string",
          "title": "@gotags: search:\"Component Version,store\""
        },
        "vulns": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/storageEmbeddedVulnerability"
          }
        },
        "vulnerabilities": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/storageNodeVulnerability"
          }
        },
        "priority": {
          "type": "string",
          "format": "int64"
        },
        "topCvss": {
          "type": "number",
          "format": "float"
        },
        "riskScore": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "storageEmbeddedVulnerability": {
      "type": "object",
      "properties": {
        "cve": {
          "type": "string",
          "title": "@gotags: search:\"CVE,store\""
        },
        "cvss": {
          "type": "number",
          "format": "float",
          "title": "@gotags: search:\"CVSS,store\""
        },
        "summary": {
          "type": "string"
        },
        "link": {
          "type": "string"
        },
        "fixedBy": {
          "type": "string",
          "title": "@gotags: search:\"Fixed By,store,hidden\""
        },
        "scoreVersion": {
          "$ref": "#/definitions/storageEmbeddedVulnerabilityScoreVersion"
        },
        "cvssV2": {
          "$ref": "#/definitions/storageCVSSV2"
        },
        "cvssV3": {
          "$ref": "#/definitions/storageCVSSV3"
        },
        "publishedOn": {
          "type": "string",
          "format": "date-time",
          "title": "@gotags: search:\"CVE Published On\""
        },
        "lastModified": {
          "type": "string",
          "format": "date-time"
        },
        "vulnerabilityType": {
          "$ref": "#/definitions/EmbeddedVulnerabilityVulnerabilityType",
          "description": "For internal purposes only."
        },
        "vulnerabilityTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmbeddedVulnerabilityVulnerabilityType"
          },
          "title": "@gotags: hash:\"ignore\""
        },
        "suppressed": {
          "type": "boolean",
          "title": "@gotags: search:\"CVE Snoozed\""
        },
        "suppressActivation": {
          "type": "string",
          "format": "date-time"
        },
        "suppressExpiry": {
          "type": "string",
          "format": "date-time"
        },
        "firstSystemOccurrence": {
          "type": "string",
          "format": "date-time",
          "description": "Time when the CVE was first seen, for this specific distro, in the system.\n\n@gotags: policy:\"First System Occurrence Timestamp\" hash:\"ignore\""
        },
        "firstImageOccurrence": {
          "type": "string",
          "format": "date-time",
          "description": "Time when the CVE was first seen in this image.\n\n@gotags: policy:\"First Image Occurrence Timestamp\" hash:\"ignore\""
        },
        "severity": {
          "$ref": "#/definitions/storageVulnerabilitySeverity",
          "title": "@gotags: policy:\"Severity\""
        },
        "state": {
          "$ref": "#/definitions/storageVulnerabilityState",
          "title": "@gotags: search:\"Vulnerability State\""
        }
      },
      "title": "Next Tag: 21"
    },
    "storageEmbeddedVulnerabilityScoreVersion": {
      "type": "string",
      "enum": [
        "V2",
        "V3"
      ],
      "default": "V2",
      "title": "- V2: No unset for automatic backwards compatibility"
    },
    "storageNode": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "A unique ID identifying this node.\n\n@gotags: search:\"Node ID,store\" sql:\"pk,type(uuid)\""
        },
        "name": {
          "type": "string",
          "description": "The (host)name of the node. Might or might not be the same as ID.\n\n@gotags: search:\"Node,store\""
        },
        "taints": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/storageTaint"
          },
          "title": "Taints on the host"
        },
        "clusterId": {
          "type": "string",
          "title": "@gotags: search:\"Cluster ID,store\" sql:\"fk(Cluster:id),no-fk-constraint,type(uuid)\""
        },
        "clusterName": {
          "type": "string",
          "title": "@gotags: search:\"Cluster,store\""
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "@gotags: search:\"Node Label\""
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "@gotags: search:\"Node Annotation\""
        },
        "joinedAt": {
          "type": "string",
          "format": "date-time",
          "description": "@gotags: search:\"Node Join Time,store\"",
          "title": "When the cluster reported the node was added"
        },
        "internalIpAddresses": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "node internal IP addresses"
        },
        "externalIpAddresses": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "node external IP addresses"
        },
        "containerRuntimeVersion": {
          "type": "string",
          "description": "Use container_runtime.version",
          "title": "From NodeInfo"
        },
        "containerRuntime": {
          "$ref": "#/definitions/storageContainerRuntimeInfo"
        },
        "kernelVersion": {
          "type": "string"
        },
        "operatingSystem": {
          "type": "string",
          "description": "From NodeInfo. Operating system reported by the node (ex: linux)."
        },
        "osImage": {
          "type": "string",
          "description": "From NodeInfo. OS image reported by the node from /etc/os-release.\n\n@gotags: search:\"Operating System,store\""
        },
        "kubeletVersion": {
          "type": "string"
        },
        "kubeProxyVersion": {
          "type": "string"
        },
        "lastUpdated": {
          "type": "string",
          "format": "date-time",
          "title": "@gotags: search:\"Last Updated,hidden\""
        },
        "k8sUpdated": {
          "type": "string",
          "format": "date-time",
          "description": "Time we received an update from Kubernetes.\n\n@gotags: sensorhash:\"ignore\""
        },
        "scan": {
          "$ref": "#/definitions/storageNodeScan",
          "title": "@gotags: policy:\"Node Scan\""
        },
        "components": {
          "type": "integer",
          "format": "int32",
          "title": "@gotags: search:\"Component Count,store,hidden\""
        },
        "cves": {
          "type": "integer",
          "format": "int32",
          "title": "@gotags: search:\"CVE Count,store,hidden\""
        },
        "fixableCves": {
          "type": "integer",
          "format": "int32",
          "title": "@gotags: search:\"Fixable CVE Count,store,hidden\""
        },
        "priority": {
          "type": "string",
          "format": "int64",
          "title": "@gotags: search:\"Node Risk Priority,hidden\""
        },
        "riskScore": {
          "type": "number",
          "format": "float",
          "title": "@gotags: search:\"Node Risk Score,hidden\""
        },
        "topCvss": {
          "type": "number",
          "format": "float",
          "title": "@gotags: search:\"Node Top CVSS,store\""
        },
        "notes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/storageNodeNote"
          }
        }
      },
      "title": "Node represents information about a node in the cluster.\nnext available tag: 28"
    },
    "storageNodeNote": {
      "type": "string",
      "enum": [
        "MISSING_SCAN_DATA"
      ],
      "default": "MISSING_SCAN_DATA"
    },
    "storageNodeScan": {
      "type": "object",
      "properties": {
        "scanTime": {
          "type": "string",
          "format": "date-time",
          "title": "@gotags: search:\"Node Scan Time,store\""
        },
        "operatingSystem": {
          "type": "string"
        },
        "components": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/storageEmbeddedNodeScanComponent"
          },
          "title": "@gotags: sql:\"-\""
        },
        "notes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/storageNodeScanNote"
          }
        }
      },
      "title": "Next tag: 5"
    },
    "storageNodeScanNote": {
      "type": "string",
      "enum": [
        "UNSET",
        "UNSUPPORTED",
        "KERNEL_UNSUPPORTED",
        "CERTIFIED_RHEL_CVES_UNAVAILABLE"
      ],
      "default": "UNSET"
    },
    "storageNodeVulnerability": {
      "type": "object",
      "properties": {
        "cveBaseInfo": {
          "$ref": "#/definitions/storageCVEInfo"
        },
        "cvss": {
          "type": "number",
          "format": "float",
          "title": "@gotags: policy:\"CVSS\""
        },
        "severity": {
          "$ref": "#/definitions/storageVulnerabilitySeverity",
          "title": "@gotags: policy:\"Severity\""
        },
        "fixedBy": {
          "type": "string",
          "title": "@gotags: policy:\"Fixed By\""
        },
        "snoozed": {
          "type": "boolean",
          "title": "@gotags: policy:\"CVE Snoozed\""
        },
        "snoozeStart": {
          "type": "string",
          "format": "date-time"
        },
        "snoozeExpiry": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "storageTaint": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "title": "@gotags: search:\"Taint Key\""
        },
        "value": {
          "type": "string",
          "title": "@gotags: search:\"Taint Value\""
        },
        "taintEffect": {
          "$ref": "#/definitions/storageTaintEffect",
          "title": "@gotags: search:\"Taint Effect\""
        }
      }
    },
    "storageTaintEffect": {
      "type": "string",
      "enum": [
        "UNKNOWN_TAINT_EFFECT",
        "NO_SCHEDULE_TAINT_EFFECT",
        "PREFER_NO_SCHEDULE_TAINT_EFFECT",
        "NO_EXECUTE_TAINT_EFFECT"
      ],
      "default": "UNKNOWN_TAINT_EFFECT"
    },
    "storageVulnerabilitySeverity": {
      "type": "string",
      "enum": [
        "UNKNOWN_VULNERABILITY_SEVERITY",
        "LOW_VULNERABILITY_SEVERITY",
        "MODERATE_VULNERABILITY_SEVERITY",
        "IMPORTANT_VULNERABILITY_SEVERITY",
        "CRITICAL_VULNERABILITY_SEVERITY"
      ],
      "default": "UNKNOWN_VULNERABILITY_SEVERITY"
    },
    "storageVulnerabilityState": {
      "type": "string",
      "enum": [
        "OBSERVED",
        "DEFERRED",
        "FALSE_POSITIVE"
      ],
      "default": "OBSERVED",
      "description": "VulnerabilityState indicates if vulnerability is being observed or deferred(/suppressed). By default, it vulnerabilities are observed.\n\n - OBSERVED: [Default state]"
    },
    "v1ExportNodeResponse": {
      "type": "object",
      "properties": {
        "node": {
          "$ref": "#/definitions/storageNode"
        }
      }
    },
    "v1ListNodesResponse": {
      "type": "object",
      "properties": {
        "nodes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/storageNode"
          }
        }
      }
    }
  }
}
