{
  "swagger": "2.0",
  "info": {
    "title": "api/v1/vuln_req_service.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "VulnerabilityRequestService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/cve/requests": {
      "get": {
        "summary": "ListVulnerabilityRequests returns the list of vulnerability requests.",
        "operationId": "VulnerabilityRequestService_ListVulnerabilityRequests",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListVulnerabilityRequestsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagination.limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pagination.offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pagination.sortOption.field",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagination.sortOption.reversed",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.sortOption.aggregateBy.aggrFunc",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "UNSET",
              "COUNT",
              "MIN",
              "MAX"
            ],
            "default": "UNSET"
          },
          {
            "name": "pagination.sortOption.aggregateBy.distinct",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "VulnerabilityRequestService"
        ]
      }
    },
    "/v1/cve/requests/defer": {
      "post": {
        "summary": "DeferVulnerability starts the deferral process for the specified vulnerability.",
        "operationId": "VulnerabilityRequestService_DeferVulnerability",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeferVulnResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1DeferVulnRequest"
            }
          }
        ],
        "tags": [
          "VulnerabilityRequestService"
        ]
      }
    },
    "/v1/cve/requests/false-positive": {
      "post": {
        "summary": "FalsePositiveVulnerability starts the process to mark the specified vulnerability as false-positive.",
        "operationId": "VulnerabilityRequestService_FalsePositiveVulnerability",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1FalsePositiveVulnResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1FalsePositiveVulnRequest"
            }
          }
        ],
        "tags": [
          "VulnerabilityRequestService"
        ]
      }
    },
    "/v1/cve/requests/{id}": {
      "get": {
        "summary": "GetVulnerabilityRequest returns the requested vulnerability request by ID.",
        "operationId": "VulnerabilityRequestService_GetVulnerabilityRequest",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetVulnerabilityRequestResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "VulnerabilityRequestService"
        ]
      },
      "delete": {
        "summary": "DeleteVulnerabilityRequest deletes a vulnerability request.",
        "operationId": "VulnerabilityRequestService_DeleteVulnerabilityRequest",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Empty"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "VulnerabilityRequestService"
        ]
      }
    },
    "/v1/cve/requests/{id}/approve": {
      "post": {
        "summary": "ApproveVulnRequest approve a vulnerability request. If it is an unwatch vulnerability request then the\nassociated vulnerabilities are not watched in workflows such as policy detection, risk, etc.",
        "operationId": "VulnerabilityRequestService_ApproveVulnerabilityRequest",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ApproveVulnRequestResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VulnerabilityRequestServiceApproveVulnerabilityRequestBody"
            }
          }
        ],
        "tags": [
          "VulnerabilityRequestService"
        ]
      }
    },
    "/v1/cve/requests/{id}/deny": {
      "post": {
        "summary": "DenyVulnRequest denies a vulnerability request.",
        "operationId": "VulnerabilityRequestService_DenyVulnerabilityRequest",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DenyVulnRequestResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VulnerabilityRequestServiceDenyVulnerabilityRequestBody"
            }
          }
        ],
        "tags": [
          "VulnerabilityRequestService"
        ]
      }
    },
    "/v1/cve/requests/{id}/undo": {
      "post": {
        "summary": "UndoVulnerabilityRequest undoes a vulnerability request.",
        "operationId": "VulnerabilityRequestService_UndoVulnerabilityRequest",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UndoVulnRequestResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "VulnerabilityRequestService"
        ]
      }
    },
    "/v1/cve/requests/{id}/update": {
      "post": {
        "summary": "UpdateVulnerabilityRequest updates an existing vulnerability request. Currently only deferral expiration time can be updated.",
        "operationId": "VulnerabilityRequestService_UpdateVulnerabilityRequest",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateVulnRequestResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VulnerabilityRequestServiceUpdateVulnerabilityRequestBody"
            }
          }
        ],
        "tags": [
          "VulnerabilityRequestService"
        ]
      }
    }
  },
  "definitions": {
    "RequestExpiryExpiryType": {
      "type": "string",
      "enum": [
        "TIME",
        "ALL_CVE_FIXABLE",
        "ANY_CVE_FIXABLE"
      ],
      "default": "TIME"
    },
    "ScopeGlobal": {
      "type": "object"
    },
    "ScopeImage": {
      "type": "object",
      "properties": {
        "registry": {
          "type": "string",
          "title": "@gotags: search:\"Image Registry Scope\""
        },
        "remote": {
          "type": "string",
          "title": "@gotags: search:\"Image Remote Scope\""
        },
        "tag": {
          "type": "string",
          "title": "@gotags: search:\"Image Tag Scope\""
        }
      }
    },
    "VulnerabilityRequestCVEs": {
      "type": "object",
      "properties": {
        "cves": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "These are (NVD) vulnerability identifiers, `cve` field of `storage.CVE`, and *not* the `id` field.\nFor example, CVE-2021-44832.\n\n@gotags: search:\"CVE\""
        }
      }
    },
    "VulnerabilityRequestServiceApproveVulnerabilityRequestBody": {
      "type": "object",
      "properties": {
        "comment": {
          "type": "string"
        }
      }
    },
    "VulnerabilityRequestServiceDenyVulnerabilityRequestBody": {
      "type": "object",
      "properties": {
        "comment": {
          "type": "string"
        }
      }
    },
    "VulnerabilityRequestServiceUpdateVulnerabilityRequestBody": {
      "type": "object",
      "properties": {
        "comment": {
          "type": "string"
        },
        "expiry": {
          "$ref": "#/definitions/storageRequestExpiry",
          "title": "Currently, only expiry can be updated"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "storageApprover": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "@gotags: search:\"Approver User ID\""
        },
        "name": {
          "type": "string",
          "title": "@gotags: search:\"Approver User Name\""
        }
      }
    },
    "storageDeferralRequest": {
      "type": "object",
      "properties": {
        "expiry": {
          "$ref": "#/definitions/storageRequestExpiry"
        }
      }
    },
    "storageDeferralUpdate": {
      "type": "object",
      "properties": {
        "CVEs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "@gotags: search:\"Deferral Update CVEs\""
        },
        "expiry": {
          "$ref": "#/definitions/storageRequestExpiry",
          "title": "@gotags: search:\"-\""
        }
      }
    },
    "storageFalsePositiveRequest": {
      "type": "object"
    },
    "storageFalsePositiveUpdate": {
      "type": "object",
      "properties": {
        "CVEs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "@gotags: search:\"False Positive Update CVEs\""
        }
      }
    },
    "storageRequestComment": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "user": {
          "$ref": "#/definitions/storageSlimUser",
          "title": "@gotags: sql:\"ignore_labels(User ID)\""
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "storageRequestExpiry": {
      "type": "object",
      "properties": {
        "expiresWhenFixed": {
          "type": "boolean",
          "description": "Indicates that this request expires when the associated vulnerability is fixed.\n\n@gotags: search:\"Request Expires When Fixed\""
        },
        "expiresOn": {
          "type": "string",
          "format": "date-time",
          "description": "Indicates the timestamp when this request expires.\n\n@gotags: search:\"Request Expiry Time\""
        },
        "expiryType": {
          "$ref": "#/definitions/RequestExpiryExpiryType",
          "description": "This field is under development, DO NOT USE FOR NON-DEVELOPMENT PURPOSES.\nThis field can be used only for deferral requests.\nThis field indicates the type of expiry set for the request.\n`TIME` indicates that the request has a fixed expiry time. If used, `expires_on` must be set.\n`ALL_CVE_FIXABLE` indicates the request expires if all CVEs in the request is fixable.\n`ANY_CVE_FIXABLE` indicates the request expires if any CVE in the request is fixable.\n\n@gotags: search:\"Expiry Type\""
        }
      }
    },
    "storageRequestStatus": {
      "type": "string",
      "enum": [
        "PENDING",
        "APPROVED",
        "DENIED",
        "APPROVED_PENDING_UPDATE"
      ],
      "default": "PENDING",
      "description": "Indicates the status of a request. Requests canceled by the user before they are acted upon by the approver\nare not tracked/persisted (with the exception of audit logs if it is turned on).\n\n - PENDING: Default request state. It indicates that the request has not been fulfilled and that an action (approve/deny) is required.\n - APPROVED: Indicates that the request has been approved by the approver.\n - DENIED: Indicates that the request has been denied by the approver.\n - APPROVED_PENDING_UPDATE: Indicates that the original request was approved, but an update is still pending an approval or denial."
    },
    "storageRequester": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "@gotags: search:\"Requester User ID\""
        },
        "name": {
          "type": "string",
          "title": "@gotags: search:\"Requester User Name\""
        }
      }
    },
    "storageSlimUser": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "@gotags: search:\"User ID\""
        },
        "name": {
          "type": "string",
          "title": "@gotags: search:\"User Name\""
        }
      }
    },
    "storageVulnerabilityRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "@gotags: sql:\"pk\""
        },
        "name": {
          "type": "string",
          "title": "@gotags: search:\"Request Name\" sql:\"unique\""
        },
        "targetState": {
          "$ref": "#/definitions/storageVulnerabilityState",
          "description": "Indicates the state the vulnerabilities will move to once the request is complete.\n\n@gotags: search:\"Requested Vulnerability State\""
        },
        "status": {
          "$ref": "#/definitions/storageRequestStatus",
          "description": "Indicates the status of a request.\n\n@gotags: search:\"Request Status\""
        },
        "expired": {
          "type": "boolean",
          "description": "Indicates if this request is a historical request that is no longer in effect\ndue to deferral expiry, cancellation, or restarting cve observation.\n\n@gotags: search:\"Expired Request\""
        },
        "requestor": {
          "$ref": "#/definitions/storageSlimUser",
          "title": "@gotags: sql:\"ignore_labels(User ID)\""
        },
        "approvers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/storageSlimUser"
          },
          "title": "@gotags: sql:\"ignore_labels(User ID)\""
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "title": "@gotags: search:\"Created Time\""
        },
        "lastUpdated": {
          "type": "string",
          "format": "date-time",
          "title": "@gotags: search:\"Last Updated\""
        },
        "comments": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/storageRequestComment"
          }
        },
        "scope": {
          "$ref": "#/definitions/storageVulnerabilityRequestScope"
        },
        "requesterV2": {
          "$ref": "#/definitions/storageRequester"
        },
        "approversV2": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/storageApprover"
          }
        },
        "deferralReq": {
          "$ref": "#/definitions/storageDeferralRequest"
        },
        "fpRequest": {
          "$ref": "#/definitions/storageFalsePositiveRequest"
        },
        "cves": {
          "$ref": "#/definitions/VulnerabilityRequestCVEs"
        },
        "updatedDeferralReq": {
          "$ref": "#/definitions/storageDeferralRequest",
          "title": "@gotags: search:\"-\""
        },
        "deferralUpdate": {
          "$ref": "#/definitions/storageDeferralUpdate"
        },
        "falsePositiveUpdate": {
          "$ref": "#/definitions/storageFalsePositiveUpdate"
        }
      },
      "description": "Next available tag: 30\nVulnerabilityRequest encapsulates a request such as deferral request and false-positive request."
    },
    "storageVulnerabilityRequestScope": {
      "type": "object",
      "properties": {
        "imageScope": {
          "$ref": "#/definitions/ScopeImage",
          "description": "This field can be used to apply the request to selected images."
        },
        "globalScope": {
          "$ref": "#/definitions/ScopeGlobal",
          "description": "If set, the scope of this request is system-wide."
        }
      }
    },
    "storageVulnerabilityState": {
      "type": "string",
      "enum": [
        "OBSERVED",
        "DEFERRED",
        "FALSE_POSITIVE"
      ],
      "default": "OBSERVED",
      "description": "VulnerabilityState indicates if vulnerability is being observed or deferred(/suppressed). By default, it vulnerabilities are observed.\n\n - OBSERVED: [Default state]"
    },
    "v1AggregateBy": {
      "type": "object",
      "properties": {
        "aggrFunc": {
          "$ref": "#/definitions/v1Aggregation"
        },
        "distinct": {
          "type": "boolean"
        }
      }
    },
    "v1Aggregation": {
      "type": "string",
      "enum": [
        "UNSET",
        "COUNT",
        "MIN",
        "MAX"
      ],
      "default": "UNSET"
    },
    "v1ApproveVulnRequestResponse": {
      "type": "object",
      "properties": {
        "requestInfo": {
          "$ref": "#/definitions/storageVulnerabilityRequest"
        }
      }
    },
    "v1DeferVulnRequest": {
      "type": "object",
      "properties": {
        "cve": {
          "type": "string",
          "description": "This field indicates the CVEs requested to be deferred."
        },
        "comment": {
          "type": "string"
        },
        "scope": {
          "$ref": "#/definitions/storageVulnerabilityRequestScope"
        },
        "expiresWhenFixed": {
          "type": "boolean"
        },
        "expiresOn": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "next available tag: 6"
    },
    "v1DeferVulnResponse": {
      "type": "object",
      "properties": {
        "requestInfo": {
          "$ref": "#/definitions/storageVulnerabilityRequest"
        }
      }
    },
    "v1DenyVulnRequestResponse": {
      "type": "object",
      "properties": {
        "requestInfo": {
          "$ref": "#/definitions/storageVulnerabilityRequest"
        }
      }
    },
    "v1Empty": {
      "type": "object"
    },
    "v1FalsePositiveVulnRequest": {
      "type": "object",
      "properties": {
        "cve": {
          "type": "string",
          "description": "This field indicates the CVE requested to be marked as false-positive."
        },
        "scope": {
          "$ref": "#/definitions/storageVulnerabilityRequestScope"
        },
        "comment": {
          "type": "string"
        }
      }
    },
    "v1FalsePositiveVulnResponse": {
      "type": "object",
      "properties": {
        "requestInfo": {
          "$ref": "#/definitions/storageVulnerabilityRequest"
        }
      }
    },
    "v1GetVulnerabilityRequestResponse": {
      "type": "object",
      "properties": {
        "requestInfo": {
          "$ref": "#/definitions/storageVulnerabilityRequest"
        }
      }
    },
    "v1ListVulnerabilityRequestsResponse": {
      "type": "object",
      "properties": {
        "requestInfos": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/storageVulnerabilityRequest"
          }
        }
      }
    },
    "v1Pagination": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "format": "int32"
        },
        "offset": {
          "type": "integer",
          "format": "int32"
        },
        "sortOption": {
          "$ref": "#/definitions/v1SortOption"
        },
        "sortOptions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SortOption"
          },
          "description": "This field is under development. It is not supported on any REST APIs."
        }
      }
    },
    "v1SortOption": {
      "type": "object",
      "properties": {
        "field": {
          "type": "string"
        },
        "reversed": {
          "type": "boolean"
        },
        "aggregateBy": {
          "$ref": "#/definitions/v1AggregateBy",
          "description": "This field is under development. It is not supported on any REST APIs."
        }
      }
    },
    "v1UndoVulnRequestResponse": {
      "type": "object",
      "properties": {
        "requestInfo": {
          "$ref": "#/definitions/storageVulnerabilityRequest"
        }
      }
    },
    "v1UpdateVulnRequestResponse": {
      "type": "object",
      "properties": {
        "requestInfo": {
          "$ref": "#/definitions/storageVulnerabilityRequest"
        }
      }
    }
  }
}
