{
  "swagger": "2.0",
  "info": {
    "title": "api/v1/debug_service.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "DebugService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/debug/authz/trace": {
      "get": {
        "summary": "Stream authorization traces for all incoming requests.",
        "operationId": "DebugService_StreamAuthzTraces",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/v1AuthorizationTraceResponse"
                },
                "error": {
                  "$ref": "#/definitions/googlerpcStatus"
                }
              },
              "title": "Stream result of v1AuthorizationTraceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "DebugService"
        ]
      }
    },
    "/v1/debug/db/stats/reset": {
      "post": {
        "summary": "Reset database debugging statistics.",
        "operationId": "DebugService_ResetDBStats",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Empty"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "DebugService"
        ]
      }
    },
    "/v1/debug/loglevel": {
      "get": {
        "summary": "Get the current logging level for StackRox services.",
        "operationId": "DebugService_GetLogLevel",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1LogLevelResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "modules",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "DebugService"
        ]
      },
      "patch": {
        "summary": "Set logging level for StackRox services.",
        "operationId": "DebugService_SetLogLevel",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1LogLevelRequest"
            }
          }
        ],
        "tags": [
          "DebugService"
        ]
      }
    }
  },
  "definitions": {
    "AuthorizationTraceResponseRequest": {
      "type": "object",
      "properties": {
        "endpoint": {
          "type": "string"
        },
        "method": {
          "type": "string"
        }
      }
    },
    "AuthorizationTraceResponseResponse": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/AuthorizationTraceResponseResponseStatus"
        },
        "error": {
          "type": "string"
        }
      }
    },
    "AuthorizationTraceResponseResponseStatus": {
      "type": "string",
      "enum": [
        "UNKNOWN_STATUS",
        "SUCCESS",
        "FAILURE"
      ],
      "default": "UNKNOWN_STATUS"
    },
    "AuthorizationTraceResponseTrace": {
      "type": "object",
      "properties": {
        "scopeCheckerType": {
          "type": "string"
        },
        "builtIn": {
          "$ref": "#/definitions/TraceBuiltInAuthorizer"
        }
      }
    },
    "AuthorizationTraceResponseUser": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "friendlyName": {
          "type": "string"
        },
        "aggregatedPermissions": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/storageAccess"
          }
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/AuthorizationTraceResponseUserRole"
          }
        }
      }
    },
    "AuthorizationTraceResponseUserRole": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "permissions": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/storageAccess"
          }
        },
        "accessScopeName": {
          "type": "string"
        },
        "accessScope": {
          "$ref": "#/definitions/SimpleAccessScopeRules"
        }
      }
    },
    "SimpleAccessScopeRules": {
      "type": "object",
      "properties": {
        "includedClusters": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "includedNamespaces": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/SimpleAccessScopeRulesNamespace"
          }
        },
        "clusterLabelSelectors": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/storageSetBasedLabelSelector"
          }
        },
        "namespaceLabelSelectors": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/storageSetBasedLabelSelector"
          }
        }
      },
      "description": "Each element of any repeated field is an individual rule. Rules are\njoined by logical OR: if there exists a rule allowing resource `x`,\n`x` is in the access scope."
    },
    "SimpleAccessScopeRulesNamespace": {
      "type": "object",
      "properties": {
        "clusterName": {
          "type": "string",
          "description": "Both fields must be set."
        },
        "namespaceName": {
          "type": "string"
        }
      }
    },
    "TraceBuiltInAuthorizer": {
      "type": "object",
      "properties": {
        "clustersTotalNum": {
          "type": "integer",
          "format": "int32"
        },
        "namespacesTotalNum": {
          "type": "integer",
          "format": "int32"
        },
        "deniedAuthzDecisions": {
          "type": "object",
          "additionalProperties": {
            "type": "integer",
            "format": "int32"
          }
        },
        "allowedAuthzDecisions": {
          "type": "object",
          "additionalProperties": {
            "type": "integer",
            "format": "int32"
          }
        },
        "effectiveAccessScopes": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "googlerpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "storageAccess": {
      "type": "string",
      "enum": [
        "NO_ACCESS",
        "READ_ACCESS",
        "READ_WRITE_ACCESS"
      ],
      "default": "NO_ACCESS"
    },
    "storageSetBasedLabelSelector": {
      "type": "object",
      "properties": {
        "requirements": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/storageSetBasedLabelSelectorRequirement"
          }
        }
      },
      "description": "SetBasedLabelSelector only allows set-based label requirements.\n\nNext available tag: 3"
    },
    "storageSetBasedLabelSelectorOperator": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "IN",
        "NOT_IN",
        "EXISTS",
        "NOT_EXISTS"
      ],
      "default": "UNKNOWN"
    },
    "storageSetBasedLabelSelectorRequirement": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "op": {
          "$ref": "#/definitions/storageSetBasedLabelSelectorOperator"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "Next available tag: 4"
    },
    "v1AuthorizationTraceResponse": {
      "type": "object",
      "properties": {
        "arrivedAt": {
          "type": "string",
          "format": "date-time"
        },
        "processedAt": {
          "type": "string",
          "format": "date-time"
        },
        "request": {
          "$ref": "#/definitions/AuthorizationTraceResponseRequest"
        },
        "response": {
          "$ref": "#/definitions/AuthorizationTraceResponseResponse"
        },
        "user": {
          "$ref": "#/definitions/AuthorizationTraceResponseUser"
        },
        "trace": {
          "$ref": "#/definitions/AuthorizationTraceResponseTrace"
        }
      }
    },
    "v1Empty": {
      "type": "object"
    },
    "v1LogLevelRequest": {
      "type": "object",
      "properties": {
        "level": {
          "type": "string"
        },
        "modules": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1LogLevelResponse": {
      "type": "object",
      "properties": {
        "level": {
          "type": "string"
        },
        "moduleLevels": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ModuleLevel"
          }
        }
      }
    },
    "v1ModuleLevel": {
      "type": "object",
      "properties": {
        "module": {
          "type": "string"
        },
        "level": {
          "type": "string"
        }
      }
    }
  }
}
