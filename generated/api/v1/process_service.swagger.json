{
  "swagger": "2.0",
  "info": {
    "title": "api/v1/process_service.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "ProcessService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/processcount": {
      "get": {
        "summary": "CountProcesses returns the count of processes.",
        "operationId": "ProcessService_CountProcesses",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CountProcessesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagination.limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pagination.offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pagination.sortOption.field",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagination.sortOption.reversed",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.sortOption.aggregateBy.aggrFunc",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "UNSET",
              "COUNT",
              "MIN",
              "MAX"
            ],
            "default": "UNSET"
          },
          {
            "name": "pagination.sortOption.aggregateBy.distinct",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "ProcessService"
        ]
      }
    },
    "/v1/processes/deployment/{deploymentId}": {
      "get": {
        "summary": "GetProcessesByDeployment returns the processes executed in the given deployment.",
        "operationId": "ProcessService_GetProcessesByDeployment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetProcessesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "deploymentId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProcessService"
        ]
      }
    },
    "/v1/processes/deployment/{deploymentId}/grouped": {
      "get": {
        "summary": "GetGroupedProcessByDeployment returns all the processes executed grouped by deployment.",
        "operationId": "ProcessService_GetGroupedProcessByDeployment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetGroupedProcessesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "deploymentId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProcessService"
        ]
      }
    },
    "/v1/processes/deployment/{deploymentId}/grouped/container": {
      "get": {
        "summary": "GetGroupedProcessByDeploymentAndContainer returns all the processes executed grouped by deployment and container.",
        "operationId": "ProcessService_GetGroupedProcessByDeploymentAndContainer",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetGroupedProcessesWithContainerResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "deploymentId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProcessService"
        ]
      }
    }
  },
  "definitions": {
    "ProcessSignalLineageInfo": {
      "type": "object",
      "properties": {
        "parentUid": {
          "type": "integer",
          "format": "int64"
        },
        "parentExecFilePath": {
          "type": "string",
          "title": "@gotags: policy:\"Process Ancestor\""
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "storageProcessIndicator": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "@gotags: search:\"Process ID,store,hidden\"  sql:\"pk,type(uuid)\"",
          "title": "A unique UUID for the Indicator message"
        },
        "deploymentId": {
          "type": "string",
          "title": "@gotags: search:\"Deployment ID,store,hidden\" policy:\",prefer-parent\" sql:\"index=hash,fk(Deployment:id),no-fk-constraint,type(uuid)\""
        },
        "containerName": {
          "type": "string",
          "title": "@gotags: search:\"Container Name,hidden\" policy:\",prefer-parent\""
        },
        "podId": {
          "type": "string",
          "description": "@gotags: search:\"Pod ID,hidden\"",
          "title": "Pod name"
        },
        "podUid": {
          "type": "string",
          "title": "@gotags: search:\"Pod UID,hidden\" sql:\"index=hash,type(uuid)\""
        },
        "signal": {
          "$ref": "#/definitions/storageProcessSignal",
          "title": "A process signal message passed from Collector to Sensor"
        },
        "clusterId": {
          "type": "string",
          "title": "@gotags: search:\"Cluster ID,store,hidden\" policy:\",prefer-parent\" sql:\"type(uuid)\""
        },
        "namespace": {
          "type": "string",
          "title": "@gotags: search:\"Namespace,store,hidden\" policy:\",prefer-parent\""
        },
        "containerStartTime": {
          "type": "string",
          "format": "date-time"
        },
        "imageId": {
          "type": "string"
        }
      },
      "title": "Next available tag: 13"
    },
    "storageProcessSignal": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "A unique UUID for identifying the message\nWe have this here instead of at the top level\nbecause we want to have each message to be\nself contained."
        },
        "containerId": {
          "type": "string",
          "description": "@gotags: search:\"Container ID,hidden\"",
          "title": "ID of container associated with this process"
        },
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "@gotags: search:\"Process Creation Time,hidden\"",
          "title": "Process creation time"
        },
        "name": {
          "type": "string",
          "description": "@gotags: search:\"Process Name\"",
          "title": "Process name"
        },
        "args": {
          "type": "string",
          "description": "@gotags: search:\"Process Arguments\"",
          "title": "Process arguments"
        },
        "execFilePath": {
          "type": "string",
          "description": "@gotags: search:\"Process Path\"",
          "title": "Process executable file path"
        },
        "pid": {
          "type": "integer",
          "format": "int64",
          "title": "Host process ID"
        },
        "uid": {
          "type": "integer",
          "format": "int64",
          "description": "@gotags: search:\"Process UID\"",
          "title": "Real user ID"
        },
        "gid": {
          "type": "integer",
          "format": "int64",
          "title": "Real group ID"
        },
        "lineage": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Process Lineage"
        },
        "scraped": {
          "type": "boolean",
          "title": "Signal origin"
        },
        "lineageInfo": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ProcessSignalLineageInfo"
          },
          "title": "Process LineageInfo"
        }
      }
    },
    "v1AggregateBy": {
      "type": "object",
      "properties": {
        "aggrFunc": {
          "$ref": "#/definitions/v1Aggregation"
        },
        "distinct": {
          "type": "boolean"
        }
      }
    },
    "v1Aggregation": {
      "type": "string",
      "enum": [
        "UNSET",
        "COUNT",
        "MIN",
        "MAX"
      ],
      "default": "UNSET"
    },
    "v1CountProcessesResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "v1GetGroupedProcessesResponse": {
      "type": "object",
      "properties": {
        "groups": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ProcessNameGroup"
          }
        }
      }
    },
    "v1GetGroupedProcessesWithContainerResponse": {
      "type": "object",
      "properties": {
        "groups": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ProcessNameAndContainerNameGroup"
          }
        }
      }
    },
    "v1GetProcessesResponse": {
      "type": "object",
      "properties": {
        "processes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/storageProcessIndicator"
          }
        }
      }
    },
    "v1Pagination": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "format": "int32"
        },
        "offset": {
          "type": "integer",
          "format": "int32"
        },
        "sortOption": {
          "$ref": "#/definitions/v1SortOption"
        },
        "sortOptions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SortOption"
          },
          "description": "This field is under development. It is not supported on any REST APIs."
        }
      }
    },
    "v1ProcessGroup": {
      "type": "object",
      "properties": {
        "args": {
          "type": "string"
        },
        "signals": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/storageProcessIndicator"
          }
        }
      }
    },
    "v1ProcessNameAndContainerNameGroup": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "containerName": {
          "type": "string"
        },
        "timesExecuted": {
          "type": "integer",
          "format": "int64"
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ProcessGroup"
          }
        },
        "suspicious": {
          "type": "boolean"
        }
      }
    },
    "v1ProcessNameGroup": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "timesExecuted": {
          "type": "integer",
          "format": "int64"
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ProcessGroup"
          }
        }
      }
    },
    "v1SortOption": {
      "type": "object",
      "properties": {
        "field": {
          "type": "string"
        },
        "reversed": {
          "type": "boolean"
        },
        "aggregateBy": {
          "$ref": "#/definitions/v1AggregateBy",
          "description": "This field is under development. It is not supported on any REST APIs."
        }
      }
    }
  }
}
