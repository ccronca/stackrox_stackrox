{
  "swagger": "2.0",
  "info": {
    "title": "api/v1/network_policy_service.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "NetworkPolicyService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/networkpolicies": {
      "get": {
        "operationId": "NetworkPolicyService_GetNetworkPolicies",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1NetworkPoliciesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "clusterId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "deploymentQuery",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "NetworkPolicyService"
        ]
      }
    },
    "/v1/networkpolicies/allowedpeers/{id}": {
      "get": {
        "operationId": "NetworkPolicyService_GetAllowedPeersFromCurrentPolicyForDeployment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetAllowedPeersFromCurrentPolicyForDeploymentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "NetworkPolicyService"
        ]
      }
    },
    "/v1/networkpolicies/apply/deployment/{deploymentId}": {
      "post": {
        "operationId": "NetworkPolicyService_ApplyNetworkPolicyYamlForDeployment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Empty"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "deploymentId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NetworkPolicyServiceApplyNetworkPolicyYamlForDeploymentBody"
            }
          }
        ],
        "tags": [
          "NetworkPolicyService"
        ]
      }
    },
    "/v1/networkpolicies/apply/{clusterId}": {
      "post": {
        "operationId": "NetworkPolicyService_ApplyNetworkPolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Empty"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "modification",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storageNetworkPolicyModification"
            }
          }
        ],
        "tags": [
          "NetworkPolicyService"
        ]
      }
    },
    "/v1/networkpolicies/baselinecomparison/{id}": {
      "get": {
        "operationId": "NetworkPolicyService_GetDiffFlowsBetweenPolicyAndBaselineForDeployment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetDiffFlowsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "NetworkPolicyService"
        ]
      }
    },
    "/v1/networkpolicies/cluster/{clusterId}": {
      "get": {
        "operationId": "NetworkPolicyService_GetNetworkGraph",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1NetworkGraph"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "query",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "includePorts",
            "description": "If set to true, include port-level information in the network policy graph.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "scope.query",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "NetworkPolicyService"
        ]
      }
    },
    "/v1/networkpolicies/generate/baseline/{deploymentId}": {
      "post": {
        "operationId": "NetworkPolicyService_GetBaselineGeneratedNetworkPolicyForDeployment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetBaselineGeneratedPolicyForDeploymentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "deploymentId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NetworkPolicyServiceGetBaselineGeneratedNetworkPolicyForDeploymentBody"
            }
          }
        ],
        "tags": [
          "NetworkPolicyService"
        ]
      }
    },
    "/v1/networkpolicies/generate/{clusterId}": {
      "get": {
        "operationId": "NetworkPolicyService_GenerateNetworkPolicies",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GenerateNetworkPoliciesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "query",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "deleteExisting",
            "description": " - NONE: Do not delete any existing network policies.\n - GENERATED_ONLY: Delete any existing *auto-generated* network policies.\n - ALL: Delete all existing network policies in the respective namespace.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "UNKNOWN",
              "NONE",
              "GENERATED_ONLY",
              "ALL"
            ],
            "default": "UNKNOWN"
          },
          {
            "name": "networkDataSince",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "includePorts",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "NetworkPolicyService"
        ]
      }
    },
    "/v1/networkpolicies/graph/epoch": {
      "get": {
        "operationId": "NetworkPolicyService_GetNetworkGraphEpoch",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1NetworkGraphEpoch"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "clusterId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "NetworkPolicyService"
        ]
      }
    },
    "/v1/networkpolicies/simulate/{clusterId}": {
      "post": {
        "operationId": "NetworkPolicyService_SimulateNetworkGraph",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1SimulateNetworkGraphResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "modification",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storageNetworkPolicyModification"
            }
          },
          {
            "name": "query",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "includePorts",
            "description": "If set to true, include port-level information in the network policy graph.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "includeNodeDiff",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "scope.query",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "NetworkPolicyService"
        ]
      }
    },
    "/v1/networkpolicies/simulate/{clusterId}/notify": {
      "post": {
        "operationId": "NetworkPolicyService_SendNetworkPolicyYAML",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Empty"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "modification",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storageNetworkPolicyModification"
            }
          },
          {
            "name": "notifierIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "NetworkPolicyService"
        ]
      }
    },
    "/v1/networkpolicies/undo/deployment/{id}": {
      "get": {
        "operationId": "NetworkPolicyService_GetUndoModificationForDeployment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetUndoModificationForDeploymentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "NetworkPolicyService"
        ]
      }
    },
    "/v1/networkpolicies/undo/{clusterId}": {
      "get": {
        "operationId": "NetworkPolicyService_GetUndoModification",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetUndoModificationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "NetworkPolicyService"
        ]
      }
    },
    "/v1/networkpolicies/undobaselinecomparison/{id}": {
      "get": {
        "operationId": "NetworkPolicyService_GetDiffFlowsFromUndoModificationForDeployment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetDiffFlowsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "NetworkPolicyService"
        ]
      }
    },
    "/v1/networkpolicies/{id}": {
      "get": {
        "operationId": "NetworkPolicyService_GetNetworkPolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/storageNetworkPolicy"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "NetworkPolicyService"
        ]
      }
    }
  },
  "definitions": {
    "DeploymentListenPort": {
      "type": "object",
      "properties": {
        "port": {
          "type": "integer",
          "format": "int64"
        },
        "l4protocol": {
          "$ref": "#/definitions/storageL4Protocol"
        }
      }
    },
    "GenerateNetworkPoliciesRequestDeleteExistingPoliciesMode": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "NONE",
        "GENERATED_ONLY",
        "ALL"
      ],
      "default": "UNKNOWN",
      "description": " - NONE: Do not delete any existing network policies.\n - GENERATED_ONLY: Delete any existing *auto-generated* network policies.\n - ALL: Delete all existing network policies in the respective namespace."
    },
    "NetworkEntityInfoDeployment": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "cluster": {
          "type": "string"
        },
        "listenPorts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/DeploymentListenPort"
          }
        }
      }
    },
    "NetworkEntityInfoExternalSource": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "cidr": {
          "type": "string"
        },
        "default": {
          "type": "boolean",
          "description": "`default` indicates whether the external source is user-generated or system-generated."
        }
      },
      "description": "Update normalizeDupNameExtSrcs(...) in `central/networkgraph/aggregator/aggregator.go` whenever this message is updated."
    },
    "NetworkPolicyServiceApplyNetworkPolicyYamlForDeploymentBody": {
      "type": "object",
      "properties": {
        "modification": {
          "$ref": "#/definitions/storageNetworkPolicyModification"
        }
      }
    },
    "NetworkPolicyServiceGetBaselineGeneratedNetworkPolicyForDeploymentBody": {
      "type": "object",
      "properties": {
        "deleteExisting": {
          "$ref": "#/definitions/GenerateNetworkPoliciesRequestDeleteExistingPoliciesMode"
        },
        "includePorts": {
          "type": "boolean"
        }
      }
    },
    "googlerpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "storageIPBlock": {
      "type": "object",
      "properties": {
        "cidr": {
          "type": "string"
        },
        "except": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "storageL4Protocol": {
      "type": "string",
      "enum": [
        "L4_PROTOCOL_UNKNOWN",
        "L4_PROTOCOL_TCP",
        "L4_PROTOCOL_UDP",
        "L4_PROTOCOL_ICMP",
        "L4_PROTOCOL_RAW",
        "L4_PROTOCOL_SCTP",
        "L4_PROTOCOL_ANY"
      ],
      "default": "L4_PROTOCOL_UNKNOWN"
    },
    "storageLabelSelector": {
      "type": "object",
      "properties": {
        "matchLabels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "This is actually a oneof, but we can't make it one due to backwards\ncompatibility constraints."
        },
        "requirements": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/storageLabelSelectorRequirement"
          }
        }
      },
      "description": "Next available tag: 3",
      "title": "Label selector components are joined with logical AND, see\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/"
    },
    "storageLabelSelectorOperator": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "IN",
        "NOT_IN",
        "EXISTS",
        "NOT_EXISTS"
      ],
      "default": "UNKNOWN"
    },
    "storageLabelSelectorRequirement": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "op": {
          "$ref": "#/definitions/storageLabelSelectorOperator"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "Next available tag: 4"
    },
    "storageNetworkBaselineConnectionProperties": {
      "type": "object",
      "properties": {
        "ingress": {
          "type": "boolean",
          "title": "Whether this connection is an ingress/egress, from the PoV\nof the deployment whose baseline this is in"
        },
        "port": {
          "type": "integer",
          "format": "int64",
          "title": "May be 0 if not applicable (e.g., icmp), and denotes the destination port"
        },
        "protocol": {
          "$ref": "#/definitions/storageL4Protocol"
        }
      },
      "title": "NetworkBaselineConnectionProperties represents information about a baseline connection\nnext available tag: 4"
    },
    "storageNetworkEntityInfo": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/storageNetworkEntityInfoType"
        },
        "id": {
          "type": "string"
        },
        "deployment": {
          "$ref": "#/definitions/NetworkEntityInfoDeployment"
        },
        "externalSource": {
          "$ref": "#/definitions/NetworkEntityInfoExternalSource"
        }
      }
    },
    "storageNetworkEntityInfoType": {
      "type": "string",
      "enum": [
        "UNKNOWN_TYPE",
        "DEPLOYMENT",
        "INTERNET",
        "LISTEN_ENDPOINT",
        "EXTERNAL_SOURCE",
        "INTERNAL_ENTITIES"
      ],
      "default": "UNKNOWN_TYPE",
      "title": "- INTERNAL_ENTITIES: INTERNAL_ENTITIES is for grouping all internal entities under a single network graph node"
    },
    "storageNetworkPolicy": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "clusterId": {
          "type": "string"
        },
        "clusterName": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "spec": {
          "$ref": "#/definitions/storageNetworkPolicySpec"
        },
        "yaml": {
          "type": "string"
        },
        "apiVersion": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "storageNetworkPolicyApplicationUndoRecord": {
      "type": "object",
      "properties": {
        "clusterId": {
          "type": "string"
        },
        "user": {
          "type": "string"
        },
        "applyTimestamp": {
          "type": "string",
          "format": "date-time"
        },
        "originalModification": {
          "$ref": "#/definitions/storageNetworkPolicyModification"
        },
        "undoModification": {
          "$ref": "#/definitions/storageNetworkPolicyModification"
        }
      }
    },
    "storageNetworkPolicyEgressRule": {
      "type": "object",
      "properties": {
        "ports": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/storageNetworkPolicyPort"
          }
        },
        "to": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/storageNetworkPolicyPeer"
          }
        }
      }
    },
    "storageNetworkPolicyIngressRule": {
      "type": "object",
      "properties": {
        "ports": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/storageNetworkPolicyPort"
          }
        },
        "from": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/storageNetworkPolicyPeer"
          }
        }
      }
    },
    "storageNetworkPolicyModification": {
      "type": "object",
      "properties": {
        "applyYaml": {
          "type": "string"
        },
        "toDelete": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/storageNetworkPolicyReference"
          }
        }
      },
      "title": "Next available tag: 3"
    },
    "storageNetworkPolicyPeer": {
      "type": "object",
      "properties": {
        "podSelector": {
          "$ref": "#/definitions/storageLabelSelector"
        },
        "namespaceSelector": {
          "$ref": "#/definitions/storageLabelSelector"
        },
        "ipBlock": {
          "$ref": "#/definitions/storageIPBlock"
        }
      }
    },
    "storageNetworkPolicyPort": {
      "type": "object",
      "properties": {
        "protocol": {
          "$ref": "#/definitions/storageProtocol"
        },
        "port": {
          "type": "integer",
          "format": "int32"
        },
        "portName": {
          "type": "string"
        }
      }
    },
    "storageNetworkPolicyReference": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "title": "Next available tag: 3"
    },
    "storageNetworkPolicySpec": {
      "type": "object",
      "properties": {
        "podSelector": {
          "$ref": "#/definitions/storageLabelSelector"
        },
        "ingress": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/storageNetworkPolicyIngressRule"
          }
        },
        "egress": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/storageNetworkPolicyEgressRule"
          }
        },
        "policyTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/storageNetworkPolicyType"
          }
        }
      }
    },
    "storageNetworkPolicyType": {
      "type": "string",
      "enum": [
        "UNSET_NETWORK_POLICY_TYPE",
        "INGRESS_NETWORK_POLICY_TYPE",
        "EGRESS_NETWORK_POLICY_TYPE"
      ],
      "default": "UNSET_NETWORK_POLICY_TYPE"
    },
    "storageProtocol": {
      "type": "string",
      "enum": [
        "UNSET_PROTOCOL",
        "TCP_PROTOCOL",
        "UDP_PROTOCOL",
        "SCTP_PROTOCOL"
      ],
      "default": "UNSET_PROTOCOL"
    },
    "v1Empty": {
      "type": "object"
    },
    "v1GenerateNetworkPoliciesResponse": {
      "type": "object",
      "properties": {
        "modification": {
          "$ref": "#/definitions/storageNetworkPolicyModification"
        }
      },
      "title": "Next available tag: 2"
    },
    "v1GetAllowedPeersFromCurrentPolicyForDeploymentResponse": {
      "type": "object",
      "properties": {
        "allowedPeers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1NetworkBaselineStatusPeer"
          }
        }
      }
    },
    "v1GetBaselineGeneratedPolicyForDeploymentResponse": {
      "type": "object",
      "properties": {
        "modification": {
          "$ref": "#/definitions/storageNetworkPolicyModification"
        }
      }
    },
    "v1GetDiffFlowsGroupedFlow": {
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/storageNetworkEntityInfo"
        },
        "properties": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/storageNetworkBaselineConnectionProperties"
          }
        }
      }
    },
    "v1GetDiffFlowsReconciledFlow": {
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/storageNetworkEntityInfo"
        },
        "added": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/storageNetworkBaselineConnectionProperties"
          }
        },
        "removed": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/storageNetworkBaselineConnectionProperties"
          }
        },
        "unchanged": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/storageNetworkBaselineConnectionProperties"
          }
        }
      }
    },
    "v1GetDiffFlowsResponse": {
      "type": "object",
      "properties": {
        "added": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1GetDiffFlowsGroupedFlow"
          }
        },
        "removed": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1GetDiffFlowsGroupedFlow"
          }
        },
        "reconciled": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1GetDiffFlowsReconciledFlow"
          }
        }
      }
    },
    "v1GetUndoModificationForDeploymentResponse": {
      "type": "object",
      "properties": {
        "undoRecord": {
          "$ref": "#/definitions/storageNetworkPolicyApplicationUndoRecord"
        }
      }
    },
    "v1GetUndoModificationResponse": {
      "type": "object",
      "properties": {
        "undoRecord": {
          "$ref": "#/definitions/storageNetworkPolicyApplicationUndoRecord"
        }
      }
    },
    "v1NetworkBaselinePeerEntity": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/storageNetworkEntityInfoType"
        }
      }
    },
    "v1NetworkBaselineStatusPeer": {
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/v1NetworkBaselinePeerEntity",
          "description": "The peer entity of the connection. This can be constructed from the\nentity object of the networkgraph API. Only the ID and type are required."
        },
        "port": {
          "type": "integer",
          "format": "int64",
          "description": "The port and protocol of the destination of the given connection."
        },
        "protocol": {
          "$ref": "#/definitions/storageL4Protocol"
        },
        "ingress": {
          "type": "boolean",
          "description": "A boolean representing whether the query is for an ingress or egress\nconnection. This is defined with respect to the current deployment.\nThus:\n  - If the connection in question is in the outEdges of the current deployment,\n    this should be false.\n  - If it is in the outEdges of the peer deployment, this\n    should be true."
        }
      }
    },
    "v1NetworkEdgeProperties": {
      "type": "object",
      "properties": {
        "port": {
          "type": "integer",
          "format": "int64"
        },
        "protocol": {
          "$ref": "#/definitions/storageL4Protocol"
        },
        "lastActiveTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1NetworkEdgePropertiesBundle": {
      "type": "object",
      "properties": {
        "properties": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1NetworkEdgeProperties"
          }
        }
      }
    },
    "v1NetworkGraph": {
      "type": "object",
      "properties": {
        "epoch": {
          "type": "integer",
          "format": "int64"
        },
        "nodes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1NetworkNode"
          }
        }
      }
    },
    "v1NetworkGraphDiff": {
      "type": "object",
      "properties": {
        "DEPRECATEDNodeDiffs": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1NetworkNodeDiff"
          }
        },
        "nodeDiffs": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1NetworkNodeDiff"
          }
        }
      }
    },
    "v1NetworkGraphEpoch": {
      "type": "object",
      "properties": {
        "epoch": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "v1NetworkGraphScope": {
      "type": "object",
      "properties": {
        "query": {
          "type": "string"
        }
      }
    },
    "v1NetworkNode": {
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/storageNetworkEntityInfo"
        },
        "internetAccess": {
          "type": "boolean"
        },
        "policyIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "nonIsolatedIngress": {
          "type": "boolean"
        },
        "nonIsolatedEgress": {
          "type": "boolean"
        },
        "queryMatch": {
          "type": "boolean"
        },
        "outEdges": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1NetworkEdgePropertiesBundle"
          }
        }
      }
    },
    "v1NetworkNodeDiff": {
      "type": "object",
      "properties": {
        "policyIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "DEPRECATEDOutEdges": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1NetworkEdgePropertiesBundle"
          }
        },
        "outEdges": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1NetworkEdgePropertiesBundle"
          }
        },
        "nonIsolatedIngress": {
          "type": "boolean"
        },
        "nonIsolatedEgress": {
          "type": "boolean"
        }
      }
    },
    "v1NetworkPoliciesResponse": {
      "type": "object",
      "properties": {
        "networkPolicies": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/storageNetworkPolicy"
          }
        }
      }
    },
    "v1NetworkPolicyInSimulation": {
      "type": "object",
      "properties": {
        "policy": {
          "$ref": "#/definitions/storageNetworkPolicy"
        },
        "status": {
          "$ref": "#/definitions/v1NetworkPolicyInSimulationStatus"
        },
        "oldPolicy": {
          "$ref": "#/definitions/storageNetworkPolicy",
          "description": "if status is MODIFIED or DELETED, this contains the previous network policy."
        }
      }
    },
    "v1NetworkPolicyInSimulationStatus": {
      "type": "string",
      "enum": [
        "INVALID",
        "UNCHANGED",
        "MODIFIED",
        "ADDED",
        "DELETED"
      ],
      "default": "INVALID"
    },
    "v1SimulateNetworkGraphResponse": {
      "type": "object",
      "properties": {
        "simulatedGraph": {
          "$ref": "#/definitions/v1NetworkGraph"
        },
        "policies": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1NetworkPolicyInSimulation"
          }
        },
        "added": {
          "$ref": "#/definitions/v1NetworkGraphDiff"
        },
        "removed": {
          "$ref": "#/definitions/v1NetworkGraphDiff"
        }
      }
    }
  }
}
