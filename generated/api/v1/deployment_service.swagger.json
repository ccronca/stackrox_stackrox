{
  "swagger": "2.0",
  "info": {
    "title": "api/v1/deployment_service.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "DeploymentService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/deployments": {
      "get": {
        "summary": "ListDeployments returns the list of deployments.",
        "operationId": "DeploymentService_ListDeployments",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListDeploymentsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagination.limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pagination.offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pagination.sortOption.field",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagination.sortOption.reversed",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.sortOption.aggregateBy.aggrFunc",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "UNSET",
              "COUNT",
              "MIN",
              "MAX"
            ],
            "default": "UNSET"
          },
          {
            "name": "pagination.sortOption.aggregateBy.distinct",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "DeploymentService"
        ]
      }
    },
    "/v1/deployments/metadata/labels": {
      "get": {
        "summary": "GetLabels returns the labels used by deployments.",
        "operationId": "DeploymentService_GetLabels",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeploymentLabelsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "DeploymentService"
        ]
      }
    },
    "/v1/deployments/{id}": {
      "get": {
        "summary": "GetDeployment returns a deployment given its ID.",
        "operationId": "DeploymentService_GetDeployment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/storageDeployment"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "DeploymentService"
        ]
      }
    },
    "/v1/deploymentscount": {
      "get": {
        "summary": "CountDeployments returns the number of deployments.",
        "operationId": "DeploymentService_CountDeployments",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CountDeploymentsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagination.limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pagination.offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pagination.sortOption.field",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagination.sortOption.reversed",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.sortOption.aggregateBy.aggrFunc",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "UNSET",
              "COUNT",
              "MIN",
              "MAX"
            ],
            "default": "UNSET"
          },
          {
            "name": "pagination.sortOption.aggregateBy.distinct",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "DeploymentService"
        ]
      }
    },
    "/v1/deploymentswithprocessinfo": {
      "get": {
        "summary": "ListDeploymentsWithProcessInfo returns the list of deployments with process information.",
        "operationId": "DeploymentService_ListDeploymentsWithProcessInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListDeploymentsWithProcessInfoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagination.limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pagination.offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pagination.sortOption.field",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagination.sortOption.reversed",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.sortOption.aggregateBy.aggrFunc",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "UNSET",
              "COUNT",
              "MIN",
              "MAX"
            ],
            "default": "UNSET"
          },
          {
            "name": "pagination.sortOption.aggregateBy.distinct",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "DeploymentService"
        ]
      }
    },
    "/v1/deploymentswithrisk/{id}": {
      "get": {
        "summary": "GetDeploymentWithRisk returns a deployment and its risk given its ID.",
        "operationId": "DeploymentService_GetDeploymentWithRisk",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetDeploymentWithRiskResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "DeploymentService"
        ]
      }
    },
    "/v1/export/deployments": {
      "get": {
        "operationId": "DeploymentService_ExportDeployments",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/v1ExportDeploymentResponse"
                },
                "error": {
                  "$ref": "#/definitions/googlerpcStatus"
                }
              },
              "title": "Stream result of v1ExportDeploymentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "timeout",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "query",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "DeploymentService"
        ]
      }
    }
  },
  "definitions": {
    "ContainerConfigEnvironmentConfig": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "title": "@gotags: search:\"Environment Key,store\""
        },
        "value": {
          "type": "string",
          "title": "@gotags: search:\"Environment Value,store\""
        },
        "envVarSource": {
          "$ref": "#/definitions/EnvironmentConfigEnvVarSource",
          "title": "@gotags: search:\"Environment Variable Source,store\""
        }
      }
    },
    "ContainerNameAndBaselineStatusBaselineStatus": {
      "type": "string",
      "enum": [
        "INVALID",
        "NOT_GENERATED",
        "UNLOCKED",
        "LOCKED"
      ],
      "default": "INVALID",
      "description": " - NOT_GENERATED: In current implementation, this is a temporary condition."
    },
    "DeploymentLabelsResponseLabelValues": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "EnvironmentConfigEnvVarSource": {
      "type": "string",
      "enum": [
        "UNSET",
        "RAW",
        "SECRET_KEY",
        "CONFIG_MAP_KEY",
        "FIELD",
        "RESOURCE_FIELD",
        "UNKNOWN"
      ],
      "default": "UNSET",
      "title": "For any update to EnvVarSource, please also update 'ui/src/messages/common.js'"
    },
    "ListDeploymentsWithProcessInfoResponseDeploymentWithProcessInfo": {
      "type": "object",
      "properties": {
        "deployment": {
          "$ref": "#/definitions/storageListDeployment"
        },
        "baselineStatuses": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/storageContainerNameAndBaselineStatus"
          }
        }
      }
    },
    "PortConfigExposureInfo": {
      "type": "object",
      "properties": {
        "level": {
          "$ref": "#/definitions/PortConfigExposureLevel",
          "title": "@gotags: search:\"Exposure Level,store\""
        },
        "serviceName": {
          "type": "string",
          "description": "@gotags: search:\"Exposing Service,store\"",
          "title": "only set if level is not HOST"
        },
        "serviceId": {
          "type": "string"
        },
        "serviceClusterIp": {
          "type": "string"
        },
        "servicePort": {
          "type": "integer",
          "format": "int32",
          "title": "@gotags: search:\"Exposing Service Port,store\""
        },
        "nodePort": {
          "type": "integer",
          "format": "int32",
          "description": "@gotags: search:\"Exposed Node Port,store\"",
          "title": "only set if level is HOST, NODE, EXTERNAL or ROUTE"
        },
        "externalIps": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "@gotags: search:\"External IP,store\"",
          "title": "only set if level is EXTERNAL"
        },
        "externalHostnames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "@gotags: search:\"External Hostname,store\"",
          "title": "only set if level is EXTERNAL or ROUTE"
        }
      }
    },
    "PortConfigExposureLevel": {
      "type": "string",
      "enum": [
        "UNSET",
        "EXTERNAL",
        "NODE",
        "INTERNAL",
        "HOST",
        "ROUTE"
      ],
      "default": "UNSET"
    },
    "ResultFactor": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "RiskResult": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "factors": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ResultFactor"
          }
        },
        "score": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "SeccompProfileProfileType": {
      "type": "string",
      "enum": [
        "UNCONFINED",
        "RUNTIME_DEFAULT",
        "LOCALHOST"
      ],
      "default": "UNCONFINED"
    },
    "SecurityContextSELinux": {
      "type": "object",
      "properties": {
        "user": {
          "type": "string"
        },
        "role": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "level": {
          "type": "string"
        }
      }
    },
    "SecurityContextSeccompProfile": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/SeccompProfileProfileType",
          "title": "@gotags: policy:\"Seccomp Profile Type\""
        },
        "localhostProfile": {
          "type": "string"
        }
      }
    },
    "VolumeMountPropagation": {
      "type": "string",
      "enum": [
        "NONE",
        "HOST_TO_CONTAINER",
        "BIDIRECTIONAL"
      ],
      "default": "NONE"
    },
    "googlerpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "storageContainer": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "config": {
          "$ref": "#/definitions/storageContainerConfig"
        },
        "image": {
          "$ref": "#/definitions/storageContainerImage"
        },
        "securityContext": {
          "$ref": "#/definitions/storageSecurityContext"
        },
        "volumes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/storageVolume"
          },
          "title": "@gotags: sql:\"flag=ROX_DEPLOYMENT_VOLUME_SEARCH\" search:\"flag=ROX_DEPLOYMENT_VOLUME_SEARCH\""
        },
        "ports": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/storagePortConfig"
          },
          "title": "Policies use the port config on the top-level deployment. // @gotags: policy:\",ignore\" search:\"-\""
        },
        "secrets": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/storageEmbeddedSecret"
          },
          "title": "@gotags: sql:\"flag=ROX_DEPLOYMENT_SECRET_SEARCH\" search:\"flag=ROX_DEPLOYMENT_SECRET_SEARCH\""
        },
        "resources": {
          "$ref": "#/definitions/storageResources"
        },
        "name": {
          "type": "string",
          "title": "@gotags: policy:\"Container Name\""
        },
        "livenessProbe": {
          "$ref": "#/definitions/storageLivenessProbe"
        },
        "readinessProbe": {
          "$ref": "#/definitions/storageReadinessProbe"
        }
      }
    },
    "storageContainerConfig": {
      "type": "object",
      "properties": {
        "env": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ContainerConfigEnvironmentConfig"
          },
          "title": "@gotags: sql:\"flag=ROX_DEPLOYMENT_ENVVAR_SEARCH\" search:\"flag=ROX_DEPLOYMENT_ENVVAR_SEARCH\""
        },
        "command": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "args": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "directory": {
          "type": "string"
        },
        "user": {
          "type": "string"
        },
        "uid": {
          "type": "string",
          "format": "int64"
        },
        "appArmorProfile": {
          "type": "string",
          "title": "@gotags: policy:\"AppArmor Profile\""
        }
      }
    },
    "storageContainerImage": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "@gotags: search:\"Image Sha,store,hidden\" sql:\"fk(Image:id),no-fk-constraint,index=hash\""
        },
        "name": {
          "$ref": "#/definitions/storageImageName"
        },
        "notPullable": {
          "type": "boolean"
        },
        "isClusterLocal": {
          "type": "boolean"
        }
      },
      "title": "Next tag: 12"
    },
    "storageContainerNameAndBaselineStatus": {
      "type": "object",
      "properties": {
        "containerName": {
          "type": "string"
        },
        "baselineStatus": {
          "$ref": "#/definitions/ContainerNameAndBaselineStatusBaselineStatus"
        },
        "anomalousProcessesExecuted": {
          "type": "boolean"
        }
      },
      "description": "`ContainerNameAndBaselineStatus` represents a cached result\nof process evaluation on a specific container name."
    },
    "storageDeployment": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "@gotags: search:\"Deployment ID,store,hidden\" sql:\"pk,type(uuid)\""
        },
        "name": {
          "type": "string",
          "title": "@gotags: search:\"Deployment,store\""
        },
        "hash": {
          "type": "string",
          "format": "uint64",
          "title": "@gotags: hash:\"ignore\" sensorhash:\"ignore\""
        },
        "type": {
          "type": "string",
          "title": "@gotags: search:\"Deployment Type\""
        },
        "namespace": {
          "type": "string",
          "title": "@gotags: search:\"Namespace,store\""
        },
        "namespaceId": {
          "type": "string",
          "title": "@gotags: search:\"Namespace ID\" sql:\"fk(NamespaceMetadata:id),no-fk-constraint,type(uuid)\""
        },
        "orchestratorComponent": {
          "type": "boolean",
          "title": "@gotags: search:\"Orchestrator Component\""
        },
        "replicas": {
          "type": "string",
          "format": "int64",
          "title": "@gotags: policy:\"Replicas\""
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "@gotags: search:\"Deployment Label,store\""
        },
        "podLabels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "@gotags: search:\"Pod Label,store\""
        },
        "labelSelector": {
          "$ref": "#/definitions/storageLabelSelector"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "@gotags: search:\"Created,store,hidden\" hash:\"ignore\""
        },
        "clusterId": {
          "type": "string",
          "title": "@gotags: search:\"Cluster ID,store,hidden\" sql:\"type(uuid)\""
        },
        "clusterName": {
          "type": "string",
          "title": "@gotags: search:\"Cluster,store\""
        },
        "containers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/storageContainer"
          }
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "@gotags: search:\"Deployment Annotation\""
        },
        "priority": {
          "type": "string",
          "format": "int64",
          "title": "@gotags: search:\"Deployment Risk Priority,hidden\" hash:\"ignore\""
        },
        "inactive": {
          "type": "boolean"
        },
        "imagePullSecrets": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "@gotags: search:\"Image Pull Secret\""
        },
        "serviceAccount": {
          "type": "string",
          "title": "@gotags: search:\"Service Account\""
        },
        "serviceAccountPermissionLevel": {
          "$ref": "#/definitions/storagePermissionLevel",
          "title": "@gotags: search:\"Service Account Permission Level,store\""
        },
        "automountServiceAccountToken": {
          "type": "boolean",
          "title": "@gotags: policy:\"Automount Service Account Token\""
        },
        "hostNetwork": {
          "type": "boolean",
          "title": "@gotags: policy:\"Host Network\""
        },
        "hostPid": {
          "type": "boolean",
          "title": "@gotags: policy:\"Host PID\""
        },
        "hostIpc": {
          "type": "boolean",
          "title": "@gotags: policy:\"Host IPC\""
        },
        "runtimeClass": {
          "type": "string",
          "title": "@gotags: policy:\"Runtime Class\""
        },
        "tolerations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/storageToleration"
          },
          "title": "@gotags: search:\"-\""
        },
        "ports": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/storagePortConfig"
          },
          "title": "@gotags: policy:\"Ports\""
        },
        "stateTimestamp": {
          "type": "string",
          "format": "int64",
          "title": "Internal use only // @gotags: hash:\"ignore\" sensorhash:\"ignore\""
        },
        "riskScore": {
          "type": "number",
          "format": "float",
          "title": "@gotags: search:\"Deployment Risk Score,hidden\" policy:\",ignore\""
        }
      },
      "title": "Next available tag: 35"
    },
    "storageEmbeddedSecret": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "@gotags: search:\"Secret\""
        },
        "path": {
          "type": "string",
          "title": "@gotags: search:\"Secret Path\""
        }
      }
    },
    "storageImageName": {
      "type": "object",
      "properties": {
        "registry": {
          "type": "string",
          "title": "@gotags: search:\"Image Registry,store\""
        },
        "remote": {
          "type": "string",
          "title": "@gotags: search:\"Image Remote,store\""
        },
        "tag": {
          "type": "string",
          "title": "@gotags: search:\"Image Tag,store\""
        },
        "fullName": {
          "type": "string",
          "title": "@gotags: search:\"Image,store,analyzer=standard\""
        }
      }
    },
    "storageLabelSelector": {
      "type": "object",
      "properties": {
        "matchLabels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "This is actually a oneof, but we can't make it one due to backwards\ncompatibility constraints."
        },
        "requirements": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/storageLabelSelectorRequirement"
          }
        }
      },
      "description": "Next available tag: 3",
      "title": "Label selector components are joined with logical AND, see\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/"
    },
    "storageLabelSelectorOperator": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "IN",
        "NOT_IN",
        "EXISTS",
        "NOT_EXISTS"
      ],
      "default": "UNKNOWN"
    },
    "storageLabelSelectorRequirement": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "op": {
          "$ref": "#/definitions/storageLabelSelectorOperator"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "Next available tag: 4"
    },
    "storageListDeployment": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "hash": {
          "type": "string",
          "format": "uint64"
        },
        "name": {
          "type": "string"
        },
        "cluster": {
          "type": "string"
        },
        "clusterId": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "priority": {
          "type": "string",
          "format": "int64"
        }
      },
      "title": "Next available tag: 9"
    },
    "storageLivenessProbe": {
      "type": "object",
      "properties": {
        "defined": {
          "type": "boolean",
          "title": "@gotags: policy:\"Liveness Probe Defined\""
        }
      }
    },
    "storagePermissionLevel": {
      "type": "string",
      "enum": [
        "UNSET",
        "NONE",
        "DEFAULT",
        "ELEVATED_IN_NAMESPACE",
        "ELEVATED_CLUSTER_WIDE",
        "CLUSTER_ADMIN"
      ],
      "default": "UNSET",
      "title": "For any update to PermissionLevel, also update:\n- pkg/searchbasedpolicies/builders/k8s_rbac.go\n- ui/src/messages/common.js"
    },
    "storagePortConfig": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "containerPort": {
          "type": "integer",
          "format": "int32",
          "title": "@gotags: search:\"Port,store\""
        },
        "protocol": {
          "type": "string",
          "title": "@gotags: search:\"Port Protocol,store\""
        },
        "exposure": {
          "$ref": "#/definitions/PortConfigExposureLevel",
          "title": "@gotags: search:\"Max Exposure Level,store\""
        },
        "exposedPort": {
          "type": "integer",
          "format": "int32"
        },
        "exposureInfos": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/PortConfigExposureInfo"
          },
          "title": "@gotags: policy:\"Exposure Infos\" sensorhash:\"set\""
        }
      },
      "title": "Next Available Tag: 6"
    },
    "storageReadinessProbe": {
      "type": "object",
      "properties": {
        "defined": {
          "type": "boolean",
          "title": "@gotags: policy:\"Readiness Probe Defined\""
        }
      }
    },
    "storageResources": {
      "type": "object",
      "properties": {
        "cpuCoresRequest": {
          "type": "number",
          "format": "float",
          "title": "@gotags: search:\"CPU Cores Request,store\""
        },
        "cpuCoresLimit": {
          "type": "number",
          "format": "float",
          "title": "@gotags: search:\"CPU Cores Limit,store\""
        },
        "memoryMbRequest": {
          "type": "number",
          "format": "float",
          "title": "@gotags: search:\"Memory Request (MB),store\""
        },
        "memoryMbLimit": {
          "type": "number",
          "format": "float",
          "title": "@gotags: search:\"Memory Limit (MB),store\""
        }
      }
    },
    "storageRisk": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "@gotags: sql:\"pk\""
        },
        "subject": {
          "$ref": "#/definitions/storageRiskSubject"
        },
        "score": {
          "type": "number",
          "format": "float",
          "title": "@gotags: search:\"Risk Score,hidden\""
        },
        "results": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/RiskResult"
          }
        }
      }
    },
    "storageRiskSubject": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "namespace": {
          "type": "string",
          "title": "@gotags: search:\"Namespace,store\""
        },
        "clusterId": {
          "type": "string",
          "title": "@gotags: search:\"Cluster ID,store,hidden\" sql:\"type(uuid)\""
        },
        "type": {
          "$ref": "#/definitions/storageRiskSubjectType",
          "title": "@gotags: search:\"Risk Subject Type,hidden\""
        }
      }
    },
    "storageRiskSubjectType": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "DEPLOYMENT",
        "NAMESPACE",
        "CLUSTER",
        "NODE",
        "NODE_COMPONENT",
        "IMAGE",
        "IMAGE_COMPONENT",
        "SERVICEACCOUNT"
      ],
      "default": "UNKNOWN",
      "title": "Next tag: 9"
    },
    "storageSecurityContext": {
      "type": "object",
      "properties": {
        "privileged": {
          "type": "boolean",
          "title": "@gotags: search:\"Privileged,store\""
        },
        "selinux": {
          "$ref": "#/definitions/SecurityContextSELinux"
        },
        "dropCapabilities": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "@gotags: search:\"Drop Capabilities,store\""
        },
        "addCapabilities": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "@gotags: search:\"Add Capabilities,store\""
        },
        "readOnlyRootFilesystem": {
          "type": "boolean",
          "title": "@gotags: search:\"Read Only Root Filesystem,store\""
        },
        "seccompProfile": {
          "$ref": "#/definitions/SecurityContextSeccompProfile"
        },
        "allowPrivilegeEscalation": {
          "type": "boolean",
          "title": "@gotags: policy:\"Allow Privilege Escalation\""
        }
      }
    },
    "storageTaintEffect": {
      "type": "string",
      "enum": [
        "UNKNOWN_TAINT_EFFECT",
        "NO_SCHEDULE_TAINT_EFFECT",
        "PREFER_NO_SCHEDULE_TAINT_EFFECT",
        "NO_EXECUTE_TAINT_EFFECT"
      ],
      "default": "UNKNOWN_TAINT_EFFECT"
    },
    "storageToleration": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "title": "@gotags: search:\"Toleration Key\""
        },
        "operator": {
          "$ref": "#/definitions/storageTolerationOperator"
        },
        "value": {
          "type": "string",
          "title": "@gotags: search:\"Toleration Value\""
        },
        "taintEffect": {
          "$ref": "#/definitions/storageTaintEffect"
        }
      }
    },
    "storageTolerationOperator": {
      "type": "string",
      "enum": [
        "TOLERATION_OPERATION_UNKNOWN",
        "TOLERATION_OPERATOR_EXISTS",
        "TOLERATION_OPERATOR_EQUAL"
      ],
      "default": "TOLERATION_OPERATION_UNKNOWN"
    },
    "storageVolume": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "@gotags: search:\"Volume Name,store\""
        },
        "source": {
          "type": "string",
          "title": "@gotags: search:\"Volume Source,store\""
        },
        "destination": {
          "type": "string",
          "title": "@gotags: search:\"Volume Destination,store\""
        },
        "readOnly": {
          "type": "boolean",
          "title": "@gotags: search:\"Volume ReadOnly,store\""
        },
        "type": {
          "type": "string",
          "title": "@gotags: search:\"Volume Type,store\""
        },
        "mountPropagation": {
          "$ref": "#/definitions/VolumeMountPropagation",
          "title": "@gotags: policy:\"Mount Propagation\""
        }
      }
    },
    "v1AggregateBy": {
      "type": "object",
      "properties": {
        "aggrFunc": {
          "$ref": "#/definitions/v1Aggregation"
        },
        "distinct": {
          "type": "boolean"
        }
      }
    },
    "v1Aggregation": {
      "type": "string",
      "enum": [
        "UNSET",
        "COUNT",
        "MIN",
        "MAX"
      ],
      "default": "UNSET"
    },
    "v1CountDeploymentsResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "v1DeploymentLabelsResponse": {
      "type": "object",
      "properties": {
        "labels": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/DeploymentLabelsResponseLabelValues"
          }
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1ExportDeploymentResponse": {
      "type": "object",
      "properties": {
        "deployment": {
          "$ref": "#/definitions/storageDeployment"
        }
      }
    },
    "v1GetDeploymentWithRiskResponse": {
      "type": "object",
      "properties": {
        "deployment": {
          "$ref": "#/definitions/storageDeployment"
        },
        "risk": {
          "$ref": "#/definitions/storageRisk"
        }
      }
    },
    "v1ListDeploymentsResponse": {
      "type": "object",
      "properties": {
        "deployments": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/storageListDeployment"
          }
        }
      }
    },
    "v1ListDeploymentsWithProcessInfoResponse": {
      "type": "object",
      "properties": {
        "deployments": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ListDeploymentsWithProcessInfoResponseDeploymentWithProcessInfo"
          }
        }
      }
    },
    "v1Pagination": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "format": "int32"
        },
        "offset": {
          "type": "integer",
          "format": "int32"
        },
        "sortOption": {
          "$ref": "#/definitions/v1SortOption"
        },
        "sortOptions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SortOption"
          },
          "description": "This field is under development. It is not supported on any REST APIs."
        }
      }
    },
    "v1SortOption": {
      "type": "object",
      "properties": {
        "field": {
          "type": "string"
        },
        "reversed": {
          "type": "boolean"
        },
        "aggregateBy": {
          "$ref": "#/definitions/v1AggregateBy",
          "description": "This field is under development. It is not supported on any REST APIs."
        }
      }
    }
  }
}
