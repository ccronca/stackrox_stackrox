{
  "swagger": "2.0",
  "info": {
    "title": "api/v1/cluster_init_service.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "ClusterInitService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/cluster-init/ca-config": {
      "get": {
        "operationId": "ClusterInitService_GetCAConfig",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetCAConfigResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "ClusterInitService"
        ]
      }
    },
    "/v1/cluster-init/init-bundles": {
      "get": {
        "operationId": "ClusterInitService_GetInitBundles",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1InitBundleMetasResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "ClusterInitService"
        ]
      },
      "post": {
        "operationId": "ClusterInitService_GenerateInitBundle",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1InitBundleGenResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1InitBundleGenRequest"
            }
          }
        ],
        "tags": [
          "ClusterInitService"
        ]
      }
    },
    "/v1/cluster-init/init-bundles/revoke": {
      "patch": {
        "summary": "RevokeInitBundle deletes cluster init bundle. If this operation impacts any cluster\nthen its ID should be included in request.\nIf confirm_impacted_clusters_ids does not match with current impacted clusters\nthen request will fail with error that includes all impacted clusters.",
        "operationId": "ClusterInitService_RevokeInitBundle",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1InitBundleRevokeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1InitBundleRevokeRequest"
            }
          }
        ],
        "tags": [
          "ClusterInitService"
        ]
      }
    }
  },
  "definitions": {
    "InitBundleMetaImpactedCluster": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "InitBundleRevokeResponseInitBundleRevocationError": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "error": {
          "type": "string"
        },
        "impactedClusters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/InitBundleMetaImpactedCluster"
          }
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "storageUser": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "authProviderId": {
          "type": "string"
        },
        "attributes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/storageUserAttribute"
          }
        },
        "idpToken": {
          "type": "string"
        }
      },
      "description": "User is an object that allows us to track the roles a user is tied to, and how they logged in."
    },
    "storageUserAttribute": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "v1GetCAConfigResponse": {
      "type": "object",
      "properties": {
        "helmValuesBundle": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "v1InitBundleGenRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "v1InitBundleGenResponse": {
      "type": "object",
      "properties": {
        "meta": {
          "$ref": "#/definitions/v1InitBundleMeta"
        },
        "helmValuesBundle": {
          "type": "string",
          "format": "byte"
        },
        "kubectlBundle": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "v1InitBundleMeta": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "impactedClusters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/InitBundleMetaImpactedCluster"
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "createdBy": {
          "$ref": "#/definitions/storageUser"
        },
        "expiresAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1InitBundleMetasResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1InitBundleMeta"
          }
        }
      }
    },
    "v1InitBundleRevokeRequest": {
      "type": "object",
      "properties": {
        "ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "confirmImpactedClustersIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1InitBundleRevokeResponse": {
      "type": "object",
      "properties": {
        "initBundleRevocationErrors": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/InitBundleRevokeResponseInitBundleRevocationError"
          }
        },
        "initBundleRevokedIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    }
  }
}
