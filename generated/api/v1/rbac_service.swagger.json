{
  "swagger": "2.0",
  "info": {
    "title": "api/v1/rbac_service.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "RbacService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/rbac/bindings": {
      "get": {
        "operationId": "RbacService_ListRoleBindings",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListRoleBindingsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagination.limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pagination.offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pagination.sortOption.field",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagination.sortOption.reversed",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.sortOption.aggregateBy.aggrFunc",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "UNSET",
              "COUNT",
              "MIN",
              "MAX"
            ],
            "default": "UNSET"
          },
          {
            "name": "pagination.sortOption.aggregateBy.distinct",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "RbacService"
        ]
      }
    },
    "/v1/rbac/bindings/{id}": {
      "get": {
        "operationId": "RbacService_GetRoleBinding",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetRoleBindingResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "RbacService"
        ]
      }
    },
    "/v1/rbac/roles": {
      "get": {
        "operationId": "RbacService_ListRoles",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListRolesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagination.limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pagination.offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pagination.sortOption.field",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagination.sortOption.reversed",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.sortOption.aggregateBy.aggrFunc",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "UNSET",
              "COUNT",
              "MIN",
              "MAX"
            ],
            "default": "UNSET"
          },
          {
            "name": "pagination.sortOption.aggregateBy.distinct",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "RbacService"
        ]
      }
    },
    "/v1/rbac/roles/{id}": {
      "get": {
        "operationId": "RbacService_GetRole",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetRoleResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "RbacService"
        ]
      }
    },
    "/v1/rbac/subject/{id}": {
      "get": {
        "summary": "Subjects served from this API are Groups and Users only.\nId in this case is the Name field, since for users and groups, that is unique, and subjects do not have IDs.",
        "operationId": "RbacService_GetSubject",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetSubjectResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "RbacService"
        ]
      }
    },
    "/v1/rbac/subjects": {
      "get": {
        "operationId": "RbacService_ListSubjects",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListSubjectsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagination.limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pagination.offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pagination.sortOption.field",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagination.sortOption.reversed",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.sortOption.aggregateBy.aggrFunc",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "UNSET",
              "COUNT",
              "MIN",
              "MAX"
            ],
            "default": "UNSET"
          },
          {
            "name": "pagination.sortOption.aggregateBy.distinct",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "RbacService"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "storageK8sRole": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "@gotags: search:\"Role ID,hidden\" sql:\"pk,type(uuid)\""
        },
        "name": {
          "type": "string",
          "title": "@gotags: search:\"Role\""
        },
        "namespace": {
          "type": "string",
          "title": "@gotags: search:\"Namespace,store\""
        },
        "clusterId": {
          "type": "string",
          "title": "@gotags: search:\"Cluster ID,store,hidden\" sql:\"type(uuid)\""
        },
        "clusterName": {
          "type": "string",
          "title": "@gotags: search:\"Cluster\""
        },
        "clusterRole": {
          "type": "boolean",
          "title": "@gotags: search:\"Cluster Role\""
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "@gotags: search:\"Role Label\""
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "@gotags: search:\"Role Annotation\""
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "rules": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/storagePolicyRule"
          },
          "title": "@gotags: sensorhash:\"set\""
        }
      },
      "title": "Properties of an individual k8s Role or ClusterRole.\n////////////////////////////////////////"
    },
    "storageK8sRoleBinding": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "@gotags: search:\"Role Binding ID,hidden\" sql:\"pk,type(uuid)\""
        },
        "name": {
          "type": "string",
          "title": "@gotags: search:\"Role Binding\""
        },
        "namespace": {
          "type": "string",
          "title": "@gotags: search:\"Namespace,store\""
        },
        "clusterId": {
          "type": "string",
          "title": "@gotags: search:\"Cluster ID,store,hidden\" sql:\"type(uuid)\""
        },
        "clusterName": {
          "type": "string",
          "title": "@gotags: search:\"Cluster\""
        },
        "clusterRole": {
          "type": "boolean",
          "description": "ClusterRole specifies whether the binding binds a cluster role. However, it cannot be used to determine whether\nthe binding is a cluster role binding. This can be done in conjunction with the namespace. If the namespace is\nempty and cluster role is true, the binding is a cluster role binding.\n\n@gotags: search:\"Cluster Role\""
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "@gotags: search:\"Role Binding Label\""
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "@gotags: search:\"Role Binding Annotation\""
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "subjects": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/storageSubject"
          }
        },
        "roleId": {
          "type": "string",
          "title": "@gotags: search:\"Role ID\" sql:\"type(uuid)\""
        }
      },
      "title": "Properties of an individual k8s RoleBinding or ClusterRoleBinding.\n////////////////////////////////////////"
    },
    "storagePolicyRule": {
      "type": "object",
      "properties": {
        "verbs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "apiGroups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "resources": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "nonResourceUrls": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "resourceNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "Properties of an individual rules that grant permissions to resources.\n////////////////////////////////////////"
    },
    "storageSubject": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "ID is derived from base64 of cluster id and name"
        },
        "kind": {
          "$ref": "#/definitions/storageSubjectKind",
          "title": "@gotags: search:\"Subject Kind\""
        },
        "name": {
          "type": "string",
          "title": "@gotags: search:\"Subject\""
        },
        "namespace": {
          "type": "string"
        },
        "clusterId": {
          "type": "string"
        },
        "clusterName": {
          "type": "string"
        }
      },
      "title": "Properties of an individual subjects who are granted roles via role bindings.\n////////////////////////////////////////"
    },
    "storageSubjectKind": {
      "type": "string",
      "enum": [
        "UNSET_KIND",
        "SERVICE_ACCOUNT",
        "USER",
        "GROUP"
      ],
      "default": "UNSET_KIND"
    },
    "v1AggregateBy": {
      "type": "object",
      "properties": {
        "aggrFunc": {
          "$ref": "#/definitions/v1Aggregation"
        },
        "distinct": {
          "type": "boolean"
        }
      }
    },
    "v1Aggregation": {
      "type": "string",
      "enum": [
        "UNSET",
        "COUNT",
        "MIN",
        "MAX"
      ],
      "default": "UNSET"
    },
    "v1GetRoleBindingResponse": {
      "type": "object",
      "properties": {
        "binding": {
          "$ref": "#/definitions/storageK8sRoleBinding"
        }
      }
    },
    "v1GetRoleResponse": {
      "type": "object",
      "properties": {
        "role": {
          "$ref": "#/definitions/storageK8sRole"
        }
      }
    },
    "v1GetSubjectResponse": {
      "type": "object",
      "properties": {
        "subject": {
          "$ref": "#/definitions/storageSubject"
        },
        "clusterRoles": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/storageK8sRole"
          }
        },
        "scopedRoles": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ScopedRoles"
          }
        }
      }
    },
    "v1ListRoleBindingsResponse": {
      "type": "object",
      "properties": {
        "bindings": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/storageK8sRoleBinding"
          }
        }
      },
      "title": "A list of k8s role bindings (free of scoped information)\nNext Tag: 2"
    },
    "v1ListRolesResponse": {
      "type": "object",
      "properties": {
        "roles": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/storageK8sRole"
          }
        }
      },
      "title": "A list of k8s roles (free of scoped information)\nNext Tag: 2"
    },
    "v1ListSubjectsResponse": {
      "type": "object",
      "properties": {
        "subjectAndRoles": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SubjectAndRoles"
          }
        }
      },
      "title": "A list of k8s subjects (users and groups only, for service accounts, try the service account service)\nNext Tag: 2"
    },
    "v1Pagination": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "format": "int32"
        },
        "offset": {
          "type": "integer",
          "format": "int32"
        },
        "sortOption": {
          "$ref": "#/definitions/v1SortOption"
        },
        "sortOptions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SortOption"
          },
          "description": "This field is under development. It is not supported on any REST APIs."
        }
      }
    },
    "v1ScopedRoles": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/storageK8sRole"
          }
        }
      }
    },
    "v1SortOption": {
      "type": "object",
      "properties": {
        "field": {
          "type": "string"
        },
        "reversed": {
          "type": "boolean"
        },
        "aggregateBy": {
          "$ref": "#/definitions/v1AggregateBy",
          "description": "This field is under development. It is not supported on any REST APIs."
        }
      }
    },
    "v1SubjectAndRoles": {
      "type": "object",
      "properties": {
        "subject": {
          "$ref": "#/definitions/storageSubject"
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/storageK8sRole"
          }
        }
      }
    }
  }
}
