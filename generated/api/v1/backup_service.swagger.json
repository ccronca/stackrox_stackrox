{
  "swagger": "2.0",
  "info": {
    "title": "api/v1/backup_service.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "ExternalBackupService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/externalbackups": {
      "get": {
        "summary": "GetExternalBackups returns all external backup configurations.",
        "operationId": "ExternalBackupService_GetExternalBackups",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetExternalBackupsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "ExternalBackupService"
        ]
      },
      "post": {
        "summary": "PostExternalBackup creates an external backup configuration.",
        "operationId": "ExternalBackupService_PostExternalBackup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/storageExternalBackup"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storageExternalBackup"
            }
          }
        ],
        "tags": [
          "ExternalBackupService"
        ]
      }
    },
    "/v1/externalbackups/test": {
      "post": {
        "summary": "TestExternalBackup tests an external backup configuration.",
        "operationId": "ExternalBackupService_TestExternalBackup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Empty"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storageExternalBackup"
            }
          }
        ],
        "tags": [
          "ExternalBackupService"
        ]
      }
    },
    "/v1/externalbackups/test/updated": {
      "post": {
        "summary": "TestUpdatedExternalBackup checks if the given external backup is correctly configured, with optional stored credential reconciliation.",
        "operationId": "ExternalBackupService_TestUpdatedExternalBackup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Empty"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateExternalBackupRequest"
            }
          }
        ],
        "tags": [
          "ExternalBackupService"
        ]
      }
    },
    "/v1/externalbackups/{externalBackup.id}": {
      "patch": {
        "summary": "UpdateExternalBackup modifies a given external backup, with optional stored credential reconciliation.",
        "operationId": "ExternalBackupService_UpdateExternalBackup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/storageExternalBackup"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "externalBackup.id",
            "description": "@gotags: sql:\"pk\"",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExternalBackupServiceUpdateExternalBackupBody"
            }
          }
        ],
        "tags": [
          "ExternalBackupService"
        ]
      }
    },
    "/v1/externalbackups/{id}": {
      "get": {
        "summary": "GetExternalBackup returns the external backup configuration given its ID.",
        "operationId": "ExternalBackupService_GetExternalBackup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/storageExternalBackup"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ExternalBackupService"
        ]
      },
      "delete": {
        "summary": "DeleteExternalBackup removes an external backup configuration given its ID.",
        "operationId": "ExternalBackupService_DeleteExternalBackup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Empty"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ExternalBackupService"
        ]
      },
      "post": {
        "summary": "TriggerExternalBackup initiates an external backup for the given configuration.",
        "operationId": "ExternalBackupService_TriggerExternalBackup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Empty"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ExternalBackupService"
        ]
      },
      "put": {
        "summary": "PutExternalBackup modifies a given external backup, without using stored credential reconciliation.",
        "operationId": "ExternalBackupService_PutExternalBackup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/storageExternalBackup"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "@gotags: sql:\"pk\"",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExternalBackupServicePutExternalBackupBody"
            }
          }
        ],
        "tags": [
          "ExternalBackupService"
        ]
      }
    }
  },
  "definitions": {
    "ExternalBackupServicePutExternalBackupBody": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "schedule": {
          "$ref": "#/definitions/storageSchedule"
        },
        "backupsToKeep": {
          "type": "integer",
          "format": "int32"
        },
        "s3": {
          "$ref": "#/definitions/storageS3Config"
        },
        "gcs": {
          "$ref": "#/definitions/storageGCSConfig"
        },
        "includeCertificates": {
          "type": "boolean"
        }
      }
    },
    "ExternalBackupServiceUpdateExternalBackupBody": {
      "type": "object",
      "properties": {
        "externalBackup": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "schedule": {
              "$ref": "#/definitions/storageSchedule"
            },
            "backupsToKeep": {
              "type": "integer",
              "format": "int32"
            },
            "s3": {
              "$ref": "#/definitions/storageS3Config"
            },
            "gcs": {
              "$ref": "#/definitions/storageGCSConfig"
            },
            "includeCertificates": {
              "type": "boolean"
            }
          }
        },
        "updatePassword": {
          "type": "boolean",
          "description": "When false, use the stored credentials of an existing external backup configuration given its ID."
        }
      }
    },
    "ScheduleDaysOfMonth": {
      "type": "object",
      "properties": {
        "days": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "title": "1 for 1st, 2 for 2nd .... 31 for 31st"
    },
    "ScheduleDaysOfWeek": {
      "type": "object",
      "properties": {
        "days": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "title": "Sunday = 0, Monday = 1, .... Saturday =  6"
    },
    "ScheduleIntervalType": {
      "type": "string",
      "enum": [
        "UNSET",
        "DAILY",
        "WEEKLY",
        "MONTHLY"
      ],
      "default": "UNSET"
    },
    "ScheduleWeeklyInterval": {
      "type": "object",
      "properties": {
        "day": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "storageExternalBackup": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "@gotags: sql:\"pk\""
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "schedule": {
          "$ref": "#/definitions/storageSchedule"
        },
        "backupsToKeep": {
          "type": "integer",
          "format": "int32"
        },
        "s3": {
          "$ref": "#/definitions/storageS3Config"
        },
        "gcs": {
          "$ref": "#/definitions/storageGCSConfig"
        },
        "includeCertificates": {
          "type": "boolean"
        }
      }
    },
    "storageGCSConfig": {
      "type": "object",
      "properties": {
        "bucket": {
          "type": "string"
        },
        "serviceAccount": {
          "type": "string",
          "description": "The service account for the storage integration. The server will mask the value of this credential in responses and logs.\n\n@gotags: scrub:\"always\""
        },
        "objectPrefix": {
          "type": "string"
        },
        "useWorkloadId": {
          "type": "boolean",
          "title": "@gotags: scrub:\"dependent\""
        }
      }
    },
    "storageS3Config": {
      "type": "object",
      "properties": {
        "bucket": {
          "type": "string"
        },
        "useIam": {
          "type": "boolean",
          "title": "@gotags: scrub:\"dependent\""
        },
        "accessKeyId": {
          "type": "string",
          "description": "The access key ID for the storage integration. The server will mask the value of this credential in responses and logs.\n\n@gotags: scrub:\"always\""
        },
        "secretAccessKey": {
          "type": "string",
          "description": "The secret access key for the storage integration. The server will mask the value of this credential in responses and logs.\n\n@gotags: scrub:\"always\""
        },
        "region": {
          "type": "string"
        },
        "objectPrefix": {
          "type": "string"
        },
        "endpoint": {
          "type": "string",
          "title": "@gotags: scrub:\"dependent\" validate:\"nolocalendpoint\""
        }
      }
    },
    "storageSchedule": {
      "type": "object",
      "properties": {
        "intervalType": {
          "$ref": "#/definitions/ScheduleIntervalType"
        },
        "hour": {
          "type": "integer",
          "format": "int32"
        },
        "minute": {
          "type": "integer",
          "format": "int32"
        },
        "weekly": {
          "$ref": "#/definitions/ScheduleWeeklyInterval"
        },
        "daysOfWeek": {
          "$ref": "#/definitions/ScheduleDaysOfWeek"
        },
        "daysOfMonth": {
          "$ref": "#/definitions/ScheduleDaysOfMonth"
        }
      }
    },
    "v1Empty": {
      "type": "object"
    },
    "v1GetExternalBackupsResponse": {
      "type": "object",
      "properties": {
        "externalBackups": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/storageExternalBackup"
          }
        }
      }
    },
    "v1UpdateExternalBackupRequest": {
      "type": "object",
      "properties": {
        "externalBackup": {
          "$ref": "#/definitions/storageExternalBackup"
        },
        "updatePassword": {
          "type": "boolean",
          "description": "When false, use the stored credentials of an existing external backup configuration given its ID."
        }
      }
    }
  }
}
