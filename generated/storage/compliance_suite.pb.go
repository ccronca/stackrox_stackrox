// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: storage/compliance_suite.proto

package storage

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/golang/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Next Tag: 4
// ComplianceOperatorSuite represents a set of scans with the status
type ComplianceOperatorSuite struct {
	Name                 string                          `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty" search:"Compliance Suite Name,hidden" sql:"pk"`
	ClusterId            string                          `protobuf:"bytes,2,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty" sql:"pk,fk(Cluster:id),no-fk-constraint"`
	Status               *ComplianceOperatorSuite_Status `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *ComplianceOperatorSuite) Reset()         { *m = ComplianceOperatorSuite{} }
func (m *ComplianceOperatorSuite) String() string { return proto.CompactTextString(m) }
func (*ComplianceOperatorSuite) ProtoMessage()    {}
func (*ComplianceOperatorSuite) Descriptor() ([]byte, []int) {
	return fileDescriptor_453ffd094ca7b3e9, []int{0}
}
func (m *ComplianceOperatorSuite) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ComplianceOperatorSuite) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ComplianceOperatorSuite.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ComplianceOperatorSuite) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ComplianceOperatorSuite.Merge(m, src)
}
func (m *ComplianceOperatorSuite) XXX_Size() int {
	return m.Size()
}
func (m *ComplianceOperatorSuite) XXX_DiscardUnknown() {
	xxx_messageInfo_ComplianceOperatorSuite.DiscardUnknown(m)
}

var xxx_messageInfo_ComplianceOperatorSuite proto.InternalMessageInfo

func (m *ComplianceOperatorSuite) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ComplianceOperatorSuite) GetClusterId() string {
	if m != nil {
		return m.ClusterId
	}
	return ""
}

func (m *ComplianceOperatorSuite) GetStatus() *ComplianceOperatorSuite_Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ComplianceOperatorSuite) MessageClone() proto.Message {
	return m.Clone()
}
func (m *ComplianceOperatorSuite) Clone() *ComplianceOperatorSuite {
	if m == nil {
		return nil
	}
	cloned := new(ComplianceOperatorSuite)
	*cloned = *m

	cloned.Status = m.Status.Clone()
	return cloned
}

// Next Tag: 4
type ComplianceOperatorSuite_Status struct {
	// Status of the ComplianceOperatorSuite
	Phase                string   `protobuf:"bytes,1,opt,name=phase,proto3" json:"phase,omitempty"`
	Result               string   `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
	ErrorMessage         string   `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ComplianceOperatorSuite_Status) Reset()         { *m = ComplianceOperatorSuite_Status{} }
func (m *ComplianceOperatorSuite_Status) String() string { return proto.CompactTextString(m) }
func (*ComplianceOperatorSuite_Status) ProtoMessage()    {}
func (*ComplianceOperatorSuite_Status) Descriptor() ([]byte, []int) {
	return fileDescriptor_453ffd094ca7b3e9, []int{0, 0}
}
func (m *ComplianceOperatorSuite_Status) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ComplianceOperatorSuite_Status) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ComplianceOperatorSuite_Status.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ComplianceOperatorSuite_Status) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ComplianceOperatorSuite_Status.Merge(m, src)
}
func (m *ComplianceOperatorSuite_Status) XXX_Size() int {
	return m.Size()
}
func (m *ComplianceOperatorSuite_Status) XXX_DiscardUnknown() {
	xxx_messageInfo_ComplianceOperatorSuite_Status.DiscardUnknown(m)
}

var xxx_messageInfo_ComplianceOperatorSuite_Status proto.InternalMessageInfo

func (m *ComplianceOperatorSuite_Status) GetPhase() string {
	if m != nil {
		return m.Phase
	}
	return ""
}

func (m *ComplianceOperatorSuite_Status) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

func (m *ComplianceOperatorSuite_Status) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

func (m *ComplianceOperatorSuite_Status) MessageClone() proto.Message {
	return m.Clone()
}
func (m *ComplianceOperatorSuite_Status) Clone() *ComplianceOperatorSuite_Status {
	if m == nil {
		return nil
	}
	cloned := new(ComplianceOperatorSuite_Status)
	*cloned = *m

	return cloned
}

func init() {
	proto.RegisterType((*ComplianceOperatorSuite)(nil), "storage.ComplianceOperatorSuite")
	proto.RegisterType((*ComplianceOperatorSuite_Status)(nil), "storage.ComplianceOperatorSuite.Status")
}

func init() { proto.RegisterFile("storage/compliance_suite.proto", fileDescriptor_453ffd094ca7b3e9) }

var fileDescriptor_453ffd094ca7b3e9 = []byte{
	// 338 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x91, 0x3f, 0x4e, 0xc3, 0x30,
	0x14, 0xc6, 0x49, 0x81, 0xa0, 0x1a, 0x58, 0xac, 0x0a, 0x4a, 0x87, 0x34, 0x0a, 0x03, 0x41, 0x4a,
	0x53, 0xa9, 0x30, 0x75, 0x41, 0x6a, 0x25, 0x24, 0x84, 0x00, 0x29, 0xdd, 0x60, 0xa8, 0x4c, 0xe2,
	0xa6, 0x56, 0xfe, 0x38, 0xf8, 0x39, 0x12, 0x47, 0xe1, 0x48, 0x0c, 0x0c, 0x9c, 0xa0, 0x42, 0xe5,
	0x06, 0x3d, 0x01, 0xaa, 0xed, 0xc2, 0xc4, 0xe6, 0xf7, 0xbd, 0xef, 0xf7, 0xfc, 0x3e, 0x1b, 0x39,
	0x20, 0xb9, 0x20, 0x29, 0xed, 0xc7, 0xbc, 0xa8, 0x72, 0x46, 0xca, 0x98, 0x4e, 0xa1, 0x66, 0x92,
	0x86, 0x95, 0xe0, 0x92, 0xe3, 0x3d, 0xd3, 0xef, 0xb4, 0x52, 0x9e, 0x72, 0xa5, 0xf5, 0xd7, 0x27,
	0xdd, 0xf6, 0x3e, 0x1a, 0xe8, 0x78, 0xfc, 0x4b, 0x3e, 0x54, 0x54, 0x10, 0xc9, 0xc5, 0x64, 0x3d,
	0x00, 0x5f, 0xa3, 0x9d, 0x92, 0x14, 0xb4, 0x6d, 0xb9, 0x96, 0xdf, 0x1c, 0x0d, 0x56, 0x8b, 0x6e,
	0x08, 0x94, 0x88, 0x78, 0x3e, 0xf4, 0xfe, 0x10, 0x57, 0x79, 0xdd, 0x7b, 0x52, 0xd0, 0x60, 0xce,
	0x92, 0x84, 0x96, 0x9e, 0x0b, 0x2f, 0xf9, 0xd0, 0xab, 0x32, 0x2f, 0x52, 0x3c, 0xbe, 0x45, 0x28,
	0xce, 0x6b, 0x90, 0x54, 0x4c, 0x59, 0xd2, 0x6e, 0xa8, 0x69, 0xc1, 0x6a, 0xd1, 0xf5, 0x8d, 0x2f,
	0x98, 0x65, 0xfe, 0x58, 0x1b, 0x86, 0x2c, 0x39, 0x0f, 0x4a, 0xde, 0x9b, 0x65, 0xbd, 0x98, 0x97,
	0x20, 0x05, 0x61, 0xa5, 0xf4, 0xa2, 0xa6, 0xe1, 0x6f, 0x12, 0x7c, 0x85, 0x6c, 0x90, 0x44, 0xd6,
	0xd0, 0xde, 0x76, 0x2d, 0x7f, 0x7f, 0x70, 0x16, 0x9a, 0x80, 0xe1, 0x3f, 0x31, 0xc2, 0x89, 0xb2,
	0x47, 0x06, 0xeb, 0x3c, 0x21, 0x5b, 0x2b, 0xb8, 0x85, 0x76, 0xab, 0x39, 0x01, 0x13, 0x30, 0xd2,
	0x05, 0x3e, 0x42, 0xb6, 0xa0, 0x50, 0xe7, 0x52, 0x6f, 0x1a, 0x99, 0x0a, 0x9f, 0xa2, 0x43, 0x2a,
	0x04, 0x17, 0xd3, 0x82, 0x02, 0x90, 0x94, 0xaa, 0xfb, 0x9b, 0xd1, 0x81, 0x12, 0xef, 0xb4, 0x36,
	0xba, 0x7c, 0x5f, 0x3a, 0xd6, 0xe7, 0xd2, 0xb1, 0xbe, 0x96, 0x8e, 0xf5, 0xf6, 0xed, 0x6c, 0xa1,
	0x13, 0xc6, 0x43, 0x90, 0x24, 0xce, 0x04, 0x7f, 0xd5, 0x6f, 0xbe, 0x59, 0xf8, 0x71, 0xf3, 0x35,
	0xcf, 0xb6, 0xd2, 0x2f, 0x7e, 0x02, 0x00, 0x00, 0xff, 0xff, 0x8d, 0x1e, 0xd3, 0xe9, 0xcc, 0x01,
	0x00, 0x00,
}

func (m *ComplianceOperatorSuite) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ComplianceOperatorSuite) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ComplianceOperatorSuite) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Status != nil {
		{
			size, err := m.Status.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintComplianceSuite(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClusterId) > 0 {
		i -= len(m.ClusterId)
		copy(dAtA[i:], m.ClusterId)
		i = encodeVarintComplianceSuite(dAtA, i, uint64(len(m.ClusterId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintComplianceSuite(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ComplianceOperatorSuite_Status) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ComplianceOperatorSuite_Status) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ComplianceOperatorSuite_Status) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ErrorMessage) > 0 {
		i -= len(m.ErrorMessage)
		copy(dAtA[i:], m.ErrorMessage)
		i = encodeVarintComplianceSuite(dAtA, i, uint64(len(m.ErrorMessage)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Result) > 0 {
		i -= len(m.Result)
		copy(dAtA[i:], m.Result)
		i = encodeVarintComplianceSuite(dAtA, i, uint64(len(m.Result)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Phase) > 0 {
		i -= len(m.Phase)
		copy(dAtA[i:], m.Phase)
		i = encodeVarintComplianceSuite(dAtA, i, uint64(len(m.Phase)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintComplianceSuite(dAtA []byte, offset int, v uint64) int {
	offset -= sovComplianceSuite(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *ComplianceOperatorSuite) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovComplianceSuite(uint64(l))
	}
	l = len(m.ClusterId)
	if l > 0 {
		n += 1 + l + sovComplianceSuite(uint64(l))
	}
	if m.Status != nil {
		l = m.Status.Size()
		n += 1 + l + sovComplianceSuite(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ComplianceOperatorSuite_Status) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Phase)
	if l > 0 {
		n += 1 + l + sovComplianceSuite(uint64(l))
	}
	l = len(m.Result)
	if l > 0 {
		n += 1 + l + sovComplianceSuite(uint64(l))
	}
	l = len(m.ErrorMessage)
	if l > 0 {
		n += 1 + l + sovComplianceSuite(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovComplianceSuite(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozComplianceSuite(x uint64) (n int) {
	return sovComplianceSuite(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *ComplianceOperatorSuite) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowComplianceSuite
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ComplianceOperatorSuite: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ComplianceOperatorSuite: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowComplianceSuite
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthComplianceSuite
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthComplianceSuite
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClusterId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowComplianceSuite
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthComplianceSuite
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthComplianceSuite
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClusterId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowComplianceSuite
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthComplianceSuite
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthComplianceSuite
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Status == nil {
				m.Status = &ComplianceOperatorSuite_Status{}
			}
			if err := m.Status.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipComplianceSuite(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthComplianceSuite
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ComplianceOperatorSuite_Status) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowComplianceSuite
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Status: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Status: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Phase", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowComplianceSuite
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthComplianceSuite
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthComplianceSuite
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Phase = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowComplianceSuite
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthComplianceSuite
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthComplianceSuite
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Result = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ErrorMessage", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowComplianceSuite
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthComplianceSuite
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthComplianceSuite
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ErrorMessage = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipComplianceSuite(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthComplianceSuite
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipComplianceSuite(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowComplianceSuite
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowComplianceSuite
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowComplianceSuite
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthComplianceSuite
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupComplianceSuite
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthComplianceSuite
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthComplianceSuite        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowComplianceSuite          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupComplianceSuite = fmt.Errorf("proto: unexpected end of group")
)
