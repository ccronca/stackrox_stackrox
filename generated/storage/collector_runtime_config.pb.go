// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: storage/collector_runtime_config.proto

package storage

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RuntimeFeature int32

const (
	RuntimeFeature_PROCESSES           RuntimeFeature = 0
	RuntimeFeature_NETWORK_CONNECTIONS RuntimeFeature = 1
	RuntimeFeature_LISTENING_ENDPOINTS RuntimeFeature = 2
)

var RuntimeFeature_name = map[int32]string{
	0: "PROCESSES",
	1: "NETWORK_CONNECTIONS",
	2: "LISTENING_ENDPOINTS",
}

var RuntimeFeature_value = map[string]int32{
	"PROCESSES":           0,
	"NETWORK_CONNECTIONS": 1,
	"LISTENING_ENDPOINTS": 2,
}

func (x RuntimeFeature) String() string {
	return proto.EnumName(RuntimeFeature_name, int32(x))
}

func (RuntimeFeature) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_47419a359a3138ed, []int{0}
}

type CollectorRuntimeConfigACK_Action int32

const (
	CollectorRuntimeConfigACK_ACK  CollectorRuntimeConfigACK_Action = 0
	CollectorRuntimeConfigACK_NACK CollectorRuntimeConfigACK_Action = 1
)

var CollectorRuntimeConfigACK_Action_name = map[int32]string{
	0: "ACK",
	1: "NACK",
}

var CollectorRuntimeConfigACK_Action_value = map[string]int32{
	"ACK":  0,
	"NACK": 1,
}

func (x CollectorRuntimeConfigACK_Action) String() string {
	return proto.EnumName(CollectorRuntimeConfigACK_Action_name, int32(x))
}

func (CollectorRuntimeConfigACK_Action) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_47419a359a3138ed, []int{0, 0}
}

type CollectorRuntimeConfigACK struct {
	InstanceId           string                           `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	Action               CollectorRuntimeConfigACK_Action `protobuf:"varint,2,opt,name=action,proto3,enum=storage.CollectorRuntimeConfigACK_Action" json:"action,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *CollectorRuntimeConfigACK) Reset()         { *m = CollectorRuntimeConfigACK{} }
func (m *CollectorRuntimeConfigACK) String() string { return proto.CompactTextString(m) }
func (*CollectorRuntimeConfigACK) ProtoMessage()    {}
func (*CollectorRuntimeConfigACK) Descriptor() ([]byte, []int) {
	return fileDescriptor_47419a359a3138ed, []int{0}
}
func (m *CollectorRuntimeConfigACK) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CollectorRuntimeConfigACK) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CollectorRuntimeConfigACK.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CollectorRuntimeConfigACK) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CollectorRuntimeConfigACK.Merge(m, src)
}
func (m *CollectorRuntimeConfigACK) XXX_Size() int {
	return m.Size()
}
func (m *CollectorRuntimeConfigACK) XXX_DiscardUnknown() {
	xxx_messageInfo_CollectorRuntimeConfigACK.DiscardUnknown(m)
}

var xxx_messageInfo_CollectorRuntimeConfigACK proto.InternalMessageInfo

func (m *CollectorRuntimeConfigACK) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func (m *CollectorRuntimeConfigACK) GetAction() CollectorRuntimeConfigACK_Action {
	if m != nil {
		return m.Action
	}
	return CollectorRuntimeConfigACK_ACK
}

func (m *CollectorRuntimeConfigACK) MessageClone() proto.Message {
	return m.Clone()
}
func (m *CollectorRuntimeConfigACK) Clone() *CollectorRuntimeConfigACK {
	if m == nil {
		return nil
	}
	cloned := new(CollectorRuntimeConfigACK)
	*cloned = *m

	return cloned
}

type Status struct {
	// Types that are valid to be assigned to Status:
	//	*Status_ProcessStatus_
	//	*Status_NetworkConnectionStatus_
	//	*Status_ListeningEndpointStatus_
	Status               isStatus_Status `protobuf_oneof:"status"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Status) Reset()         { *m = Status{} }
func (m *Status) String() string { return proto.CompactTextString(m) }
func (*Status) ProtoMessage()    {}
func (*Status) Descriptor() ([]byte, []int) {
	return fileDescriptor_47419a359a3138ed, []int{1}
}
func (m *Status) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Status) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Status.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Status) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Status.Merge(m, src)
}
func (m *Status) XXX_Size() int {
	return m.Size()
}
func (m *Status) XXX_DiscardUnknown() {
	xxx_messageInfo_Status.DiscardUnknown(m)
}

var xxx_messageInfo_Status proto.InternalMessageInfo

type isStatus_Status interface {
	isStatus_Status()
	MarshalTo([]byte) (int, error)
	Size() int
	Clone() isStatus_Status
}

type Status_ProcessStatus_ struct {
	ProcessStatus *Status_ProcessStatus `protobuf:"bytes,1,opt,name=process_status,json=processStatus,proto3,oneof" json:"process_status,omitempty"`
}
type Status_NetworkConnectionStatus_ struct {
	NetworkConnectionStatus *Status_NetworkConnectionStatus `protobuf:"bytes,2,opt,name=network_connection_status,json=networkConnectionStatus,proto3,oneof" json:"network_connection_status,omitempty"`
}
type Status_ListeningEndpointStatus_ struct {
	ListeningEndpointStatus *Status_ListeningEndpointStatus `protobuf:"bytes,3,opt,name=listening_endpoint_status,json=listeningEndpointStatus,proto3,oneof" json:"listening_endpoint_status,omitempty"`
}

func (*Status_ProcessStatus_) isStatus_Status() {}
func (m *Status_ProcessStatus_) Clone() isStatus_Status {
	if m == nil {
		return nil
	}
	cloned := new(Status_ProcessStatus_)
	*cloned = *m

	cloned.ProcessStatus = m.ProcessStatus.Clone()
	return cloned
}
func (*Status_NetworkConnectionStatus_) isStatus_Status() {}
func (m *Status_NetworkConnectionStatus_) Clone() isStatus_Status {
	if m == nil {
		return nil
	}
	cloned := new(Status_NetworkConnectionStatus_)
	*cloned = *m

	cloned.NetworkConnectionStatus = m.NetworkConnectionStatus.Clone()
	return cloned
}
func (*Status_ListeningEndpointStatus_) isStatus_Status() {}
func (m *Status_ListeningEndpointStatus_) Clone() isStatus_Status {
	if m == nil {
		return nil
	}
	cloned := new(Status_ListeningEndpointStatus_)
	*cloned = *m

	cloned.ListeningEndpointStatus = m.ListeningEndpointStatus.Clone()
	return cloned
}

func (m *Status) GetStatus() isStatus_Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *Status) GetProcessStatus() *Status_ProcessStatus {
	if x, ok := m.GetStatus().(*Status_ProcessStatus_); ok {
		return x.ProcessStatus
	}
	return nil
}

func (m *Status) GetNetworkConnectionStatus() *Status_NetworkConnectionStatus {
	if x, ok := m.GetStatus().(*Status_NetworkConnectionStatus_); ok {
		return x.NetworkConnectionStatus
	}
	return nil
}

func (m *Status) GetListeningEndpointStatus() *Status_ListeningEndpointStatus {
	if x, ok := m.GetStatus().(*Status_ListeningEndpointStatus_); ok {
		return x.ListeningEndpointStatus
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Status) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Status_ProcessStatus_)(nil),
		(*Status_NetworkConnectionStatus_)(nil),
		(*Status_ListeningEndpointStatus_)(nil),
	}
}

func (m *Status) MessageClone() proto.Message {
	return m.Clone()
}
func (m *Status) Clone() *Status {
	if m == nil {
		return nil
	}
	cloned := new(Status)
	*cloned = *m

	if m.Status != nil {
		cloned.Status = m.Status.Clone()
	}
	return cloned
}

type Status_ProcessStatus struct {
	Enabled              bool     `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Status_ProcessStatus) Reset()         { *m = Status_ProcessStatus{} }
func (m *Status_ProcessStatus) String() string { return proto.CompactTextString(m) }
func (*Status_ProcessStatus) ProtoMessage()    {}
func (*Status_ProcessStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_47419a359a3138ed, []int{1, 0}
}
func (m *Status_ProcessStatus) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Status_ProcessStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Status_ProcessStatus.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Status_ProcessStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Status_ProcessStatus.Merge(m, src)
}
func (m *Status_ProcessStatus) XXX_Size() int {
	return m.Size()
}
func (m *Status_ProcessStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_Status_ProcessStatus.DiscardUnknown(m)
}

var xxx_messageInfo_Status_ProcessStatus proto.InternalMessageInfo

func (m *Status_ProcessStatus) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

func (m *Status_ProcessStatus) MessageClone() proto.Message {
	return m.Clone()
}
func (m *Status_ProcessStatus) Clone() *Status_ProcessStatus {
	if m == nil {
		return nil
	}
	cloned := new(Status_ProcessStatus)
	*cloned = *m

	return cloned
}

type Status_NetworkConnectionStatus struct {
	Enabled              bool     `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	AggregateExternal    bool     `protobuf:"varint,2,opt,name=aggregate_external,json=aggregateExternal,proto3" json:"aggregate_external,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Status_NetworkConnectionStatus) Reset()         { *m = Status_NetworkConnectionStatus{} }
func (m *Status_NetworkConnectionStatus) String() string { return proto.CompactTextString(m) }
func (*Status_NetworkConnectionStatus) ProtoMessage()    {}
func (*Status_NetworkConnectionStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_47419a359a3138ed, []int{1, 1}
}
func (m *Status_NetworkConnectionStatus) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Status_NetworkConnectionStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Status_NetworkConnectionStatus.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Status_NetworkConnectionStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Status_NetworkConnectionStatus.Merge(m, src)
}
func (m *Status_NetworkConnectionStatus) XXX_Size() int {
	return m.Size()
}
func (m *Status_NetworkConnectionStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_Status_NetworkConnectionStatus.DiscardUnknown(m)
}

var xxx_messageInfo_Status_NetworkConnectionStatus proto.InternalMessageInfo

func (m *Status_NetworkConnectionStatus) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

func (m *Status_NetworkConnectionStatus) GetAggregateExternal() bool {
	if m != nil {
		return m.AggregateExternal
	}
	return false
}

func (m *Status_NetworkConnectionStatus) MessageClone() proto.Message {
	return m.Clone()
}
func (m *Status_NetworkConnectionStatus) Clone() *Status_NetworkConnectionStatus {
	if m == nil {
		return nil
	}
	cloned := new(Status_NetworkConnectionStatus)
	*cloned = *m

	return cloned
}

type Status_ListeningEndpointStatus struct {
	Enabled              bool     `protobuf:"varint,2,opt,name=enabled,proto3" json:"enabled,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Status_ListeningEndpointStatus) Reset()         { *m = Status_ListeningEndpointStatus{} }
func (m *Status_ListeningEndpointStatus) String() string { return proto.CompactTextString(m) }
func (*Status_ListeningEndpointStatus) ProtoMessage()    {}
func (*Status_ListeningEndpointStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_47419a359a3138ed, []int{1, 2}
}
func (m *Status_ListeningEndpointStatus) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Status_ListeningEndpointStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Status_ListeningEndpointStatus.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Status_ListeningEndpointStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Status_ListeningEndpointStatus.Merge(m, src)
}
func (m *Status_ListeningEndpointStatus) XXX_Size() int {
	return m.Size()
}
func (m *Status_ListeningEndpointStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_Status_ListeningEndpointStatus.DiscardUnknown(m)
}

var xxx_messageInfo_Status_ListeningEndpointStatus proto.InternalMessageInfo

func (m *Status_ListeningEndpointStatus) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

func (m *Status_ListeningEndpointStatus) MessageClone() proto.Message {
	return m.Clone()
}
func (m *Status_ListeningEndpointStatus) Clone() *Status_ListeningEndpointStatus {
	if m == nil {
		return nil
	}
	cloned := new(Status_ListeningEndpointStatus)
	*cloned = *m

	return cloned
}

type RuntimeFeatureConfig struct {
	Feature              RuntimeFeature                      `protobuf:"varint,1,opt,name=feature,proto3,enum=storage.RuntimeFeature" json:"feature,omitempty"`
	DefaultStatus        string                              `protobuf:"bytes,2,opt,name=default_status,json=defaultStatus,proto3" json:"default_status,omitempty"`
	Rules                []*RuntimeFeatureConfig_RuntimeRule `protobuf:"bytes,3,rep,name=rules,proto3" json:"rules,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *RuntimeFeatureConfig) Reset()         { *m = RuntimeFeatureConfig{} }
func (m *RuntimeFeatureConfig) String() string { return proto.CompactTextString(m) }
func (*RuntimeFeatureConfig) ProtoMessage()    {}
func (*RuntimeFeatureConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_47419a359a3138ed, []int{2}
}
func (m *RuntimeFeatureConfig) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RuntimeFeatureConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RuntimeFeatureConfig.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RuntimeFeatureConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RuntimeFeatureConfig.Merge(m, src)
}
func (m *RuntimeFeatureConfig) XXX_Size() int {
	return m.Size()
}
func (m *RuntimeFeatureConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_RuntimeFeatureConfig.DiscardUnknown(m)
}

var xxx_messageInfo_RuntimeFeatureConfig proto.InternalMessageInfo

func (m *RuntimeFeatureConfig) GetFeature() RuntimeFeature {
	if m != nil {
		return m.Feature
	}
	return RuntimeFeature_PROCESSES
}

func (m *RuntimeFeatureConfig) GetDefaultStatus() string {
	if m != nil {
		return m.DefaultStatus
	}
	return ""
}

func (m *RuntimeFeatureConfig) GetRules() []*RuntimeFeatureConfig_RuntimeRule {
	if m != nil {
		return m.Rules
	}
	return nil
}

func (m *RuntimeFeatureConfig) MessageClone() proto.Message {
	return m.Clone()
}
func (m *RuntimeFeatureConfig) Clone() *RuntimeFeatureConfig {
	if m == nil {
		return nil
	}
	cloned := new(RuntimeFeatureConfig)
	*cloned = *m

	if m.Rules != nil {
		cloned.Rules = make([]*RuntimeFeatureConfig_RuntimeRule, len(m.Rules))
		for idx, v := range m.Rules {
			cloned.Rules[idx] = v.Clone()
		}
	}
	return cloned
}

type RuntimeFeatureConfig_RuntimeRule struct {
	ResourceCollectionName string   `protobuf:"bytes,1,opt,name=resource_collection_name,json=resourceCollectionName,proto3" json:"resource_collection_name,omitempty"`
	Status                 *Status  `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *RuntimeFeatureConfig_RuntimeRule) Reset()         { *m = RuntimeFeatureConfig_RuntimeRule{} }
func (m *RuntimeFeatureConfig_RuntimeRule) String() string { return proto.CompactTextString(m) }
func (*RuntimeFeatureConfig_RuntimeRule) ProtoMessage()    {}
func (*RuntimeFeatureConfig_RuntimeRule) Descriptor() ([]byte, []int) {
	return fileDescriptor_47419a359a3138ed, []int{2, 0}
}
func (m *RuntimeFeatureConfig_RuntimeRule) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RuntimeFeatureConfig_RuntimeRule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RuntimeFeatureConfig_RuntimeRule.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RuntimeFeatureConfig_RuntimeRule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RuntimeFeatureConfig_RuntimeRule.Merge(m, src)
}
func (m *RuntimeFeatureConfig_RuntimeRule) XXX_Size() int {
	return m.Size()
}
func (m *RuntimeFeatureConfig_RuntimeRule) XXX_DiscardUnknown() {
	xxx_messageInfo_RuntimeFeatureConfig_RuntimeRule.DiscardUnknown(m)
}

var xxx_messageInfo_RuntimeFeatureConfig_RuntimeRule proto.InternalMessageInfo

func (m *RuntimeFeatureConfig_RuntimeRule) GetResourceCollectionName() string {
	if m != nil {
		return m.ResourceCollectionName
	}
	return ""
}

func (m *RuntimeFeatureConfig_RuntimeRule) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *RuntimeFeatureConfig_RuntimeRule) MessageClone() proto.Message {
	return m.Clone()
}
func (m *RuntimeFeatureConfig_RuntimeRule) Clone() *RuntimeFeatureConfig_RuntimeRule {
	if m == nil {
		return nil
	}
	cloned := new(RuntimeFeatureConfig_RuntimeRule)
	*cloned = *m

	cloned.Status = m.Status.Clone()
	return cloned
}

type CollectorRuntimeConfig struct {
	RuntimeFeatureConfig []*RuntimeFeatureConfig `protobuf:"bytes,1,rep,name=runtime_feature_config,json=runtimeFeatureConfig,proto3" json:"runtime_feature_config,omitempty"`
	ResourceCollections  []*ResourceCollection   `protobuf:"bytes,2,rep,name=resource_collections,json=resourceCollections,proto3" json:"resource_collections,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *CollectorRuntimeConfig) Reset()         { *m = CollectorRuntimeConfig{} }
func (m *CollectorRuntimeConfig) String() string { return proto.CompactTextString(m) }
func (*CollectorRuntimeConfig) ProtoMessage()    {}
func (*CollectorRuntimeConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_47419a359a3138ed, []int{3}
}
func (m *CollectorRuntimeConfig) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CollectorRuntimeConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CollectorRuntimeConfig.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CollectorRuntimeConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CollectorRuntimeConfig.Merge(m, src)
}
func (m *CollectorRuntimeConfig) XXX_Size() int {
	return m.Size()
}
func (m *CollectorRuntimeConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_CollectorRuntimeConfig.DiscardUnknown(m)
}

var xxx_messageInfo_CollectorRuntimeConfig proto.InternalMessageInfo

func (m *CollectorRuntimeConfig) GetRuntimeFeatureConfig() []*RuntimeFeatureConfig {
	if m != nil {
		return m.RuntimeFeatureConfig
	}
	return nil
}

func (m *CollectorRuntimeConfig) GetResourceCollections() []*ResourceCollection {
	if m != nil {
		return m.ResourceCollections
	}
	return nil
}

func (m *CollectorRuntimeConfig) MessageClone() proto.Message {
	return m.Clone()
}
func (m *CollectorRuntimeConfig) Clone() *CollectorRuntimeConfig {
	if m == nil {
		return nil
	}
	cloned := new(CollectorRuntimeConfig)
	*cloned = *m

	if m.RuntimeFeatureConfig != nil {
		cloned.RuntimeFeatureConfig = make([]*RuntimeFeatureConfig, len(m.RuntimeFeatureConfig))
		for idx, v := range m.RuntimeFeatureConfig {
			cloned.RuntimeFeatureConfig[idx] = v.Clone()
		}
	}
	if m.ResourceCollections != nil {
		cloned.ResourceCollections = make([]*ResourceCollection, len(m.ResourceCollections))
		for idx, v := range m.ResourceCollections {
			cloned.ResourceCollections[idx] = v.Clone()
		}
	}
	return cloned
}

func init() {
	proto.RegisterEnum("storage.RuntimeFeature", RuntimeFeature_name, RuntimeFeature_value)
	proto.RegisterEnum("storage.CollectorRuntimeConfigACK_Action", CollectorRuntimeConfigACK_Action_name, CollectorRuntimeConfigACK_Action_value)
	proto.RegisterType((*CollectorRuntimeConfigACK)(nil), "storage.CollectorRuntimeConfigACK")
	proto.RegisterType((*Status)(nil), "storage.Status")
	proto.RegisterType((*Status_ProcessStatus)(nil), "storage.Status.ProcessStatus")
	proto.RegisterType((*Status_NetworkConnectionStatus)(nil), "storage.Status.NetworkConnectionStatus")
	proto.RegisterType((*Status_ListeningEndpointStatus)(nil), "storage.Status.ListeningEndpointStatus")
	proto.RegisterType((*RuntimeFeatureConfig)(nil), "storage.RuntimeFeatureConfig")
	proto.RegisterType((*RuntimeFeatureConfig_RuntimeRule)(nil), "storage.RuntimeFeatureConfig.RuntimeRule")
	proto.RegisterType((*CollectorRuntimeConfig)(nil), "storage.CollectorRuntimeConfig")
}

func init() {
	proto.RegisterFile("storage/collector_runtime_config.proto", fileDescriptor_47419a359a3138ed)
}

var fileDescriptor_47419a359a3138ed = []byte{
	// 638 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x54, 0xc1, 0x6e, 0xd3, 0x4a,
	0x14, 0x8d, 0x93, 0xf7, 0x92, 0xf4, 0x46, 0xc9, 0xcb, 0x9b, 0x56, 0x4d, 0x9a, 0xaa, 0x79, 0x7d,
	0x91, 0xa0, 0x2d, 0x12, 0x41, 0xb4, 0x2c, 0xd8, 0xa1, 0xd4, 0xb8, 0x10, 0xb5, 0x72, 0xca, 0x38,
	0x12, 0x12, 0x1b, 0x6b, 0xea, 0x4c, 0x23, 0xab, 0xee, 0x4c, 0x34, 0x1e, 0x8b, 0x7e, 0x0a, 0x0b,
	0x76, 0x7c, 0x07, 0x7b, 0x96, 0x7c, 0x02, 0x2a, 0x5b, 0x3e, 0x02, 0xd9, 0x33, 0x93, 0x26, 0xad,
	0xc3, 0xce, 0xbe, 0xf7, 0xdc, 0x73, 0xee, 0x3d, 0x73, 0x67, 0xe0, 0x71, 0x2c, 0xb9, 0x20, 0x53,
	0xfa, 0x2c, 0xe0, 0x51, 0x44, 0x03, 0xc9, 0x85, 0x2f, 0x12, 0x26, 0xc3, 0x6b, 0xea, 0x07, 0x9c,
	0x5d, 0x86, 0xd3, 0xfe, 0x4c, 0x70, 0xc9, 0x51, 0x45, 0xe3, 0x3a, 0xff, 0x9b, 0x02, 0x41, 0x63,
	0x9e, 0x88, 0x20, 0xc5, 0x65, 0x95, 0x21, 0x67, 0x0a, 0xdb, 0xfb, 0x6c, 0xc1, 0x96, 0x6d, 0xe8,
	0xb0, 0x62, 0xb3, 0x33, 0xb2, 0x81, 0x7d, 0x8a, 0xfe, 0x83, 0x5a, 0xc8, 0x62, 0x49, 0x58, 0x40,
	0xfd, 0x70, 0xd2, 0xb6, 0x76, 0xad, 0xfd, 0x35, 0x0c, 0x26, 0x34, 0x9c, 0xa0, 0x01, 0x94, 0x49,
	0x46, 0xd7, 0x2e, 0xee, 0x5a, 0xfb, 0x8d, 0xc3, 0x83, 0xbe, 0x96, 0xec, 0xaf, 0x24, 0xed, 0x0f,
	0xb2, 0x02, 0xac, 0x0b, 0x7b, 0xdb, 0x50, 0x56, 0x11, 0x54, 0x81, 0xd2, 0xc0, 0x3e, 0x6d, 0x16,
	0x50, 0x15, 0xfe, 0x72, 0xd3, 0x2f, 0xab, 0xf7, 0xab, 0x04, 0x65, 0x4f, 0x12, 0x99, 0xc4, 0xe8,
	0x04, 0x1a, 0x33, 0xc1, 0x03, 0x1a, 0xc7, 0x7e, 0x9c, 0x45, 0xb2, 0x76, 0x6a, 0x87, 0x3b, 0x73,
	0x49, 0x05, 0xec, 0x9f, 0x2b, 0x94, 0xfa, 0x7b, 0x5b, 0xc0, 0xf5, 0xd9, 0x62, 0x00, 0x51, 0xd8,
	0x62, 0x54, 0x7e, 0xe4, 0xe2, 0x2a, 0x75, 0x8d, 0x29, 0x37, 0x0c, 0x65, 0x31, 0xa3, 0xdc, 0xbb,
	0x4f, 0xe9, 0xaa, 0x02, 0x7b, 0x8e, 0x9f, 0x93, 0xb7, 0x58, 0x7e, 0x2a, 0x95, 0x89, 0xc2, 0x58,
	0x52, 0x16, 0xb2, 0xa9, 0x4f, 0xd9, 0x64, 0xc6, 0x43, 0x26, 0x8d, 0x4c, 0x29, 0x5f, 0xe6, 0xcc,
	0x14, 0x38, 0x1a, 0x7f, 0x27, 0x13, 0xe5, 0xa7, 0x3a, 0x07, 0x50, 0x5f, 0x9a, 0x17, 0xb5, 0xa1,
	0x42, 0x19, 0xb9, 0x88, 0xa8, 0x3a, 0xae, 0x2a, 0x36, 0xbf, 0x9d, 0x0b, 0x68, 0xad, 0x98, 0x63,
	0x75, 0x11, 0x7a, 0x0a, 0x88, 0x4c, 0xa7, 0x82, 0x4e, 0x89, 0xa4, 0x3e, 0xbd, 0x91, 0x54, 0x30,
	0x12, 0x65, 0x36, 0x55, 0xf1, 0xbf, 0xf3, 0x8c, 0xa3, 0x13, 0x9d, 0x23, 0x68, 0xad, 0x18, 0x62,
	0x51, 0xa3, 0xb8, 0xa4, 0x71, 0x5c, 0x85, 0xb2, 0xf2, 0xa5, 0xf7, 0xa5, 0x08, 0x1b, 0x7a, 0x5f,
	0x4e, 0x28, 0x91, 0x89, 0xd0, 0x6b, 0x83, 0x9e, 0x43, 0xe5, 0x52, 0x05, 0xb2, 0x06, 0x1b, 0x87,
	0xad, 0xb9, 0x77, 0xcb, 0x78, 0x6c, 0x70, 0xe8, 0x11, 0x34, 0x26, 0xf4, 0x92, 0x24, 0x91, 0x5c,
	0x3c, 0xdc, 0x35, 0x5c, 0xd7, 0x51, 0xdd, 0xd6, 0x2b, 0xf8, 0x5b, 0x24, 0x11, 0x4d, 0xcf, 0xa4,
	0xb4, 0x5f, 0x5b, 0x58, 0xe0, 0xbc, 0x3e, 0x4c, 0x10, 0x27, 0x11, 0xc5, 0xaa, 0xae, 0x33, 0x83,
	0xda, 0x42, 0x14, 0xbd, 0x84, 0x76, 0xce, 0x6d, 0xf3, 0x19, 0xb9, 0xa6, 0xfa, 0xfe, 0x6c, 0x9a,
	0xbc, 0x3d, 0x4f, 0xbb, 0xe4, 0x9a, 0xa2, 0x3d, 0x63, 0x83, 0xde, 0xc2, 0x7f, 0xee, 0xad, 0x07,
	0x36, 0x2e, 0x7d, 0xb5, 0x60, 0x33, 0xff, 0x7a, 0x21, 0x0f, 0x36, 0xcd, 0x93, 0xa0, 0x7d, 0xd0,
	0x4f, 0x43, 0xdb, 0xca, 0xc6, 0xdb, 0xf9, 0xe3, 0x78, 0x78, 0x43, 0xe4, 0x99, 0xef, 0xc2, 0x46,
	0xce, 0x48, 0x69, 0x9b, 0x29, 0xe5, 0xf6, 0x1d, 0xe5, 0x83, 0xb9, 0xf0, 0xfa, 0xc3, 0x59, 0xe3,
	0x27, 0xef, 0xa0, 0xb1, 0xac, 0x8e, 0xea, 0xb0, 0x76, 0x8e, 0x47, 0xb6, 0xe3, 0x79, 0x8e, 0xd7,
	0x2c, 0xa0, 0x16, 0xac, 0xbb, 0xce, 0xf8, 0xfd, 0x08, 0x9f, 0xfa, 0xf6, 0xc8, 0x75, 0x1d, 0x7b,
	0x3c, 0x1c, 0xb9, 0x5e, 0xd3, 0x4a, 0x13, 0x67, 0x43, 0x6f, 0xec, 0xb8, 0x43, 0xf7, 0x8d, 0xef,
	0xb8, 0xaf, 0xcf, 0x47, 0x43, 0x77, 0xec, 0x35, 0x8b, 0xc7, 0x2f, 0xbe, 0xdd, 0x76, 0xad, 0xef,
	0xb7, 0x5d, 0xeb, 0xc7, 0x6d, 0xd7, 0xfa, 0xf4, 0xb3, 0x5b, 0x80, 0xad, 0x90, 0xf7, 0x63, 0x49,
	0x82, 0x2b, 0xc1, 0x6f, 0xd4, 0x5b, 0x67, 0xfa, 0xfc, 0x60, 0xde, 0xc7, 0x8b, 0x72, 0x16, 0x3f,
	0xfa, 0x1d, 0x00, 0x00, 0xff, 0xff, 0x12, 0x2e, 0xd0, 0x28, 0x59, 0x05, 0x00, 0x00,
}

func (m *CollectorRuntimeConfigACK) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CollectorRuntimeConfigACK) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CollectorRuntimeConfigACK) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Action != 0 {
		i = encodeVarintCollectorRuntimeConfig(dAtA, i, uint64(m.Action))
		i--
		dAtA[i] = 0x10
	}
	if len(m.InstanceId) > 0 {
		i -= len(m.InstanceId)
		copy(dAtA[i:], m.InstanceId)
		i = encodeVarintCollectorRuntimeConfig(dAtA, i, uint64(len(m.InstanceId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Status) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Status) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Status) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Status != nil {
		{
			size := m.Status.Size()
			i -= size
			if _, err := m.Status.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	return len(dAtA) - i, nil
}

func (m *Status_ProcessStatus_) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Status_ProcessStatus_) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ProcessStatus != nil {
		{
			size, err := m.ProcessStatus.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintCollectorRuntimeConfig(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}
func (m *Status_NetworkConnectionStatus_) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Status_NetworkConnectionStatus_) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.NetworkConnectionStatus != nil {
		{
			size, err := m.NetworkConnectionStatus.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintCollectorRuntimeConfig(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	return len(dAtA) - i, nil
}
func (m *Status_ListeningEndpointStatus_) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Status_ListeningEndpointStatus_) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ListeningEndpointStatus != nil {
		{
			size, err := m.ListeningEndpointStatus.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintCollectorRuntimeConfig(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	return len(dAtA) - i, nil
}
func (m *Status_ProcessStatus) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Status_ProcessStatus) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Status_ProcessStatus) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Enabled {
		i--
		if m.Enabled {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Status_NetworkConnectionStatus) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Status_NetworkConnectionStatus) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Status_NetworkConnectionStatus) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.AggregateExternal {
		i--
		if m.AggregateExternal {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x10
	}
	if m.Enabled {
		i--
		if m.Enabled {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Status_ListeningEndpointStatus) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Status_ListeningEndpointStatus) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Status_ListeningEndpointStatus) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Enabled {
		i--
		if m.Enabled {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x10
	}
	return len(dAtA) - i, nil
}

func (m *RuntimeFeatureConfig) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RuntimeFeatureConfig) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RuntimeFeatureConfig) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Rules) > 0 {
		for iNdEx := len(m.Rules) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Rules[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintCollectorRuntimeConfig(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.DefaultStatus) > 0 {
		i -= len(m.DefaultStatus)
		copy(dAtA[i:], m.DefaultStatus)
		i = encodeVarintCollectorRuntimeConfig(dAtA, i, uint64(len(m.DefaultStatus)))
		i--
		dAtA[i] = 0x12
	}
	if m.Feature != 0 {
		i = encodeVarintCollectorRuntimeConfig(dAtA, i, uint64(m.Feature))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *RuntimeFeatureConfig_RuntimeRule) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RuntimeFeatureConfig_RuntimeRule) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RuntimeFeatureConfig_RuntimeRule) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Status != nil {
		{
			size, err := m.Status.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintCollectorRuntimeConfig(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.ResourceCollectionName) > 0 {
		i -= len(m.ResourceCollectionName)
		copy(dAtA[i:], m.ResourceCollectionName)
		i = encodeVarintCollectorRuntimeConfig(dAtA, i, uint64(len(m.ResourceCollectionName)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *CollectorRuntimeConfig) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CollectorRuntimeConfig) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CollectorRuntimeConfig) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ResourceCollections) > 0 {
		for iNdEx := len(m.ResourceCollections) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.ResourceCollections[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintCollectorRuntimeConfig(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.RuntimeFeatureConfig) > 0 {
		for iNdEx := len(m.RuntimeFeatureConfig) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.RuntimeFeatureConfig[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintCollectorRuntimeConfig(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func encodeVarintCollectorRuntimeConfig(dAtA []byte, offset int, v uint64) int {
	offset -= sovCollectorRuntimeConfig(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *CollectorRuntimeConfigACK) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.InstanceId)
	if l > 0 {
		n += 1 + l + sovCollectorRuntimeConfig(uint64(l))
	}
	if m.Action != 0 {
		n += 1 + sovCollectorRuntimeConfig(uint64(m.Action))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Status) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Status != nil {
		n += m.Status.Size()
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Status_ProcessStatus_) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ProcessStatus != nil {
		l = m.ProcessStatus.Size()
		n += 1 + l + sovCollectorRuntimeConfig(uint64(l))
	}
	return n
}
func (m *Status_NetworkConnectionStatus_) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.NetworkConnectionStatus != nil {
		l = m.NetworkConnectionStatus.Size()
		n += 1 + l + sovCollectorRuntimeConfig(uint64(l))
	}
	return n
}
func (m *Status_ListeningEndpointStatus_) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ListeningEndpointStatus != nil {
		l = m.ListeningEndpointStatus.Size()
		n += 1 + l + sovCollectorRuntimeConfig(uint64(l))
	}
	return n
}
func (m *Status_ProcessStatus) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Enabled {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Status_NetworkConnectionStatus) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Enabled {
		n += 2
	}
	if m.AggregateExternal {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Status_ListeningEndpointStatus) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Enabled {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RuntimeFeatureConfig) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Feature != 0 {
		n += 1 + sovCollectorRuntimeConfig(uint64(m.Feature))
	}
	l = len(m.DefaultStatus)
	if l > 0 {
		n += 1 + l + sovCollectorRuntimeConfig(uint64(l))
	}
	if len(m.Rules) > 0 {
		for _, e := range m.Rules {
			l = e.Size()
			n += 1 + l + sovCollectorRuntimeConfig(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RuntimeFeatureConfig_RuntimeRule) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ResourceCollectionName)
	if l > 0 {
		n += 1 + l + sovCollectorRuntimeConfig(uint64(l))
	}
	if m.Status != nil {
		l = m.Status.Size()
		n += 1 + l + sovCollectorRuntimeConfig(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CollectorRuntimeConfig) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.RuntimeFeatureConfig) > 0 {
		for _, e := range m.RuntimeFeatureConfig {
			l = e.Size()
			n += 1 + l + sovCollectorRuntimeConfig(uint64(l))
		}
	}
	if len(m.ResourceCollections) > 0 {
		for _, e := range m.ResourceCollections {
			l = e.Size()
			n += 1 + l + sovCollectorRuntimeConfig(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovCollectorRuntimeConfig(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozCollectorRuntimeConfig(x uint64) (n int) {
	return sovCollectorRuntimeConfig(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *CollectorRuntimeConfigACK) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCollectorRuntimeConfig
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CollectorRuntimeConfigACK: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CollectorRuntimeConfigACK: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InstanceId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCollectorRuntimeConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCollectorRuntimeConfig
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCollectorRuntimeConfig
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.InstanceId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Action", wireType)
			}
			m.Action = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCollectorRuntimeConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Action |= CollectorRuntimeConfigACK_Action(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipCollectorRuntimeConfig(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthCollectorRuntimeConfig
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Status) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCollectorRuntimeConfig
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Status: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Status: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProcessStatus", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCollectorRuntimeConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCollectorRuntimeConfig
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthCollectorRuntimeConfig
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &Status_ProcessStatus{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Status = &Status_ProcessStatus_{v}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NetworkConnectionStatus", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCollectorRuntimeConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCollectorRuntimeConfig
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthCollectorRuntimeConfig
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &Status_NetworkConnectionStatus{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Status = &Status_NetworkConnectionStatus_{v}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ListeningEndpointStatus", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCollectorRuntimeConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCollectorRuntimeConfig
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthCollectorRuntimeConfig
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &Status_ListeningEndpointStatus{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Status = &Status_ListeningEndpointStatus_{v}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCollectorRuntimeConfig(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthCollectorRuntimeConfig
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Status_ProcessStatus) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCollectorRuntimeConfig
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ProcessStatus: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ProcessStatus: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Enabled", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCollectorRuntimeConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Enabled = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipCollectorRuntimeConfig(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthCollectorRuntimeConfig
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Status_NetworkConnectionStatus) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCollectorRuntimeConfig
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: NetworkConnectionStatus: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: NetworkConnectionStatus: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Enabled", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCollectorRuntimeConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Enabled = bool(v != 0)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AggregateExternal", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCollectorRuntimeConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.AggregateExternal = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipCollectorRuntimeConfig(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthCollectorRuntimeConfig
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Status_ListeningEndpointStatus) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCollectorRuntimeConfig
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListeningEndpointStatus: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListeningEndpointStatus: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Enabled", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCollectorRuntimeConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Enabled = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipCollectorRuntimeConfig(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthCollectorRuntimeConfig
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RuntimeFeatureConfig) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCollectorRuntimeConfig
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RuntimeFeatureConfig: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RuntimeFeatureConfig: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Feature", wireType)
			}
			m.Feature = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCollectorRuntimeConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Feature |= RuntimeFeature(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DefaultStatus", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCollectorRuntimeConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCollectorRuntimeConfig
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCollectorRuntimeConfig
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DefaultStatus = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Rules", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCollectorRuntimeConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCollectorRuntimeConfig
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthCollectorRuntimeConfig
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Rules = append(m.Rules, &RuntimeFeatureConfig_RuntimeRule{})
			if err := m.Rules[len(m.Rules)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCollectorRuntimeConfig(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthCollectorRuntimeConfig
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RuntimeFeatureConfig_RuntimeRule) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCollectorRuntimeConfig
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RuntimeRule: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RuntimeRule: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResourceCollectionName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCollectorRuntimeConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCollectorRuntimeConfig
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCollectorRuntimeConfig
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ResourceCollectionName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCollectorRuntimeConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCollectorRuntimeConfig
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthCollectorRuntimeConfig
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Status == nil {
				m.Status = &Status{}
			}
			if err := m.Status.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCollectorRuntimeConfig(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthCollectorRuntimeConfig
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CollectorRuntimeConfig) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCollectorRuntimeConfig
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CollectorRuntimeConfig: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CollectorRuntimeConfig: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RuntimeFeatureConfig", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCollectorRuntimeConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCollectorRuntimeConfig
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthCollectorRuntimeConfig
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RuntimeFeatureConfig = append(m.RuntimeFeatureConfig, &RuntimeFeatureConfig{})
			if err := m.RuntimeFeatureConfig[len(m.RuntimeFeatureConfig)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResourceCollections", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCollectorRuntimeConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCollectorRuntimeConfig
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthCollectorRuntimeConfig
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ResourceCollections = append(m.ResourceCollections, &ResourceCollection{})
			if err := m.ResourceCollections[len(m.ResourceCollections)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCollectorRuntimeConfig(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthCollectorRuntimeConfig
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipCollectorRuntimeConfig(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowCollectorRuntimeConfig
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowCollectorRuntimeConfig
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowCollectorRuntimeConfig
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthCollectorRuntimeConfig
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupCollectorRuntimeConfig
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthCollectorRuntimeConfig
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthCollectorRuntimeConfig        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowCollectorRuntimeConfig          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupCollectorRuntimeConfig = fmt.Errorf("proto: unexpected end of group")
)
