// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: storage/runtime_filters.proto

package storage

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RuntimeFilter_RuntimeFilterFeatures int32

const (
	RuntimeFilter_EXTERNAL_IPS RuntimeFilter_RuntimeFilterFeatures = 0
	RuntimeFilter_PROCESSES    RuntimeFilter_RuntimeFilterFeatures = 1
)

var RuntimeFilter_RuntimeFilterFeatures_name = map[int32]string{
	0: "EXTERNAL_IPS",
	1: "PROCESSES",
}

var RuntimeFilter_RuntimeFilterFeatures_value = map[string]int32{
	"EXTERNAL_IPS": 0,
	"PROCESSES":    1,
}

func (x RuntimeFilter_RuntimeFilterFeatures) String() string {
	return proto.EnumName(RuntimeFilter_RuntimeFilterFeatures_name, int32(x))
}

func (RuntimeFilter_RuntimeFilterFeatures) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7f358327c0ea1214, []int{0, 0}
}

type RuntimeFilter_RuntimeFiltersType int32

const (
	RuntimeFilter_STRING RuntimeFilter_RuntimeFiltersType = 0
	RuntimeFilter_REGEX  RuntimeFilter_RuntimeFiltersType = 1
)

var RuntimeFilter_RuntimeFiltersType_name = map[int32]string{
	0: "STRING",
	1: "REGEX",
}

var RuntimeFilter_RuntimeFiltersType_value = map[string]int32{
	"STRING": 0,
	"REGEX":  1,
}

func (x RuntimeFilter_RuntimeFiltersType) String() string {
	return proto.EnumName(RuntimeFilter_RuntimeFiltersType_name, int32(x))
}

func (RuntimeFilter_RuntimeFiltersType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7f358327c0ea1214, []int{0, 1}
}

type RuntimeFilter_RuntimeFiltersEntity int32

const (
	RuntimeFilter_NAMESPACE  RuntimeFilter_RuntimeFiltersEntity = 0
	RuntimeFilter_DEPLOYMENT RuntimeFilter_RuntimeFiltersEntity = 1
)

var RuntimeFilter_RuntimeFiltersEntity_name = map[int32]string{
	0: "NAMESPACE",
	1: "DEPLOYMENT",
}

var RuntimeFilter_RuntimeFiltersEntity_value = map[string]int32{
	"NAMESPACE":  0,
	"DEPLOYMENT": 1,
}

func (x RuntimeFilter_RuntimeFiltersEntity) String() string {
	return proto.EnumName(RuntimeFilter_RuntimeFiltersEntity_name, int32(x))
}

func (RuntimeFilter_RuntimeFiltersEntity) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7f358327c0ea1214, []int{0, 2}
}

type RuntimeFilter struct {
	Feature              RuntimeFilter_RuntimeFilterFeatures `protobuf:"varint,1,opt,name=feature,proto3,enum=storage.RuntimeFilter_RuntimeFilterFeatures" json:"feature,omitempty"`
	Pattern              string                              `protobuf:"bytes,2,opt,name=pattern,proto3" json:"pattern,omitempty"`
	Type                 RuntimeFilter_RuntimeFiltersType    `protobuf:"varint,3,opt,name=type,proto3,enum=storage.RuntimeFilter_RuntimeFiltersType" json:"type,omitempty"`
	Entity               RuntimeFilter_RuntimeFiltersEntity  `protobuf:"varint,4,opt,name=entity,proto3,enum=storage.RuntimeFilter_RuntimeFiltersEntity" json:"entity,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *RuntimeFilter) Reset()         { *m = RuntimeFilter{} }
func (m *RuntimeFilter) String() string { return proto.CompactTextString(m) }
func (*RuntimeFilter) ProtoMessage()    {}
func (*RuntimeFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f358327c0ea1214, []int{0}
}
func (m *RuntimeFilter) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RuntimeFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RuntimeFilter.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RuntimeFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RuntimeFilter.Merge(m, src)
}
func (m *RuntimeFilter) XXX_Size() int {
	return m.Size()
}
func (m *RuntimeFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_RuntimeFilter.DiscardUnknown(m)
}

var xxx_messageInfo_RuntimeFilter proto.InternalMessageInfo

func (m *RuntimeFilter) GetFeature() RuntimeFilter_RuntimeFilterFeatures {
	if m != nil {
		return m.Feature
	}
	return RuntimeFilter_EXTERNAL_IPS
}

func (m *RuntimeFilter) GetPattern() string {
	if m != nil {
		return m.Pattern
	}
	return ""
}

func (m *RuntimeFilter) GetType() RuntimeFilter_RuntimeFiltersType {
	if m != nil {
		return m.Type
	}
	return RuntimeFilter_STRING
}

func (m *RuntimeFilter) GetEntity() RuntimeFilter_RuntimeFiltersEntity {
	if m != nil {
		return m.Entity
	}
	return RuntimeFilter_NAMESPACE
}

func (m *RuntimeFilter) MessageClone() proto.Message {
	return m.Clone()
}
func (m *RuntimeFilter) Clone() *RuntimeFilter {
	if m == nil {
		return nil
	}
	cloned := new(RuntimeFilter)
	*cloned = *m

	return cloned
}

type RuntimeFilters struct {
	Id                   string         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" sql:"pk,type(uuid)"`                                      // @gotags: sql:"pk,type(uuid)"
	ClusterName          string         `protobuf:"bytes,2,opt,name=cluster_name,json=clusterName,proto3" json:"cluster_name,omitempty" search:"Cluster Name,store"` // @gotags: search:"Cluster Name,store"
	Filter               *RuntimeFilter `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty" search:"Runtime Filter,store"`                              // @gotags: search:"Runtime Filter,store"
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *RuntimeFilters) Reset()         { *m = RuntimeFilters{} }
func (m *RuntimeFilters) String() string { return proto.CompactTextString(m) }
func (*RuntimeFilters) ProtoMessage()    {}
func (*RuntimeFilters) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f358327c0ea1214, []int{1}
}
func (m *RuntimeFilters) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RuntimeFilters) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RuntimeFilters.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RuntimeFilters) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RuntimeFilters.Merge(m, src)
}
func (m *RuntimeFilters) XXX_Size() int {
	return m.Size()
}
func (m *RuntimeFilters) XXX_DiscardUnknown() {
	xxx_messageInfo_RuntimeFilters.DiscardUnknown(m)
}

var xxx_messageInfo_RuntimeFilters proto.InternalMessageInfo

func (m *RuntimeFilters) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *RuntimeFilters) GetClusterName() string {
	if m != nil {
		return m.ClusterName
	}
	return ""
}

func (m *RuntimeFilters) GetFilter() *RuntimeFilter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (m *RuntimeFilters) MessageClone() proto.Message {
	return m.Clone()
}
func (m *RuntimeFilters) Clone() *RuntimeFilters {
	if m == nil {
		return nil
	}
	cloned := new(RuntimeFilters)
	*cloned = *m

	cloned.Filter = m.Filter.Clone()
	return cloned
}

func init() {
	proto.RegisterEnum("storage.RuntimeFilter_RuntimeFilterFeatures", RuntimeFilter_RuntimeFilterFeatures_name, RuntimeFilter_RuntimeFilterFeatures_value)
	proto.RegisterEnum("storage.RuntimeFilter_RuntimeFiltersType", RuntimeFilter_RuntimeFiltersType_name, RuntimeFilter_RuntimeFiltersType_value)
	proto.RegisterEnum("storage.RuntimeFilter_RuntimeFiltersEntity", RuntimeFilter_RuntimeFiltersEntity_name, RuntimeFilter_RuntimeFiltersEntity_value)
	proto.RegisterType((*RuntimeFilter)(nil), "storage.RuntimeFilter")
	proto.RegisterType((*RuntimeFilters)(nil), "storage.RuntimeFilters")
}

func init() { proto.RegisterFile("storage/runtime_filters.proto", fileDescriptor_7f358327c0ea1214) }

var fileDescriptor_7f358327c0ea1214 = []byte{
	// 361 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0xc1, 0x6a, 0xea, 0x40,
	0x14, 0x86, 0x33, 0xea, 0x8d, 0xe4, 0xa8, 0x21, 0x1c, 0xee, 0xbd, 0x64, 0x71, 0x6f, 0xb0, 0x59,
	0x59, 0x2c, 0x29, 0x58, 0x0a, 0xdd, 0x74, 0x61, 0xed, 0x28, 0x82, 0xc6, 0x30, 0xc9, 0xc2, 0x76,
	0x23, 0x69, 0x1d, 0x4b, 0x40, 0x63, 0x48, 0xc6, 0x85, 0xcf, 0xd1, 0x4d, 0x1f, 0xa9, 0xcb, 0x3e,
	0x42, 0xb1, 0x2f, 0xd1, 0x65, 0xe9, 0x18, 0x17, 0x52, 0x17, 0x2e, 0xcf, 0xcc, 0xff, 0xfd, 0xfc,
	0xfc, 0xe7, 0xc0, 0xff, 0x4c, 0x2c, 0xd3, 0xf0, 0x89, 0x9f, 0xa7, 0xab, 0x58, 0x44, 0x0b, 0x3e,
	0x99, 0x45, 0x73, 0xc1, 0xd3, 0xcc, 0x49, 0xd2, 0xa5, 0x58, 0x62, 0x39, 0xff, 0xb6, 0x9f, 0x8b,
	0x50, 0x63, 0x5b, 0x49, 0x57, 0x2a, 0xb0, 0x0b, 0xe5, 0x19, 0x0f, 0xc5, 0x2a, 0xe5, 0x26, 0xa9,
	0x93, 0x86, 0xde, 0x3a, 0x73, 0x72, 0xb1, 0xb3, 0x27, 0xdc, 0x9f, 0xba, 0x5b, 0x24, 0x63, 0x3b,
	0x18, 0x4d, 0x28, 0x27, 0xa1, 0x10, 0x3c, 0x8d, 0xcd, 0x42, 0x9d, 0x34, 0x34, 0xb6, 0x1b, 0xf1,
	0x1a, 0x4a, 0x62, 0x9d, 0x70, 0xb3, 0x28, 0xed, 0x4f, 0x8f, 0xb1, 0xcf, 0x82, 0x75, 0xc2, 0x99,
	0xc4, 0xb0, 0x03, 0x2a, 0x8f, 0x45, 0x24, 0xd6, 0x66, 0x49, 0x1a, 0x34, 0x8f, 0x32, 0xa0, 0x12,
	0x61, 0x39, 0x6a, 0x5f, 0xc1, 0x9f, 0x83, 0xf9, 0xd1, 0x80, 0x2a, 0x1d, 0x07, 0x94, 0xb9, 0xed,
	0xc1, 0xa4, 0xef, 0xf9, 0x86, 0x82, 0x35, 0xd0, 0x3c, 0x36, 0xea, 0x50, 0xdf, 0xa7, 0xbe, 0x41,
	0xec, 0x26, 0xe0, 0xcf, 0x68, 0x08, 0xa0, 0xfa, 0x01, 0xeb, 0xbb, 0x3d, 0x43, 0x41, 0x0d, 0x7e,
	0x31, 0xda, 0xa3, 0x63, 0x83, 0xd8, 0x97, 0xf0, 0xfb, 0x50, 0x8c, 0x6f, 0x4f, 0xb7, 0x3d, 0xa4,
	0xbe, 0xd7, 0xee, 0x50, 0x43, 0x41, 0x1d, 0xe0, 0x96, 0x7a, 0x83, 0xd1, 0xdd, 0x90, 0xba, 0x81,
	0x41, 0xec, 0x0c, 0xf4, 0x7d, 0x0c, 0x75, 0x28, 0x44, 0x53, 0xb9, 0x10, 0x8d, 0x15, 0xa2, 0x29,
	0x9e, 0x40, 0xf5, 0x71, 0xbe, 0xca, 0x04, 0x4f, 0x27, 0x71, 0xb8, 0xe0, 0x79, 0xc5, 0x95, 0xfc,
	0xcd, 0x0d, 0x17, 0x1c, 0x1d, 0x50, 0xb7, 0x4b, 0x97, 0x45, 0x57, 0x5a, 0x7f, 0x0f, 0xf7, 0xc4,
	0x72, 0xd5, 0xcd, 0xbf, 0xd7, 0x8d, 0x45, 0xde, 0x36, 0x16, 0x79, 0xdf, 0x58, 0xe4, 0xe5, 0xc3,
	0x52, 0xee, 0x77, 0x57, 0xf2, 0x49, 0xc8, 0x83, 0x2a, 0x0f, 0xe7, 0xe2, 0x2b, 0x00, 0x00, 0xff,
	0xff, 0xc8, 0x88, 0x85, 0xd4, 0x59, 0x02, 0x00, 0x00,
}

func (m *RuntimeFilter) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RuntimeFilter) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RuntimeFilter) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Entity != 0 {
		i = encodeVarintRuntimeFilters(dAtA, i, uint64(m.Entity))
		i--
		dAtA[i] = 0x20
	}
	if m.Type != 0 {
		i = encodeVarintRuntimeFilters(dAtA, i, uint64(m.Type))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Pattern) > 0 {
		i -= len(m.Pattern)
		copy(dAtA[i:], m.Pattern)
		i = encodeVarintRuntimeFilters(dAtA, i, uint64(len(m.Pattern)))
		i--
		dAtA[i] = 0x12
	}
	if m.Feature != 0 {
		i = encodeVarintRuntimeFilters(dAtA, i, uint64(m.Feature))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *RuntimeFilters) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RuntimeFilters) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RuntimeFilters) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Filter != nil {
		{
			size, err := m.Filter.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRuntimeFilters(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClusterName) > 0 {
		i -= len(m.ClusterName)
		copy(dAtA[i:], m.ClusterName)
		i = encodeVarintRuntimeFilters(dAtA, i, uint64(len(m.ClusterName)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintRuntimeFilters(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintRuntimeFilters(dAtA []byte, offset int, v uint64) int {
	offset -= sovRuntimeFilters(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *RuntimeFilter) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Feature != 0 {
		n += 1 + sovRuntimeFilters(uint64(m.Feature))
	}
	l = len(m.Pattern)
	if l > 0 {
		n += 1 + l + sovRuntimeFilters(uint64(l))
	}
	if m.Type != 0 {
		n += 1 + sovRuntimeFilters(uint64(m.Type))
	}
	if m.Entity != 0 {
		n += 1 + sovRuntimeFilters(uint64(m.Entity))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RuntimeFilters) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovRuntimeFilters(uint64(l))
	}
	l = len(m.ClusterName)
	if l > 0 {
		n += 1 + l + sovRuntimeFilters(uint64(l))
	}
	if m.Filter != nil {
		l = m.Filter.Size()
		n += 1 + l + sovRuntimeFilters(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovRuntimeFilters(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozRuntimeFilters(x uint64) (n int) {
	return sovRuntimeFilters(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *RuntimeFilter) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRuntimeFilters
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RuntimeFilter: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RuntimeFilter: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Feature", wireType)
			}
			m.Feature = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRuntimeFilters
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Feature |= RuntimeFilter_RuntimeFilterFeatures(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pattern", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRuntimeFilters
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRuntimeFilters
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRuntimeFilters
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Pattern = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			m.Type = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRuntimeFilters
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Type |= RuntimeFilter_RuntimeFiltersType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Entity", wireType)
			}
			m.Entity = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRuntimeFilters
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Entity |= RuntimeFilter_RuntimeFiltersEntity(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipRuntimeFilters(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthRuntimeFilters
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RuntimeFilters) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRuntimeFilters
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RuntimeFilters: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RuntimeFilters: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRuntimeFilters
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRuntimeFilters
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRuntimeFilters
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClusterName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRuntimeFilters
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRuntimeFilters
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRuntimeFilters
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClusterName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Filter", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRuntimeFilters
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRuntimeFilters
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRuntimeFilters
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Filter == nil {
				m.Filter = &RuntimeFilter{}
			}
			if err := m.Filter.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRuntimeFilters(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthRuntimeFilters
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipRuntimeFilters(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowRuntimeFilters
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowRuntimeFilters
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowRuntimeFilters
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthRuntimeFilters
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupRuntimeFilters
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthRuntimeFilters
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthRuntimeFilters        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowRuntimeFilters          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupRuntimeFilters = fmt.Errorf("proto: unexpected end of group")
)
